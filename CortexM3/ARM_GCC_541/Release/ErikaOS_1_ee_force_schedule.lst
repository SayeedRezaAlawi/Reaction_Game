ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_force_schedule.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_ForceSchedule,"ax",%progbits
  20              		.align	1
  21              		.global	EE_oo_ForceSchedule
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_ForceSchedule, %function
  25              	EE_oo_ForceSchedule:
  26              	.LFB70:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_force_schedule.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * CVS: $Id: ee_force_schedule.c,v 1.2 2006/06/08 20:40:42 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #include "ErikaOS_1_ee_internal.inc"
  53:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  54:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** /* Force Scheduling: 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  56:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - This is an internal function that has been inserted in the OO
  57:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       implementation because it is also needed because counters relies
  58:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       on such a rescheduling point when the counter increment is
  59:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       called inside a task (a call to this function is not needed when
  60:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       calling the counter increment inside an interrupt handler.
  61:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  62:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - no checks are done at all; it is the user responsibility to take
  63:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       care that this function is called in the proper place.
  64:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - the typical behavior of this function is -nothing-. It will just
  66:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       implement a preemption point for the functions that need it and
  67:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       that have not a preemption point hardwired in their code.
  68:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  69:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     - return values:
  70:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       Standard status: nothing
  71:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       Extended status: E_OS_CALLEVEL, if it was called at interrupt level
  72:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** */
  74:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  75:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #ifndef __PRIVATE_FORCESCHEDULE__
  76:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** StatusType EE_oo_ForceSchedule( void )
  78:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** {
  28              		.loc 1 78 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 3


  37              		.cfi_offset 14, -4
  38              	.LBB56:
  39              	.LBB57:
  40              	.LBB58:
  41              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 4


  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 5


 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 6


 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 7


 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  42              		.loc 2 260 0
  43              		.syntax unified
  44              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  45 0002 EFF31084 		mrs r4, primask
  46              	@ 0 "" 2
  47              	.LVL0:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  48              		.loc 2 261 0
  49              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  50 0006 72B6     		cpsid i
  51              	@ 0 "" 2
  52              	.LVL1:
  53              		.thumb
  54              		.syntax unified
  55              	.LBE58:
  56              	.LBE57:
  57              	.LBE56:
  58              	.LBB59:
  59              	.LBB60:
  60              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 8


   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 9


  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
  61              		.loc 3 79 0
  62 0008 164B     		ldr	r3, .L14
  63              	.LBE60:
  64              	.LBE59:
  79:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* Error Value */
  80:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   register StatusType ev;
  81:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* Primitive Lock Procedure */
  82:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  83:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  84:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_FORCESCHEDULE);
  85:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  86:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_as_monitoring_the_stack();
  87:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #ifdef EE_SERVICE_PROTECTION__
  89:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /*  [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
  90:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
  91:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       then the Operating System shall ignore the service AND shall return
  92:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
  93:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   if ( EE_oo_check_disableint_error() ) {
  94:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     ev = E_OS_DISABLEDINT;
  95:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   } else
  96:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #endif /* EE_SERVICE_PROTECTION__ */ 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
  98:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #if (defined(__OO_EXTENDED_STATUS__)) || (defined(EE_SERVICE_PROTECTION__))
  99:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
 100:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       AND is currently not inside a Category 1 ISR the Operating System module
 101:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       shall not perform the requested action (the service call shall have no
 102:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
 103:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   /* check for a call at interrupt level: This must be the FIRST check!*/
 105:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   if ( (EE_hal_get_IRQ_nesting_level() != 0U)
  65              		.loc 1 105 0
  66 000a 1B68     		ldr	r3, [r3]
  67 000c 33BB     		cbnz	r3, .L3
  68              	.LBB61:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 10


  69              	.LBB62:
  70              	.LBB63:
  71              	.LBB64:
  72              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 11


  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 12


 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 13


 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 14


 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  73              		.loc 4 240 0
  74 000e 164B     		ldr	r3, .L14+4
  75 0010 1D68     		ldr	r5, [r3]
  76              	.LBE64:
  77              	.LBE63:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 15


 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 16


 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 17


 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 18


 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 19


 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 20


 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 21


 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
  78              		.loc 4 646 0
  79 0012 FFF7FEFF 		bl	EE_rq_queryfirst
  80              	.LVL2:
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
  81              		.loc 4 671 0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 22


  82 0016 461C     		adds	r6, r0, #1
  83 0018 20D0     		beq	.L3
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
  84              		.loc 4 674 0
  85 001a 144B     		ldr	r3, .L14+8
  86 001c 1449     		ldr	r1, .L14+12
  87 001e 1A68     		ldr	r2, [r3]
  88 0020 51F82010 		ldr	r1, [r1, r0, lsl #2]
  89 0024 9142     		cmp	r1, r2
  90 0026 19D9     		bls	.L3
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
  91              		.loc 4 676 0
  92 0028 691C     		adds	r1, r5, #1
  93 002a 1249     		ldr	r1, .L14+16
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
  94              		.loc 4 679 0
  95 002c 1CBF     		itt	ne
  96 002e 0226     		movne	r6, #2
  97 0030 41F82560 		strne	r6, [r1, r5, lsl #2]
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
  98              		.loc 4 685 0
  99 0034 104D     		ldr	r5, .L14+20
 100 0036 55F82050 		ldr	r5, [r5, r0, lsl #2]
 101 003a 2A43     		orrs	r2, r2, r5
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 102              		.loc 4 687 0
 103 003c 0025     		movs	r5, #0
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 104              		.loc 4 685 0
 105 003e 1A60     		str	r2, [r3]
 106              		.loc 4 687 0
 107 0040 41F82050 		str	r5, [r1, r0, lsl #2]
 108              	.LVL3:
 109              	.LBB65:
 110              	.LBB66:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 111              		.loc 4 566 0
 112 0044 FFF7FEFF 		bl	EE_rq2stk_exchange
 113              	.LVL4:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 114              		.loc 4 567 0
 115 0048 0C4A     		ldr	r2, .L14+24
 116 004a 52F82010 		ldr	r1, [r2, r0, lsl #2]
 117 004e 19B1     		cbz	r1, .L6
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 118              		.loc 4 569 0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 23


 119 0050 42F82050 		str	r5, [r2, r0, lsl #2]
 120              	.LVL5:
 121              	.LBB67:
 122              	.LBB68:
 123              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 24


  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 25


 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 124              		.loc 5 154 0
 125 0054 40F00040 		orr	r0, r0, #-2147483648
 126              	.LVL6:
 127              	.L6:
 128              	.LBE68:
 129              	.LBE67:
 130              	.LBB69:
 131              	.LBB70:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 26


 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 132              		.loc 5 167 0
 133 0058 FFF7FEFF 		bl	EE_cortex_mx_change_context
 134              	.LVL7:
 135              	.L3:
 136              	.LBE70:
 137              	.LBE69:
 138              	.LBE66:
 139              	.LBE65:
 140              	.LBE62:
 141              	.LBE61:
 142              	.LBB71:
 143              	.LBB72:
 144              	.LBB73:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 145              		.loc 2 232 0
 146              		.syntax unified
 147              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 148 005c 84F31088 		msr primask, r4
 149              	@ 0 "" 2
 150              	.LVL8:
 151              		.thumb
 152              		.syntax unified
 153              	.LBE73:
 154              	.LBE72:
 155              	.LBE71:
 106:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #if !defined (EE_SERVICE_PROTECTION__)
 107:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   ) /* If EE_SERVICE_PROTECTION__ is not defined the succeeding
 108:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 	 * check is always FALSE, hence it is not needed  */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #else
 110:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   || (EE_as_get_execution_context() > TASK_Context) )
 111:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #endif
 112:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   {
 113:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     ev = E_OS_CALLEVEL;
 114:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   } else
 115:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** #endif /* __OO_EXTENDED_STATUS__ || EE_AS_SERVICE_PROTECTION_ */
 116:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   {
 117:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     EE_oo_preemption_point();
 118:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     ev = E_OK;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   }
 120:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
 121:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   if ( ev != E_OK )
 122:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   {
 123:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     EE_ORTI_set_lasterror(ev);
 124:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****     EE_oo_notify_error_service(OSServiceId_ForceSchedule, ev);
 125:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   }
 126:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_FORCESCHEDULE);
 128:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   EE_OS_EXIT_CRITICAL_SECTION();
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 27


 129:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** 
 130:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c ****   return E_OK;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_force_schedule.c **** }
 156              		.loc 1 131 0
 157 0060 0020     		movs	r0, #0
 158 0062 70BD     		pop	{r4, r5, r6, pc}
 159              	.L15:
 160              		.align	2
 161              	.L14:
 162 0064 00000000 		.word	EE_IRQ_nesting_level
 163 0068 00000000 		.word	EE_stkfirst
 164 006c 00000000 		.word	EE_sys_ceiling
 165 0070 00000000 		.word	EE_th_ready_prio
 166 0074 00000000 		.word	EE_th_status
 167 0078 00000000 		.word	EE_th_dispatch_prio
 168 007c 00000000 		.word	EE_th_waswaiting
 169              		.cfi_endproc
 170              	.LFE70:
 171              		.size	EE_oo_ForceSchedule, .-EE_oo_ForceSchedule
 172              		.text
 173              	.Letext0:
 174              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 175              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 176              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 177              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 178              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 179              		.section	.debug_info,"",%progbits
 180              	.Ldebug_info0:
 181 0000 3B070000 		.4byte	0x73b
 182 0004 0400     		.2byte	0x4
 183 0006 00000000 		.4byte	.Ldebug_abbrev0
 184 000a 04       		.byte	0x4
 185 000b 01       		.uleb128 0x1
 186 000c 56010000 		.4byte	.LASF99
 187 0010 0C       		.byte	0xc
 188 0011 D0000000 		.4byte	.LASF100
 189 0015 D2060000 		.4byte	.LASF101
 190 0019 00000000 		.4byte	.Ldebug_ranges0+0
 191 001d 00000000 		.4byte	0
 192 0021 00000000 		.4byte	.Ldebug_line0
 193 0025 02       		.uleb128 0x2
 194 0026 01       		.byte	0x1
 195 0027 06       		.byte	0x6
 196 0028 4A010000 		.4byte	.LASF0
 197 002c 02       		.uleb128 0x2
 198 002d 01       		.byte	0x1
 199 002e 08       		.byte	0x8
 200 002f 4D050000 		.4byte	.LASF1
 201 0033 02       		.uleb128 0x2
 202 0034 02       		.byte	0x2
 203 0035 05       		.byte	0x5
 204 0036 82050000 		.4byte	.LASF2
 205 003a 02       		.uleb128 0x2
 206 003b 02       		.byte	0x2
 207 003c 07       		.byte	0x7
 208 003d EE020000 		.4byte	.LASF3
 209 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 28


 210 0042 04       		.byte	0x4
 211 0043 05       		.byte	0x5
 212 0044 1D020000 		.4byte	.LASF4
 213 0048 02       		.uleb128 0x2
 214 0049 04       		.byte	0x4
 215 004a 07       		.byte	0x7
 216 004b C6020000 		.4byte	.LASF5
 217 004f 02       		.uleb128 0x2
 218 0050 08       		.byte	0x8
 219 0051 05       		.byte	0x5
 220 0052 3C010000 		.4byte	.LASF6
 221 0056 02       		.uleb128 0x2
 222 0057 08       		.byte	0x8
 223 0058 07       		.byte	0x7
 224 0059 80000000 		.4byte	.LASF7
 225 005d 03       		.uleb128 0x3
 226 005e 04       		.byte	0x4
 227 005f 05       		.byte	0x5
 228 0060 696E7400 		.ascii	"int\000"
 229 0064 02       		.uleb128 0x2
 230 0065 04       		.byte	0x4
 231 0066 07       		.byte	0x7
 232 0067 A9020000 		.4byte	.LASF8
 233 006b 02       		.uleb128 0x2
 234 006c 08       		.byte	0x8
 235 006d 04       		.byte	0x4
 236 006e 1C040000 		.4byte	.LASF9
 237 0072 04       		.uleb128 0x4
 238 0073 85030000 		.4byte	.LASF10
 239 0077 06       		.byte	0x6
 240 0078 3E       		.byte	0x3e
 241 0079 2C000000 		.4byte	0x2c
 242 007d 04       		.uleb128 0x4
 243 007e B6020000 		.4byte	.LASF11
 244 0082 06       		.byte	0x6
 245 0083 3F       		.byte	0x3f
 246 0084 25000000 		.4byte	0x25
 247 0088 04       		.uleb128 0x4
 248 0089 04050000 		.4byte	.LASF12
 249 008d 06       		.byte	0x6
 250 008e 52       		.byte	0x52
 251 008f 3A000000 		.4byte	0x3a
 252 0093 04       		.uleb128 0x4
 253 0094 99070000 		.4byte	.LASF13
 254 0098 06       		.byte	0x6
 255 0099 53       		.byte	0x53
 256 009a 5D000000 		.4byte	0x5d
 257 009e 04       		.uleb128 0x4
 258 009f 8F070000 		.4byte	.LASF14
 259 00a3 06       		.byte	0x6
 260 00a4 54       		.byte	0x54
 261 00a5 64000000 		.4byte	0x64
 262 00a9 04       		.uleb128 0x4
 263 00aa BE020000 		.4byte	.LASF15
 264 00ae 02       		.byte	0x2
 265 00af 4D       		.byte	0x4d
 266 00b0 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 29


 267 00b4 04       		.uleb128 0x4
 268 00b5 FD070000 		.4byte	.LASF16
 269 00b9 02       		.byte	0x2
 270 00ba 4F       		.byte	0x4f
 271 00bb 9E000000 		.4byte	0x9e
 272 00bf 04       		.uleb128 0x4
 273 00c0 60000000 		.4byte	.LASF17
 274 00c4 02       		.byte	0x2
 275 00c5 54       		.byte	0x54
 276 00c6 A9000000 		.4byte	0xa9
 277 00ca 04       		.uleb128 0x4
 278 00cb 8A020000 		.4byte	.LASF18
 279 00cf 02       		.byte	0x2
 280 00d0 78       		.byte	0x78
 281 00d1 93000000 		.4byte	0x93
 282 00d5 05       		.uleb128 0x5
 283 00d6 B3030000 		.4byte	.LASF19
 284 00da 07       		.byte	0x7
 285 00db 1101     		.2byte	0x111
 286 00dd 88000000 		.4byte	0x88
 287 00e1 05       		.uleb128 0x5
 288 00e2 23010000 		.4byte	.LASF20
 289 00e6 07       		.byte	0x7
 290 00e7 F701     		.2byte	0x1f7
 291 00e9 CA000000 		.4byte	0xca
 292 00ed 05       		.uleb128 0x5
 293 00ee 34000000 		.4byte	.LASF21
 294 00f2 07       		.byte	0x7
 295 00f3 3502     		.2byte	0x235
 296 00f5 A9000000 		.4byte	0xa9
 297 00f9 05       		.uleb128 0x5
 298 00fa D8050000 		.4byte	.LASF22
 299 00fe 07       		.byte	0x7
 300 00ff 5D02     		.2byte	0x25d
 301 0101 A9000000 		.4byte	0xa9
 302 0105 05       		.uleb128 0x5
 303 0106 8E030000 		.4byte	.LASF23
 304 010a 07       		.byte	0x7
 305 010b 6C02     		.2byte	0x26c
 306 010d A9000000 		.4byte	0xa9
 307 0111 06       		.uleb128 0x6
 308 0112 0C       		.byte	0xc
 309 0113 07       		.byte	0x7
 310 0114 7202     		.2byte	0x272
 311 0116 42010000 		.4byte	0x142
 312 011a 07       		.uleb128 0x7
 313 011b 2C010000 		.4byte	.LASF24
 314 011f 07       		.byte	0x7
 315 0120 7302     		.2byte	0x273
 316 0122 ED000000 		.4byte	0xed
 317 0126 00       		.byte	0
 318 0127 07       		.uleb128 0x7
 319 0128 63040000 		.4byte	.LASF25
 320 012c 07       		.byte	0x7
 321 012d 7402     		.2byte	0x274
 322 012f ED000000 		.4byte	0xed
 323 0133 04       		.byte	0x4
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 30


 324 0134 07       		.uleb128 0x7
 325 0135 70020000 		.4byte	.LASF26
 326 0139 07       		.byte	0x7
 327 013a 7502     		.2byte	0x275
 328 013c ED000000 		.4byte	0xed
 329 0140 08       		.byte	0x8
 330 0141 00       		.byte	0
 331 0142 05       		.uleb128 0x5
 332 0143 91050000 		.4byte	.LASF27
 333 0147 07       		.byte	0x7
 334 0148 7A02     		.2byte	0x27a
 335 014a 11010000 		.4byte	0x111
 336 014e 06       		.uleb128 0x6
 337 014f 08       		.byte	0x8
 338 0150 07       		.byte	0x7
 339 0151 7D02     		.2byte	0x27d
 340 0153 72010000 		.4byte	0x172
 341 0157 07       		.uleb128 0x7
 342 0158 91020000 		.4byte	.LASF28
 343 015c 07       		.byte	0x7
 344 015d 7E02     		.2byte	0x27e
 345 015f ED000000 		.4byte	0xed
 346 0163 00       		.byte	0
 347 0164 07       		.uleb128 0x7
 348 0165 D2050000 		.4byte	.LASF29
 349 0169 07       		.byte	0x7
 350 016a 7F02     		.2byte	0x27f
 351 016c F9000000 		.4byte	0xf9
 352 0170 04       		.byte	0x4
 353 0171 00       		.byte	0
 354 0172 05       		.uleb128 0x5
 355 0173 F1010000 		.4byte	.LASF30
 356 0177 07       		.byte	0x7
 357 0178 8002     		.2byte	0x280
 358 017a 4E010000 		.4byte	0x14e
 359 017e 08       		.uleb128 0x8
 360 017f 01       		.byte	0x1
 361 0180 2C000000 		.4byte	0x2c
 362 0184 07       		.byte	0x7
 363 0185 8A02     		.2byte	0x28a
 364 0187 98010000 		.4byte	0x198
 365 018b 09       		.uleb128 0x9
 366 018c 5B050000 		.4byte	.LASF31
 367 0190 00       		.byte	0
 368 0191 09       		.uleb128 0x9
 369 0192 0E050000 		.4byte	.LASF32
 370 0196 01       		.byte	0x1
 371 0197 00       		.byte	0
 372 0198 05       		.uleb128 0x5
 373 0199 19030000 		.4byte	.LASF33
 374 019d 07       		.byte	0x7
 375 019e 8D02     		.2byte	0x28d
 376 01a0 7E010000 		.4byte	0x17e
 377 01a4 05       		.uleb128 0x5
 378 01a5 5B030000 		.4byte	.LASF34
 379 01a9 07       		.byte	0x7
 380 01aa 9002     		.2byte	0x290
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 31


 381 01ac 98010000 		.4byte	0x198
 382 01b0 06       		.uleb128 0x6
 383 01b1 0C       		.byte	0xc
 384 01b2 07       		.byte	0x7
 385 01b3 9402     		.2byte	0x294
 386 01b5 DF010000 		.4byte	0x1df
 387 01b9 0A       		.uleb128 0xa
 388 01ba 6300     		.ascii	"c\000"
 389 01bc 07       		.byte	0x7
 390 01bd 9602     		.2byte	0x296
 391 01bf 05010000 		.4byte	0x105
 392 01c3 00       		.byte	0
 393 01c4 07       		.uleb128 0x7
 394 01c5 3C060000 		.4byte	.LASF35
 395 01c9 07       		.byte	0x7
 396 01ca 9802     		.2byte	0x298
 397 01cc F9000000 		.4byte	0xf9
 398 01d0 04       		.byte	0x4
 399 01d1 07       		.uleb128 0x7
 400 01d2 E9020000 		.4byte	.LASF36
 401 01d6 07       		.byte	0x7
 402 01d7 9A02     		.2byte	0x29a
 403 01d9 A4010000 		.4byte	0x1a4
 404 01dd 08       		.byte	0x8
 405 01de 00       		.byte	0
 406 01df 05       		.uleb128 0x5
 407 01e0 05010000 		.4byte	.LASF37
 408 01e4 07       		.byte	0x7
 409 01e5 9B02     		.2byte	0x29b
 410 01e7 B0010000 		.4byte	0x1b0
 411 01eb 06       		.uleb128 0x6
 412 01ec 10       		.byte	0x10
 413 01ed 07       		.byte	0x7
 414 01ee 9F02     		.2byte	0x29f
 415 01f0 29020000 		.4byte	0x229
 416 01f4 07       		.uleb128 0x7
 417 01f5 94040000 		.4byte	.LASF38
 418 01f9 07       		.byte	0x7
 419 01fa A002     		.2byte	0x2a0
 420 01fc BF000000 		.4byte	0xbf
 421 0200 00       		.byte	0
 422 0201 07       		.uleb128 0x7
 423 0202 B6070000 		.4byte	.LASF39
 424 0206 07       		.byte	0x7
 425 0207 A102     		.2byte	0x2a1
 426 0209 ED000000 		.4byte	0xed
 427 020d 04       		.byte	0x4
 428 020e 07       		.uleb128 0x7
 429 020f 2E000000 		.4byte	.LASF40
 430 0213 07       		.byte	0x7
 431 0214 A202     		.2byte	0x2a2
 432 0216 ED000000 		.4byte	0xed
 433 021a 08       		.byte	0x8
 434 021b 07       		.uleb128 0x7
 435 021c 29000000 		.4byte	.LASF41
 436 0220 07       		.byte	0x7
 437 0221 A302     		.2byte	0x2a3
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 32


 438 0223 F9000000 		.4byte	0xf9
 439 0227 0C       		.byte	0xc
 440 0228 00       		.byte	0
 441 0229 05       		.uleb128 0x5
 442 022a C0040000 		.4byte	.LASF42
 443 022e 07       		.byte	0x7
 444 022f A402     		.2byte	0x2a4
 445 0231 EB010000 		.4byte	0x1eb
 446 0235 05       		.uleb128 0x5
 447 0236 AC000000 		.4byte	.LASF43
 448 023a 07       		.byte	0x7
 449 023b 2103     		.2byte	0x321
 450 023d 2C000000 		.4byte	0x2c
 451 0241 08       		.uleb128 0x8
 452 0242 01       		.byte	0x1
 453 0243 2C000000 		.4byte	0x2c
 454 0247 07       		.byte	0x7
 455 0248 5904     		.2byte	0x459
 456 024a 91020000 		.4byte	0x291
 457 024e 09       		.uleb128 0x9
 458 024f 70040000 		.4byte	.LASF44
 459 0253 00       		.byte	0
 460 0254 09       		.uleb128 0x9
 461 0255 87040000 		.4byte	.LASF45
 462 0259 01       		.byte	0x1
 463 025a 09       		.uleb128 0x9
 464 025b 00000000 		.4byte	.LASF46
 465 025f 02       		.byte	0x2
 466 0260 09       		.uleb128 0x9
 467 0261 D7030000 		.4byte	.LASF47
 468 0265 03       		.byte	0x3
 469 0266 09       		.uleb128 0x9
 470 0267 05040000 		.4byte	.LASF48
 471 026b 04       		.byte	0x4
 472 026c 09       		.uleb128 0x9
 473 026d C3030000 		.4byte	.LASF49
 474 0271 05       		.byte	0x5
 475 0272 09       		.uleb128 0x9
 476 0273 08020000 		.4byte	.LASF50
 477 0277 06       		.byte	0x6
 478 0278 09       		.uleb128 0x9
 479 0279 EA050000 		.4byte	.LASF51
 480 027d 07       		.byte	0x7
 481 027e 09       		.uleb128 0x9
 482 027f BF070000 		.4byte	.LASF52
 483 0283 08       		.byte	0x8
 484 0284 09       		.uleb128 0x9
 485 0285 38030000 		.4byte	.LASF53
 486 0289 09       		.byte	0x9
 487 028a 09       		.uleb128 0x9
 488 028b 3B040000 		.4byte	.LASF54
 489 028f 0A       		.byte	0xa
 490 0290 00       		.byte	0
 491 0291 05       		.uleb128 0x5
 492 0292 1E060000 		.4byte	.LASF55
 493 0296 07       		.byte	0x7
 494 0297 6504     		.2byte	0x465
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 33


 495 0299 41020000 		.4byte	0x241
 496 029d 0B       		.uleb128 0xb
 497 029e E5070000 		.4byte	.LASF102
 498 02a2 02       		.byte	0x2
 499 02a3 F1       		.byte	0xf1
 500 02a4 B4000000 		.4byte	0xb4
 501 02a8 03       		.byte	0x3
 502 02a9 B9020000 		.4byte	0x2b9
 503 02ad 0C       		.uleb128 0xc
 504 02ae 62060000 		.4byte	.LASF71
 505 02b2 02       		.byte	0x2
 506 02b3 F4       		.byte	0xf4
 507 02b4 B4000000 		.4byte	0xb4
 508 02b8 00       		.byte	0
 509 02b9 0D       		.uleb128 0xd
 510 02ba 36050000 		.4byte	.LASF56
 511 02be 02       		.byte	0x2
 512 02bf DC       		.byte	0xdc
 513 02c0 03       		.byte	0x3
 514 02c1 CF020000 		.4byte	0x2cf
 515 02c5 0E       		.uleb128 0xe
 516 02c6 6600     		.ascii	"f\000"
 517 02c8 02       		.byte	0x2
 518 02c9 DC       		.byte	0xdc
 519 02ca B4000000 		.4byte	0xb4
 520 02ce 00       		.byte	0
 521 02cf 0F       		.uleb128 0xf
 522 02d0 68060000 		.4byte	.LASF57
 523 02d4 07       		.byte	0x7
 524 02d5 9703     		.2byte	0x397
 525 02d7 03       		.byte	0x3
 526 02d8 E9020000 		.4byte	0x2e9
 527 02dc 10       		.uleb128 0x10
 528 02dd 73727600 		.ascii	"srv\000"
 529 02e1 07       		.byte	0x7
 530 02e2 9703     		.2byte	0x397
 531 02e4 72000000 		.4byte	0x72
 532 02e8 00       		.byte	0
 533 02e9 0F       		.uleb128 0xf
 534 02ea 3D000000 		.4byte	.LASF58
 535 02ee 07       		.byte	0x7
 536 02ef A303     		.2byte	0x3a3
 537 02f1 03       		.byte	0x3
 538 02f2 02030000 		.4byte	0x302
 539 02f6 10       		.uleb128 0x10
 540 02f7 696400   		.ascii	"id\000"
 541 02fa 07       		.byte	0x7
 542 02fb A303     		.2byte	0x3a3
 543 02fd 72000000 		.4byte	0x72
 544 0301 00       		.byte	0
 545 0302 0F       		.uleb128 0xf
 546 0303 26020000 		.4byte	.LASF59
 547 0307 07       		.byte	0x7
 548 0308 A803     		.2byte	0x3a8
 549 030a 03       		.byte	0x3
 550 030b 1B030000 		.4byte	0x31b
 551 030f 10       		.uleb128 0x10
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 34


 552 0310 696400   		.ascii	"id\000"
 553 0313 07       		.byte	0x7
 554 0314 A803     		.2byte	0x3a8
 555 0316 72000000 		.4byte	0x72
 556 031a 00       		.byte	0
 557 031b 0F       		.uleb128 0xf
 558 031c FE050000 		.4byte	.LASF60
 559 0320 07       		.byte	0x7
 560 0321 D203     		.2byte	0x3d2
 561 0323 03       		.byte	0x3
 562 0324 35030000 		.4byte	0x335
 563 0328 10       		.uleb128 0x10
 564 0329 746D7000 		.ascii	"tmp\000"
 565 032d 07       		.byte	0x7
 566 032e D203     		.2byte	0x3d2
 567 0330 CA000000 		.4byte	0xca
 568 0334 00       		.byte	0
 569 0335 0F       		.uleb128 0xf
 570 0336 A8050000 		.4byte	.LASF61
 571 033a 07       		.byte	0x7
 572 033b 8404     		.2byte	0x484
 573 033d 03       		.byte	0x3
 574 033e 4F030000 		.4byte	0x34f
 575 0342 10       		.uleb128 0x10
 576 0343 63747800 		.ascii	"ctx\000"
 577 0347 07       		.byte	0x7
 578 0348 8504     		.2byte	0x485
 579 034a 91020000 		.4byte	0x291
 580 034e 00       		.byte	0
 581 034f 11       		.uleb128 0x11
 582 0350 DE040000 		.4byte	.LASF63
 583 0354 04       		.byte	0x4
 584 0355 8D01     		.2byte	0x18d
 585 0357 03       		.byte	0x3
 586 0358 0D       		.uleb128 0xd
 587 0359 97000000 		.4byte	.LASF62
 588 035d 05       		.byte	0x5
 589 035e A5       		.byte	0xa5
 590 035f 03       		.byte	0x3
 591 0360 70030000 		.4byte	0x370
 592 0364 0E       		.uleb128 0xe
 593 0365 74696400 		.ascii	"tid\000"
 594 0369 05       		.byte	0x5
 595 036a A5       		.byte	0xa5
 596 036b CA000000 		.4byte	0xca
 597 036f 00       		.byte	0
 598 0370 12       		.uleb128 0x12
 599 0371 97020000 		.4byte	.LASF65
 600 0375 04       		.byte	0x4
 601 0376 EE       		.byte	0xee
 602 0377 CA000000 		.4byte	0xca
 603 037b 03       		.byte	0x3
 604 037c 11       		.uleb128 0x11
 605 037d 99040000 		.4byte	.LASF64
 606 0381 04       		.byte	0x4
 607 0382 9A01     		.2byte	0x19a
 608 0384 03       		.byte	0x3
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 35


 609 0385 12       		.uleb128 0x12
 610 0386 8D060000 		.4byte	.LASF66
 611 038a 03       		.byte	0x3
 612 038b 4D       		.byte	0x4d
 613 038c A9000000 		.4byte	0xa9
 614 0390 03       		.byte	0x3
 615 0391 11       		.uleb128 0x11
 616 0392 48040000 		.4byte	.LASF67
 617 0396 08       		.byte	0x8
 618 0397 AB01     		.2byte	0x1ab
 619 0399 03       		.byte	0x3
 620 039a 12       		.uleb128 0x12
 621 039b 44060000 		.4byte	.LASF68
 622 039f 09       		.byte	0x9
 623 03a0 60       		.byte	0x60
 624 03a1 B4000000 		.4byte	0xb4
 625 03a5 03       		.byte	0x3
 626 03a6 0D       		.uleb128 0xd
 627 03a7 0D000000 		.4byte	.LASF69
 628 03ab 09       		.byte	0x9
 629 03ac 68       		.byte	0x68
 630 03ad 03       		.byte	0x3
 631 03ae BC030000 		.4byte	0x3bc
 632 03b2 0E       		.uleb128 0xe
 633 03b3 6600     		.ascii	"f\000"
 634 03b5 09       		.byte	0x9
 635 03b6 68       		.byte	0x68
 636 03b7 B4000000 		.4byte	0xb4
 637 03bb 00       		.byte	0
 638 03bc 0F       		.uleb128 0xf
 639 03bd 1F050000 		.4byte	.LASF70
 640 03c1 04       		.byte	0x4
 641 03c2 8002     		.2byte	0x280
 642 03c4 03       		.byte	0x3
 643 03c5 E1030000 		.4byte	0x3e1
 644 03c9 13       		.uleb128 0x13
 645 03ca 7F040000 		.4byte	.LASF72
 646 03ce 04       		.byte	0x4
 647 03cf 8202     		.2byte	0x282
 648 03d1 CA000000 		.4byte	0xca
 649 03d5 14       		.uleb128 0x14
 650 03d6 727100   		.ascii	"rq\000"
 651 03d9 04       		.byte	0x4
 652 03da 8202     		.2byte	0x282
 653 03dc CA000000 		.4byte	0xca
 654 03e0 00       		.byte	0
 655 03e1 0F       		.uleb128 0xf
 656 03e2 A2070000 		.4byte	.LASF73
 657 03e6 04       		.byte	0x4
 658 03e7 3202     		.2byte	0x232
 659 03e9 03       		.byte	0x3
 660 03ea FB030000 		.4byte	0x3fb
 661 03ee 14       		.uleb128 0x14
 662 03ef 746D7000 		.ascii	"tmp\000"
 663 03f3 04       		.byte	0x4
 664 03f4 3402     		.2byte	0x234
 665 03f6 E1000000 		.4byte	0xe1
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 36


 666 03fa 00       		.byte	0
 667 03fb 0D       		.uleb128 0xd
 668 03fc 7C060000 		.4byte	.LASF74
 669 0400 05       		.byte	0x5
 670 0401 98       		.byte	0x98
 671 0402 03       		.byte	0x3
 672 0403 13040000 		.4byte	0x413
 673 0407 0E       		.uleb128 0xe
 674 0408 74696400 		.ascii	"tid\000"
 675 040c 05       		.byte	0x5
 676 040d 98       		.byte	0x98
 677 040e CA000000 		.4byte	0xca
 678 0412 00       		.byte	0
 679 0413 15       		.uleb128 0x15
 680 0414 6C000000 		.4byte	.LASF103
 681 0418 01       		.byte	0x1
 682 0419 4D       		.byte	0x4d
 683 041a 35020000 		.4byte	0x235
 684 041e 00000000 		.4byte	.LFB70
 685 0422 80000000 		.4byte	.LFE70-.LFB70
 686 0426 01       		.uleb128 0x1
 687 0427 9C       		.byte	0x9c
 688 0428 73050000 		.4byte	0x573
 689 042c 16       		.uleb128 0x16
 690 042d 657600   		.ascii	"ev\000"
 691 0430 01       		.byte	0x1
 692 0431 50       		.byte	0x50
 693 0432 35020000 		.4byte	0x235
 694 0436 17       		.uleb128 0x17
 695 0437 8C050000 		.4byte	.LASF104
 696 043b 01       		.byte	0x1
 697 043c 52       		.byte	0x52
 698 043d B4000000 		.4byte	0xb4
 699 0441 01       		.uleb128 0x1
 700 0442 54       		.byte	0x54
 701 0443 18       		.uleb128 0x18
 702 0444 9A030000 		.4byte	0x39a
 703 0448 02000000 		.4byte	.LBB56
 704 044c 06000000 		.4byte	.LBE56-.LBB56
 705 0450 01       		.byte	0x1
 706 0451 52       		.byte	0x52
 707 0452 7A040000 		.4byte	0x47a
 708 0456 19       		.uleb128 0x19
 709 0457 9D020000 		.4byte	0x29d
 710 045b 02000000 		.4byte	.LBB57
 711 045f 06000000 		.4byte	.LBE57-.LBB57
 712 0463 09       		.byte	0x9
 713 0464 62       		.byte	0x62
 714 0465 1A       		.uleb128 0x1a
 715 0466 02000000 		.4byte	.LBB58
 716 046a 06000000 		.4byte	.LBE58-.LBB58
 717 046e 1B       		.uleb128 0x1b
 718 046f AD020000 		.4byte	0x2ad
 719 0473 00000000 		.4byte	.LLST0
 720 0477 00       		.byte	0
 721 0478 00       		.byte	0
 722 0479 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 37


 723 047a 1C       		.uleb128 0x1c
 724 047b 85030000 		.4byte	0x385
 725 047f 08000000 		.4byte	.LBB59
 726 0483 02000000 		.4byte	.LBE59-.LBB59
 727 0487 01       		.byte	0x1
 728 0488 69       		.byte	0x69
 729 0489 18       		.uleb128 0x18
 730 048a BC030000 		.4byte	0x3bc
 731 048e 0E000000 		.4byte	.LBB61
 732 0492 4E000000 		.4byte	.LBE61-.LBB61
 733 0496 01       		.byte	0x1
 734 0497 75       		.byte	0x75
 735 0498 40050000 		.4byte	0x540
 736 049c 1A       		.uleb128 0x1a
 737 049d 0E000000 		.4byte	.LBB62
 738 04a1 4E000000 		.4byte	.LBE62-.LBB62
 739 04a5 1D       		.uleb128 0x1d
 740 04a6 C9030000 		.4byte	0x3c9
 741 04aa 1B       		.uleb128 0x1b
 742 04ab D5030000 		.4byte	0x3d5
 743 04af 13000000 		.4byte	.LLST1
 744 04b3 1E       		.uleb128 0x1e
 745 04b4 70030000 		.4byte	0x370
 746 04b8 0E000000 		.4byte	.LBB63
 747 04bc 04000000 		.4byte	.LBE63-.LBB63
 748 04c0 04       		.byte	0x4
 749 04c1 8502     		.2byte	0x285
 750 04c3 1F       		.uleb128 0x1f
 751 04c4 E1030000 		.4byte	0x3e1
 752 04c8 44000000 		.4byte	.LBB65
 753 04cc 18000000 		.4byte	.LBE65-.LBB65
 754 04d0 04       		.byte	0x4
 755 04d1 BB02     		.2byte	0x2bb
 756 04d3 35050000 		.4byte	0x535
 757 04d7 1A       		.uleb128 0x1a
 758 04d8 44000000 		.4byte	.LBB66
 759 04dc 18000000 		.4byte	.LBE66-.LBB66
 760 04e0 1B       		.uleb128 0x1b
 761 04e1 EE030000 		.4byte	0x3ee
 762 04e5 26000000 		.4byte	.LLST2
 763 04e9 1F       		.uleb128 0x1f
 764 04ea FB030000 		.4byte	0x3fb
 765 04ee 54000000 		.4byte	.LBB67
 766 04f2 04000000 		.4byte	.LBE67-.LBB67
 767 04f6 04       		.byte	0x4
 768 04f7 3C02     		.2byte	0x23c
 769 04f9 07050000 		.4byte	0x507
 770 04fd 20       		.uleb128 0x20
 771 04fe 07040000 		.4byte	0x407
 772 0502 39000000 		.4byte	.LLST3
 773 0506 00       		.byte	0
 774 0507 1F       		.uleb128 0x1f
 775 0508 58030000 		.4byte	0x358
 776 050c 58000000 		.4byte	.LBB69
 777 0510 04000000 		.4byte	.LBE69-.LBB69
 778 0514 04       		.byte	0x4
 779 0515 3F02     		.2byte	0x23f
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 38


 780 0517 2A050000 		.4byte	0x52a
 781 051b 21       		.uleb128 0x21
 782 051c 64030000 		.4byte	0x364
 783 0520 22       		.uleb128 0x22
 784 0521 5C000000 		.4byte	.LVL7
 785 0525 1B070000 		.4byte	0x71b
 786 0529 00       		.byte	0
 787 052a 22       		.uleb128 0x22
 788 052b 48000000 		.4byte	.LVL4
 789 052f 26070000 		.4byte	0x726
 790 0533 00       		.byte	0
 791 0534 00       		.byte	0
 792 0535 22       		.uleb128 0x22
 793 0536 16000000 		.4byte	.LVL2
 794 053a 32070000 		.4byte	0x732
 795 053e 00       		.byte	0
 796 053f 00       		.byte	0
 797 0540 19       		.uleb128 0x19
 798 0541 A6030000 		.4byte	0x3a6
 799 0545 5C000000 		.4byte	.LBB71
 800 0549 04000000 		.4byte	.LBE71-.LBB71
 801 054d 01       		.byte	0x1
 802 054e 80       		.byte	0x80
 803 054f 20       		.uleb128 0x20
 804 0550 B2030000 		.4byte	0x3b2
 805 0554 4C000000 		.4byte	.LLST4
 806 0558 19       		.uleb128 0x19
 807 0559 B9020000 		.4byte	0x2b9
 808 055d 5C000000 		.4byte	.LBB72
 809 0561 04000000 		.4byte	.LBE72-.LBB72
 810 0565 09       		.byte	0x9
 811 0566 6A       		.byte	0x6a
 812 0567 20       		.uleb128 0x20
 813 0568 C5020000 		.4byte	0x2c5
 814 056c 4C000000 		.4byte	.LLST4
 815 0570 00       		.byte	0
 816 0571 00       		.byte	0
 817 0572 00       		.byte	0
 818 0573 23       		.uleb128 0x23
 819 0574 7A070000 		.4byte	.LASF75
 820 0578 03       		.byte	0x3
 821 0579 44       		.byte	0x44
 822 057a A9000000 		.4byte	0xa9
 823 057e 23       		.uleb128 0x23
 824 057f 57020000 		.4byte	.LASF76
 825 0583 05       		.byte	0x5
 826 0584 48       		.byte	0x48
 827 0585 CA000000 		.4byte	0xca
 828 0589 24       		.uleb128 0x24
 829 058a A0050000 		.4byte	0x5a0
 830 058e 99050000 		.4byte	0x599
 831 0592 25       		.uleb128 0x25
 832 0593 99050000 		.4byte	0x599
 833 0597 03       		.byte	0x3
 834 0598 00       		.byte	0
 835 0599 02       		.uleb128 0x2
 836 059a 04       		.byte	0x4
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 39


 837 059b 07       		.byte	0x7
 838 059c FC030000 		.4byte	.LASF77
 839 05a0 26       		.uleb128 0x26
 840 05a1 A9000000 		.4byte	0xa9
 841 05a5 23       		.uleb128 0x23
 842 05a6 D4070000 		.4byte	.LASF78
 843 05aa 07       		.byte	0x7
 844 05ab B2       		.byte	0xb2
 845 05ac B0050000 		.4byte	0x5b0
 846 05b0 26       		.uleb128 0x26
 847 05b1 89050000 		.4byte	0x589
 848 05b5 23       		.uleb128 0x23
 849 05b6 71030000 		.4byte	.LASF79
 850 05ba 07       		.byte	0x7
 851 05bb B3       		.byte	0xb3
 852 05bc C0050000 		.4byte	0x5c0
 853 05c0 26       		.uleb128 0x26
 854 05c1 89050000 		.4byte	0x589
 855 05c5 24       		.uleb128 0x24
 856 05c6 A9000000 		.4byte	0xa9
 857 05ca D5050000 		.4byte	0x5d5
 858 05ce 25       		.uleb128 0x25
 859 05cf 99050000 		.4byte	0x599
 860 05d3 03       		.byte	0x3
 861 05d4 00       		.byte	0
 862 05d5 23       		.uleb128 0x23
 863 05d6 4E030000 		.4byte	.LASF80
 864 05da 07       		.byte	0x7
 865 05db CA       		.byte	0xca
 866 05dc C5050000 		.4byte	0x5c5
 867 05e0 24       		.uleb128 0x24
 868 05e1 CA000000 		.4byte	0xca
 869 05e5 F0050000 		.4byte	0x5f0
 870 05e9 25       		.uleb128 0x25
 871 05ea 99050000 		.4byte	0x599
 872 05ee 03       		.byte	0x3
 873 05ef 00       		.byte	0
 874 05f0 23       		.uleb128 0x23
 875 05f1 64050000 		.4byte	.LASF81
 876 05f5 07       		.byte	0x7
 877 05f6 D2       		.byte	0xd2
 878 05f7 E0050000 		.4byte	0x5e0
 879 05fb 23       		.uleb128 0x23
 880 05fc AA060000 		.4byte	.LASF82
 881 0600 07       		.byte	0x7
 882 0601 DA       		.byte	0xda
 883 0602 C5050000 		.4byte	0x5c5
 884 0606 23       		.uleb128 0x23
 885 0607 54000000 		.4byte	.LASF83
 886 060b 07       		.byte	0x7
 887 060c E2       		.byte	0xe2
 888 060d CA000000 		.4byte	0xca
 889 0611 23       		.uleb128 0x23
 890 0612 B1040000 		.4byte	.LASF84
 891 0616 07       		.byte	0x7
 892 0617 F7       		.byte	0xf7
 893 0618 A9000000 		.4byte	0xa9
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 40


 894 061c 27       		.uleb128 0x27
 895 061d C4050000 		.4byte	.LASF85
 896 0621 07       		.byte	0x7
 897 0622 3F01     		.2byte	0x13f
 898 0624 D5000000 		.4byte	0xd5
 899 0628 27       		.uleb128 0x27
 900 0629 6F050000 		.4byte	.LASF86
 901 062d 07       		.byte	0x7
 902 062e 5C01     		.2byte	0x15c
 903 0630 C5050000 		.4byte	0x5c5
 904 0634 24       		.uleb128 0x24
 905 0635 BF000000 		.4byte	0xbf
 906 0639 44060000 		.4byte	0x644
 907 063d 25       		.uleb128 0x25
 908 063e 99050000 		.4byte	0x599
 909 0642 03       		.byte	0x3
 910 0643 00       		.byte	0
 911 0644 27       		.uleb128 0x27
 912 0645 D8020000 		.4byte	.LASF87
 913 0649 07       		.byte	0x7
 914 064a 6701     		.2byte	0x167
 915 064c 34060000 		.4byte	0x634
 916 0650 24       		.uleb128 0x24
 917 0651 60060000 		.4byte	0x660
 918 0655 60060000 		.4byte	0x660
 919 0659 25       		.uleb128 0x25
 920 065a 99050000 		.4byte	0x599
 921 065e 00       		.byte	0
 922 065f 00       		.byte	0
 923 0660 26       		.uleb128 0x26
 924 0661 42010000 		.4byte	0x142
 925 0665 27       		.uleb128 0x27
 926 0666 F5040000 		.4byte	.LASF88
 927 066a 07       		.byte	0x7
 928 066b CA02     		.2byte	0x2ca
 929 066d 71060000 		.4byte	0x671
 930 0671 26       		.uleb128 0x26
 931 0672 50060000 		.4byte	0x650
 932 0676 24       		.uleb128 0x24
 933 0677 86060000 		.4byte	0x686
 934 067b 86060000 		.4byte	0x686
 935 067f 25       		.uleb128 0x25
 936 0680 99050000 		.4byte	0x599
 937 0684 01       		.byte	0x1
 938 0685 00       		.byte	0
 939 0686 26       		.uleb128 0x26
 940 0687 DF010000 		.4byte	0x1df
 941 068b 27       		.uleb128 0x27
 942 068c 9A030000 		.4byte	.LASF89
 943 0690 07       		.byte	0x7
 944 0691 DD02     		.2byte	0x2dd
 945 0693 97060000 		.4byte	0x697
 946 0697 26       		.uleb128 0x26
 947 0698 76060000 		.4byte	0x676
 948 069c 24       		.uleb128 0x24
 949 069d 72010000 		.4byte	0x172
 950 06a1 AC060000 		.4byte	0x6ac
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 41


 951 06a5 25       		.uleb128 0x25
 952 06a6 99050000 		.4byte	0x599
 953 06aa 00       		.byte	0
 954 06ab 00       		.byte	0
 955 06ac 27       		.uleb128 0x27
 956 06ad 2D060000 		.4byte	.LASF90
 957 06b1 07       		.byte	0x7
 958 06b2 FB02     		.2byte	0x2fb
 959 06b4 9C060000 		.4byte	0x69c
 960 06b8 24       		.uleb128 0x24
 961 06b9 29020000 		.4byte	0x229
 962 06bd C8060000 		.4byte	0x6c8
 963 06c1 25       		.uleb128 0x25
 964 06c2 99050000 		.4byte	0x599
 965 06c6 01       		.byte	0x1
 966 06c7 00       		.byte	0
 967 06c8 27       		.uleb128 0x27
 968 06c9 B7000000 		.4byte	.LASF91
 969 06cd 07       		.byte	0x7
 970 06ce 0403     		.2byte	0x304
 971 06d0 B8060000 		.4byte	0x6b8
 972 06d4 23       		.uleb128 0x23
 973 06d5 01030000 		.4byte	.LASF92
 974 06d9 0A       		.byte	0xa
 975 06da 40       		.byte	0x40
 976 06db A9000000 		.4byte	0xa9
 977 06df 23       		.uleb128 0x23
 978 06e0 3E020000 		.4byte	.LASF93
 979 06e4 0A       		.byte	0xa
 980 06e5 47       		.byte	0x47
 981 06e6 B4000000 		.4byte	0xb4
 982 06ea 23       		.uleb128 0x23
 983 06eb 28040000 		.4byte	.LASF94
 984 06ef 0A       		.byte	0xa
 985 06f0 4A       		.byte	0x4a
 986 06f1 A9000000 		.4byte	0xa9
 987 06f5 24       		.uleb128 0x24
 988 06f6 05070000 		.4byte	0x705
 989 06fa 05070000 		.4byte	0x705
 990 06fe 25       		.uleb128 0x25
 991 06ff 99050000 		.4byte	0x599
 992 0703 FF       		.byte	0xff
 993 0704 00       		.byte	0
 994 0705 26       		.uleb128 0x26
 995 0706 7D000000 		.4byte	0x7d
 996 070a 27       		.uleb128 0x27
 997 070b E4010000 		.4byte	.LASF95
 998 070f 04       		.byte	0x4
 999 0710 AB01     		.2byte	0x1ab
 1000 0712 16070000 		.4byte	0x716
 1001 0716 26       		.uleb128 0x26
 1002 0717 F5060000 		.4byte	0x6f5
 1003 071b 28       		.uleb128 0x28
 1004 071c B6060000 		.4byte	.LASF96
 1005 0720 B6060000 		.4byte	.LASF96
 1006 0724 05       		.byte	0x5
 1007 0725 4F       		.byte	0x4f
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 42


 1008 0726 29       		.uleb128 0x29
 1009 0727 E9030000 		.4byte	.LASF97
 1010 072b E9030000 		.4byte	.LASF97
 1011 072f 04       		.byte	0x4
 1012 0730 E901     		.2byte	0x1e9
 1013 0732 29       		.uleb128 0x29
 1014 0733 79020000 		.4byte	.LASF98
 1015 0737 79020000 		.4byte	.LASF98
 1016 073b 04       		.byte	0x4
 1017 073c CB01     		.2byte	0x1cb
 1018 073e 00       		.byte	0
 1019              		.section	.debug_abbrev,"",%progbits
 1020              	.Ldebug_abbrev0:
 1021 0000 01       		.uleb128 0x1
 1022 0001 11       		.uleb128 0x11
 1023 0002 01       		.byte	0x1
 1024 0003 25       		.uleb128 0x25
 1025 0004 0E       		.uleb128 0xe
 1026 0005 13       		.uleb128 0x13
 1027 0006 0B       		.uleb128 0xb
 1028 0007 03       		.uleb128 0x3
 1029 0008 0E       		.uleb128 0xe
 1030 0009 1B       		.uleb128 0x1b
 1031 000a 0E       		.uleb128 0xe
 1032 000b 55       		.uleb128 0x55
 1033 000c 17       		.uleb128 0x17
 1034 000d 11       		.uleb128 0x11
 1035 000e 01       		.uleb128 0x1
 1036 000f 10       		.uleb128 0x10
 1037 0010 17       		.uleb128 0x17
 1038 0011 00       		.byte	0
 1039 0012 00       		.byte	0
 1040 0013 02       		.uleb128 0x2
 1041 0014 24       		.uleb128 0x24
 1042 0015 00       		.byte	0
 1043 0016 0B       		.uleb128 0xb
 1044 0017 0B       		.uleb128 0xb
 1045 0018 3E       		.uleb128 0x3e
 1046 0019 0B       		.uleb128 0xb
 1047 001a 03       		.uleb128 0x3
 1048 001b 0E       		.uleb128 0xe
 1049 001c 00       		.byte	0
 1050 001d 00       		.byte	0
 1051 001e 03       		.uleb128 0x3
 1052 001f 24       		.uleb128 0x24
 1053 0020 00       		.byte	0
 1054 0021 0B       		.uleb128 0xb
 1055 0022 0B       		.uleb128 0xb
 1056 0023 3E       		.uleb128 0x3e
 1057 0024 0B       		.uleb128 0xb
 1058 0025 03       		.uleb128 0x3
 1059 0026 08       		.uleb128 0x8
 1060 0027 00       		.byte	0
 1061 0028 00       		.byte	0
 1062 0029 04       		.uleb128 0x4
 1063 002a 16       		.uleb128 0x16
 1064 002b 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 43


 1065 002c 03       		.uleb128 0x3
 1066 002d 0E       		.uleb128 0xe
 1067 002e 3A       		.uleb128 0x3a
 1068 002f 0B       		.uleb128 0xb
 1069 0030 3B       		.uleb128 0x3b
 1070 0031 0B       		.uleb128 0xb
 1071 0032 49       		.uleb128 0x49
 1072 0033 13       		.uleb128 0x13
 1073 0034 00       		.byte	0
 1074 0035 00       		.byte	0
 1075 0036 05       		.uleb128 0x5
 1076 0037 16       		.uleb128 0x16
 1077 0038 00       		.byte	0
 1078 0039 03       		.uleb128 0x3
 1079 003a 0E       		.uleb128 0xe
 1080 003b 3A       		.uleb128 0x3a
 1081 003c 0B       		.uleb128 0xb
 1082 003d 3B       		.uleb128 0x3b
 1083 003e 05       		.uleb128 0x5
 1084 003f 49       		.uleb128 0x49
 1085 0040 13       		.uleb128 0x13
 1086 0041 00       		.byte	0
 1087 0042 00       		.byte	0
 1088 0043 06       		.uleb128 0x6
 1089 0044 13       		.uleb128 0x13
 1090 0045 01       		.byte	0x1
 1091 0046 0B       		.uleb128 0xb
 1092 0047 0B       		.uleb128 0xb
 1093 0048 3A       		.uleb128 0x3a
 1094 0049 0B       		.uleb128 0xb
 1095 004a 3B       		.uleb128 0x3b
 1096 004b 05       		.uleb128 0x5
 1097 004c 01       		.uleb128 0x1
 1098 004d 13       		.uleb128 0x13
 1099 004e 00       		.byte	0
 1100 004f 00       		.byte	0
 1101 0050 07       		.uleb128 0x7
 1102 0051 0D       		.uleb128 0xd
 1103 0052 00       		.byte	0
 1104 0053 03       		.uleb128 0x3
 1105 0054 0E       		.uleb128 0xe
 1106 0055 3A       		.uleb128 0x3a
 1107 0056 0B       		.uleb128 0xb
 1108 0057 3B       		.uleb128 0x3b
 1109 0058 05       		.uleb128 0x5
 1110 0059 49       		.uleb128 0x49
 1111 005a 13       		.uleb128 0x13
 1112 005b 38       		.uleb128 0x38
 1113 005c 0B       		.uleb128 0xb
 1114 005d 00       		.byte	0
 1115 005e 00       		.byte	0
 1116 005f 08       		.uleb128 0x8
 1117 0060 04       		.uleb128 0x4
 1118 0061 01       		.byte	0x1
 1119 0062 0B       		.uleb128 0xb
 1120 0063 0B       		.uleb128 0xb
 1121 0064 49       		.uleb128 0x49
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 44


 1122 0065 13       		.uleb128 0x13
 1123 0066 3A       		.uleb128 0x3a
 1124 0067 0B       		.uleb128 0xb
 1125 0068 3B       		.uleb128 0x3b
 1126 0069 05       		.uleb128 0x5
 1127 006a 01       		.uleb128 0x1
 1128 006b 13       		.uleb128 0x13
 1129 006c 00       		.byte	0
 1130 006d 00       		.byte	0
 1131 006e 09       		.uleb128 0x9
 1132 006f 28       		.uleb128 0x28
 1133 0070 00       		.byte	0
 1134 0071 03       		.uleb128 0x3
 1135 0072 0E       		.uleb128 0xe
 1136 0073 1C       		.uleb128 0x1c
 1137 0074 0B       		.uleb128 0xb
 1138 0075 00       		.byte	0
 1139 0076 00       		.byte	0
 1140 0077 0A       		.uleb128 0xa
 1141 0078 0D       		.uleb128 0xd
 1142 0079 00       		.byte	0
 1143 007a 03       		.uleb128 0x3
 1144 007b 08       		.uleb128 0x8
 1145 007c 3A       		.uleb128 0x3a
 1146 007d 0B       		.uleb128 0xb
 1147 007e 3B       		.uleb128 0x3b
 1148 007f 05       		.uleb128 0x5
 1149 0080 49       		.uleb128 0x49
 1150 0081 13       		.uleb128 0x13
 1151 0082 38       		.uleb128 0x38
 1152 0083 0B       		.uleb128 0xb
 1153 0084 00       		.byte	0
 1154 0085 00       		.byte	0
 1155 0086 0B       		.uleb128 0xb
 1156 0087 2E       		.uleb128 0x2e
 1157 0088 01       		.byte	0x1
 1158 0089 03       		.uleb128 0x3
 1159 008a 0E       		.uleb128 0xe
 1160 008b 3A       		.uleb128 0x3a
 1161 008c 0B       		.uleb128 0xb
 1162 008d 3B       		.uleb128 0x3b
 1163 008e 0B       		.uleb128 0xb
 1164 008f 27       		.uleb128 0x27
 1165 0090 19       		.uleb128 0x19
 1166 0091 49       		.uleb128 0x49
 1167 0092 13       		.uleb128 0x13
 1168 0093 20       		.uleb128 0x20
 1169 0094 0B       		.uleb128 0xb
 1170 0095 01       		.uleb128 0x1
 1171 0096 13       		.uleb128 0x13
 1172 0097 00       		.byte	0
 1173 0098 00       		.byte	0
 1174 0099 0C       		.uleb128 0xc
 1175 009a 34       		.uleb128 0x34
 1176 009b 00       		.byte	0
 1177 009c 03       		.uleb128 0x3
 1178 009d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 45


 1179 009e 3A       		.uleb128 0x3a
 1180 009f 0B       		.uleb128 0xb
 1181 00a0 3B       		.uleb128 0x3b
 1182 00a1 0B       		.uleb128 0xb
 1183 00a2 49       		.uleb128 0x49
 1184 00a3 13       		.uleb128 0x13
 1185 00a4 00       		.byte	0
 1186 00a5 00       		.byte	0
 1187 00a6 0D       		.uleb128 0xd
 1188 00a7 2E       		.uleb128 0x2e
 1189 00a8 01       		.byte	0x1
 1190 00a9 03       		.uleb128 0x3
 1191 00aa 0E       		.uleb128 0xe
 1192 00ab 3A       		.uleb128 0x3a
 1193 00ac 0B       		.uleb128 0xb
 1194 00ad 3B       		.uleb128 0x3b
 1195 00ae 0B       		.uleb128 0xb
 1196 00af 27       		.uleb128 0x27
 1197 00b0 19       		.uleb128 0x19
 1198 00b1 20       		.uleb128 0x20
 1199 00b2 0B       		.uleb128 0xb
 1200 00b3 01       		.uleb128 0x1
 1201 00b4 13       		.uleb128 0x13
 1202 00b5 00       		.byte	0
 1203 00b6 00       		.byte	0
 1204 00b7 0E       		.uleb128 0xe
 1205 00b8 05       		.uleb128 0x5
 1206 00b9 00       		.byte	0
 1207 00ba 03       		.uleb128 0x3
 1208 00bb 08       		.uleb128 0x8
 1209 00bc 3A       		.uleb128 0x3a
 1210 00bd 0B       		.uleb128 0xb
 1211 00be 3B       		.uleb128 0x3b
 1212 00bf 0B       		.uleb128 0xb
 1213 00c0 49       		.uleb128 0x49
 1214 00c1 13       		.uleb128 0x13
 1215 00c2 00       		.byte	0
 1216 00c3 00       		.byte	0
 1217 00c4 0F       		.uleb128 0xf
 1218 00c5 2E       		.uleb128 0x2e
 1219 00c6 01       		.byte	0x1
 1220 00c7 03       		.uleb128 0x3
 1221 00c8 0E       		.uleb128 0xe
 1222 00c9 3A       		.uleb128 0x3a
 1223 00ca 0B       		.uleb128 0xb
 1224 00cb 3B       		.uleb128 0x3b
 1225 00cc 05       		.uleb128 0x5
 1226 00cd 27       		.uleb128 0x27
 1227 00ce 19       		.uleb128 0x19
 1228 00cf 20       		.uleb128 0x20
 1229 00d0 0B       		.uleb128 0xb
 1230 00d1 01       		.uleb128 0x1
 1231 00d2 13       		.uleb128 0x13
 1232 00d3 00       		.byte	0
 1233 00d4 00       		.byte	0
 1234 00d5 10       		.uleb128 0x10
 1235 00d6 05       		.uleb128 0x5
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 46


 1236 00d7 00       		.byte	0
 1237 00d8 03       		.uleb128 0x3
 1238 00d9 08       		.uleb128 0x8
 1239 00da 3A       		.uleb128 0x3a
 1240 00db 0B       		.uleb128 0xb
 1241 00dc 3B       		.uleb128 0x3b
 1242 00dd 05       		.uleb128 0x5
 1243 00de 49       		.uleb128 0x49
 1244 00df 13       		.uleb128 0x13
 1245 00e0 00       		.byte	0
 1246 00e1 00       		.byte	0
 1247 00e2 11       		.uleb128 0x11
 1248 00e3 2E       		.uleb128 0x2e
 1249 00e4 00       		.byte	0
 1250 00e5 03       		.uleb128 0x3
 1251 00e6 0E       		.uleb128 0xe
 1252 00e7 3A       		.uleb128 0x3a
 1253 00e8 0B       		.uleb128 0xb
 1254 00e9 3B       		.uleb128 0x3b
 1255 00ea 05       		.uleb128 0x5
 1256 00eb 27       		.uleb128 0x27
 1257 00ec 19       		.uleb128 0x19
 1258 00ed 20       		.uleb128 0x20
 1259 00ee 0B       		.uleb128 0xb
 1260 00ef 00       		.byte	0
 1261 00f0 00       		.byte	0
 1262 00f1 12       		.uleb128 0x12
 1263 00f2 2E       		.uleb128 0x2e
 1264 00f3 00       		.byte	0
 1265 00f4 03       		.uleb128 0x3
 1266 00f5 0E       		.uleb128 0xe
 1267 00f6 3A       		.uleb128 0x3a
 1268 00f7 0B       		.uleb128 0xb
 1269 00f8 3B       		.uleb128 0x3b
 1270 00f9 0B       		.uleb128 0xb
 1271 00fa 27       		.uleb128 0x27
 1272 00fb 19       		.uleb128 0x19
 1273 00fc 49       		.uleb128 0x49
 1274 00fd 13       		.uleb128 0x13
 1275 00fe 20       		.uleb128 0x20
 1276 00ff 0B       		.uleb128 0xb
 1277 0100 00       		.byte	0
 1278 0101 00       		.byte	0
 1279 0102 13       		.uleb128 0x13
 1280 0103 34       		.uleb128 0x34
 1281 0104 00       		.byte	0
 1282 0105 03       		.uleb128 0x3
 1283 0106 0E       		.uleb128 0xe
 1284 0107 3A       		.uleb128 0x3a
 1285 0108 0B       		.uleb128 0xb
 1286 0109 3B       		.uleb128 0x3b
 1287 010a 05       		.uleb128 0x5
 1288 010b 49       		.uleb128 0x49
 1289 010c 13       		.uleb128 0x13
 1290 010d 00       		.byte	0
 1291 010e 00       		.byte	0
 1292 010f 14       		.uleb128 0x14
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 47


 1293 0110 34       		.uleb128 0x34
 1294 0111 00       		.byte	0
 1295 0112 03       		.uleb128 0x3
 1296 0113 08       		.uleb128 0x8
 1297 0114 3A       		.uleb128 0x3a
 1298 0115 0B       		.uleb128 0xb
 1299 0116 3B       		.uleb128 0x3b
 1300 0117 05       		.uleb128 0x5
 1301 0118 49       		.uleb128 0x49
 1302 0119 13       		.uleb128 0x13
 1303 011a 00       		.byte	0
 1304 011b 00       		.byte	0
 1305 011c 15       		.uleb128 0x15
 1306 011d 2E       		.uleb128 0x2e
 1307 011e 01       		.byte	0x1
 1308 011f 3F       		.uleb128 0x3f
 1309 0120 19       		.uleb128 0x19
 1310 0121 03       		.uleb128 0x3
 1311 0122 0E       		.uleb128 0xe
 1312 0123 3A       		.uleb128 0x3a
 1313 0124 0B       		.uleb128 0xb
 1314 0125 3B       		.uleb128 0x3b
 1315 0126 0B       		.uleb128 0xb
 1316 0127 27       		.uleb128 0x27
 1317 0128 19       		.uleb128 0x19
 1318 0129 49       		.uleb128 0x49
 1319 012a 13       		.uleb128 0x13
 1320 012b 11       		.uleb128 0x11
 1321 012c 01       		.uleb128 0x1
 1322 012d 12       		.uleb128 0x12
 1323 012e 06       		.uleb128 0x6
 1324 012f 40       		.uleb128 0x40
 1325 0130 18       		.uleb128 0x18
 1326 0131 9742     		.uleb128 0x2117
 1327 0133 19       		.uleb128 0x19
 1328 0134 01       		.uleb128 0x1
 1329 0135 13       		.uleb128 0x13
 1330 0136 00       		.byte	0
 1331 0137 00       		.byte	0
 1332 0138 16       		.uleb128 0x16
 1333 0139 34       		.uleb128 0x34
 1334 013a 00       		.byte	0
 1335 013b 03       		.uleb128 0x3
 1336 013c 08       		.uleb128 0x8
 1337 013d 3A       		.uleb128 0x3a
 1338 013e 0B       		.uleb128 0xb
 1339 013f 3B       		.uleb128 0x3b
 1340 0140 0B       		.uleb128 0xb
 1341 0141 49       		.uleb128 0x49
 1342 0142 13       		.uleb128 0x13
 1343 0143 00       		.byte	0
 1344 0144 00       		.byte	0
 1345 0145 17       		.uleb128 0x17
 1346 0146 34       		.uleb128 0x34
 1347 0147 00       		.byte	0
 1348 0148 03       		.uleb128 0x3
 1349 0149 0E       		.uleb128 0xe
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 48


 1350 014a 3A       		.uleb128 0x3a
 1351 014b 0B       		.uleb128 0xb
 1352 014c 3B       		.uleb128 0x3b
 1353 014d 0B       		.uleb128 0xb
 1354 014e 49       		.uleb128 0x49
 1355 014f 13       		.uleb128 0x13
 1356 0150 02       		.uleb128 0x2
 1357 0151 18       		.uleb128 0x18
 1358 0152 00       		.byte	0
 1359 0153 00       		.byte	0
 1360 0154 18       		.uleb128 0x18
 1361 0155 1D       		.uleb128 0x1d
 1362 0156 01       		.byte	0x1
 1363 0157 31       		.uleb128 0x31
 1364 0158 13       		.uleb128 0x13
 1365 0159 11       		.uleb128 0x11
 1366 015a 01       		.uleb128 0x1
 1367 015b 12       		.uleb128 0x12
 1368 015c 06       		.uleb128 0x6
 1369 015d 58       		.uleb128 0x58
 1370 015e 0B       		.uleb128 0xb
 1371 015f 59       		.uleb128 0x59
 1372 0160 0B       		.uleb128 0xb
 1373 0161 01       		.uleb128 0x1
 1374 0162 13       		.uleb128 0x13
 1375 0163 00       		.byte	0
 1376 0164 00       		.byte	0
 1377 0165 19       		.uleb128 0x19
 1378 0166 1D       		.uleb128 0x1d
 1379 0167 01       		.byte	0x1
 1380 0168 31       		.uleb128 0x31
 1381 0169 13       		.uleb128 0x13
 1382 016a 11       		.uleb128 0x11
 1383 016b 01       		.uleb128 0x1
 1384 016c 12       		.uleb128 0x12
 1385 016d 06       		.uleb128 0x6
 1386 016e 58       		.uleb128 0x58
 1387 016f 0B       		.uleb128 0xb
 1388 0170 59       		.uleb128 0x59
 1389 0171 0B       		.uleb128 0xb
 1390 0172 00       		.byte	0
 1391 0173 00       		.byte	0
 1392 0174 1A       		.uleb128 0x1a
 1393 0175 0B       		.uleb128 0xb
 1394 0176 01       		.byte	0x1
 1395 0177 11       		.uleb128 0x11
 1396 0178 01       		.uleb128 0x1
 1397 0179 12       		.uleb128 0x12
 1398 017a 06       		.uleb128 0x6
 1399 017b 00       		.byte	0
 1400 017c 00       		.byte	0
 1401 017d 1B       		.uleb128 0x1b
 1402 017e 34       		.uleb128 0x34
 1403 017f 00       		.byte	0
 1404 0180 31       		.uleb128 0x31
 1405 0181 13       		.uleb128 0x13
 1406 0182 02       		.uleb128 0x2
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 49


 1407 0183 17       		.uleb128 0x17
 1408 0184 00       		.byte	0
 1409 0185 00       		.byte	0
 1410 0186 1C       		.uleb128 0x1c
 1411 0187 1D       		.uleb128 0x1d
 1412 0188 00       		.byte	0
 1413 0189 31       		.uleb128 0x31
 1414 018a 13       		.uleb128 0x13
 1415 018b 11       		.uleb128 0x11
 1416 018c 01       		.uleb128 0x1
 1417 018d 12       		.uleb128 0x12
 1418 018e 06       		.uleb128 0x6
 1419 018f 58       		.uleb128 0x58
 1420 0190 0B       		.uleb128 0xb
 1421 0191 59       		.uleb128 0x59
 1422 0192 0B       		.uleb128 0xb
 1423 0193 00       		.byte	0
 1424 0194 00       		.byte	0
 1425 0195 1D       		.uleb128 0x1d
 1426 0196 34       		.uleb128 0x34
 1427 0197 00       		.byte	0
 1428 0198 31       		.uleb128 0x31
 1429 0199 13       		.uleb128 0x13
 1430 019a 00       		.byte	0
 1431 019b 00       		.byte	0
 1432 019c 1E       		.uleb128 0x1e
 1433 019d 1D       		.uleb128 0x1d
 1434 019e 00       		.byte	0
 1435 019f 31       		.uleb128 0x31
 1436 01a0 13       		.uleb128 0x13
 1437 01a1 11       		.uleb128 0x11
 1438 01a2 01       		.uleb128 0x1
 1439 01a3 12       		.uleb128 0x12
 1440 01a4 06       		.uleb128 0x6
 1441 01a5 58       		.uleb128 0x58
 1442 01a6 0B       		.uleb128 0xb
 1443 01a7 59       		.uleb128 0x59
 1444 01a8 05       		.uleb128 0x5
 1445 01a9 00       		.byte	0
 1446 01aa 00       		.byte	0
 1447 01ab 1F       		.uleb128 0x1f
 1448 01ac 1D       		.uleb128 0x1d
 1449 01ad 01       		.byte	0x1
 1450 01ae 31       		.uleb128 0x31
 1451 01af 13       		.uleb128 0x13
 1452 01b0 11       		.uleb128 0x11
 1453 01b1 01       		.uleb128 0x1
 1454 01b2 12       		.uleb128 0x12
 1455 01b3 06       		.uleb128 0x6
 1456 01b4 58       		.uleb128 0x58
 1457 01b5 0B       		.uleb128 0xb
 1458 01b6 59       		.uleb128 0x59
 1459 01b7 05       		.uleb128 0x5
 1460 01b8 01       		.uleb128 0x1
 1461 01b9 13       		.uleb128 0x13
 1462 01ba 00       		.byte	0
 1463 01bb 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 50


 1464 01bc 20       		.uleb128 0x20
 1465 01bd 05       		.uleb128 0x5
 1466 01be 00       		.byte	0
 1467 01bf 31       		.uleb128 0x31
 1468 01c0 13       		.uleb128 0x13
 1469 01c1 02       		.uleb128 0x2
 1470 01c2 17       		.uleb128 0x17
 1471 01c3 00       		.byte	0
 1472 01c4 00       		.byte	0
 1473 01c5 21       		.uleb128 0x21
 1474 01c6 05       		.uleb128 0x5
 1475 01c7 00       		.byte	0
 1476 01c8 31       		.uleb128 0x31
 1477 01c9 13       		.uleb128 0x13
 1478 01ca 00       		.byte	0
 1479 01cb 00       		.byte	0
 1480 01cc 22       		.uleb128 0x22
 1481 01cd 898201   		.uleb128 0x4109
 1482 01d0 00       		.byte	0
 1483 01d1 11       		.uleb128 0x11
 1484 01d2 01       		.uleb128 0x1
 1485 01d3 31       		.uleb128 0x31
 1486 01d4 13       		.uleb128 0x13
 1487 01d5 00       		.byte	0
 1488 01d6 00       		.byte	0
 1489 01d7 23       		.uleb128 0x23
 1490 01d8 34       		.uleb128 0x34
 1491 01d9 00       		.byte	0
 1492 01da 03       		.uleb128 0x3
 1493 01db 0E       		.uleb128 0xe
 1494 01dc 3A       		.uleb128 0x3a
 1495 01dd 0B       		.uleb128 0xb
 1496 01de 3B       		.uleb128 0x3b
 1497 01df 0B       		.uleb128 0xb
 1498 01e0 49       		.uleb128 0x49
 1499 01e1 13       		.uleb128 0x13
 1500 01e2 3F       		.uleb128 0x3f
 1501 01e3 19       		.uleb128 0x19
 1502 01e4 3C       		.uleb128 0x3c
 1503 01e5 19       		.uleb128 0x19
 1504 01e6 00       		.byte	0
 1505 01e7 00       		.byte	0
 1506 01e8 24       		.uleb128 0x24
 1507 01e9 01       		.uleb128 0x1
 1508 01ea 01       		.byte	0x1
 1509 01eb 49       		.uleb128 0x49
 1510 01ec 13       		.uleb128 0x13
 1511 01ed 01       		.uleb128 0x1
 1512 01ee 13       		.uleb128 0x13
 1513 01ef 00       		.byte	0
 1514 01f0 00       		.byte	0
 1515 01f1 25       		.uleb128 0x25
 1516 01f2 21       		.uleb128 0x21
 1517 01f3 00       		.byte	0
 1518 01f4 49       		.uleb128 0x49
 1519 01f5 13       		.uleb128 0x13
 1520 01f6 2F       		.uleb128 0x2f
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 51


 1521 01f7 0B       		.uleb128 0xb
 1522 01f8 00       		.byte	0
 1523 01f9 00       		.byte	0
 1524 01fa 26       		.uleb128 0x26
 1525 01fb 26       		.uleb128 0x26
 1526 01fc 00       		.byte	0
 1527 01fd 49       		.uleb128 0x49
 1528 01fe 13       		.uleb128 0x13
 1529 01ff 00       		.byte	0
 1530 0200 00       		.byte	0
 1531 0201 27       		.uleb128 0x27
 1532 0202 34       		.uleb128 0x34
 1533 0203 00       		.byte	0
 1534 0204 03       		.uleb128 0x3
 1535 0205 0E       		.uleb128 0xe
 1536 0206 3A       		.uleb128 0x3a
 1537 0207 0B       		.uleb128 0xb
 1538 0208 3B       		.uleb128 0x3b
 1539 0209 05       		.uleb128 0x5
 1540 020a 49       		.uleb128 0x49
 1541 020b 13       		.uleb128 0x13
 1542 020c 3F       		.uleb128 0x3f
 1543 020d 19       		.uleb128 0x19
 1544 020e 3C       		.uleb128 0x3c
 1545 020f 19       		.uleb128 0x19
 1546 0210 00       		.byte	0
 1547 0211 00       		.byte	0
 1548 0212 28       		.uleb128 0x28
 1549 0213 2E       		.uleb128 0x2e
 1550 0214 00       		.byte	0
 1551 0215 3F       		.uleb128 0x3f
 1552 0216 19       		.uleb128 0x19
 1553 0217 3C       		.uleb128 0x3c
 1554 0218 19       		.uleb128 0x19
 1555 0219 6E       		.uleb128 0x6e
 1556 021a 0E       		.uleb128 0xe
 1557 021b 03       		.uleb128 0x3
 1558 021c 0E       		.uleb128 0xe
 1559 021d 3A       		.uleb128 0x3a
 1560 021e 0B       		.uleb128 0xb
 1561 021f 3B       		.uleb128 0x3b
 1562 0220 0B       		.uleb128 0xb
 1563 0221 00       		.byte	0
 1564 0222 00       		.byte	0
 1565 0223 29       		.uleb128 0x29
 1566 0224 2E       		.uleb128 0x2e
 1567 0225 00       		.byte	0
 1568 0226 3F       		.uleb128 0x3f
 1569 0227 19       		.uleb128 0x19
 1570 0228 3C       		.uleb128 0x3c
 1571 0229 19       		.uleb128 0x19
 1572 022a 6E       		.uleb128 0x6e
 1573 022b 0E       		.uleb128 0xe
 1574 022c 03       		.uleb128 0x3
 1575 022d 0E       		.uleb128 0xe
 1576 022e 3A       		.uleb128 0x3a
 1577 022f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 52


 1578 0230 3B       		.uleb128 0x3b
 1579 0231 05       		.uleb128 0x5
 1580 0232 00       		.byte	0
 1581 0233 00       		.byte	0
 1582 0234 00       		.byte	0
 1583              		.section	.debug_loc,"",%progbits
 1584              	.Ldebug_loc0:
 1585              	.LLST0:
 1586 0000 06000000 		.4byte	.LVL0
 1587 0004 08000000 		.4byte	.LVL1
 1588 0008 0100     		.2byte	0x1
 1589 000a 54       		.byte	0x54
 1590 000b 00000000 		.4byte	0
 1591 000f 00000000 		.4byte	0
 1592              	.LLST1:
 1593 0013 16000000 		.4byte	.LVL2
 1594 0017 47000000 		.4byte	.LVL4-1
 1595 001b 0100     		.2byte	0x1
 1596 001d 50       		.byte	0x50
 1597 001e 00000000 		.4byte	0
 1598 0022 00000000 		.4byte	0
 1599              	.LLST2:
 1600 0026 48000000 		.4byte	.LVL4
 1601 002a 58000000 		.4byte	.LVL6
 1602 002e 0100     		.2byte	0x1
 1603 0030 50       		.byte	0x50
 1604 0031 00000000 		.4byte	0
 1605 0035 00000000 		.4byte	0
 1606              	.LLST3:
 1607 0039 54000000 		.4byte	.LVL5
 1608 003d 58000000 		.4byte	.LVL6
 1609 0041 0100     		.2byte	0x1
 1610 0043 50       		.byte	0x50
 1611 0044 00000000 		.4byte	0
 1612 0048 00000000 		.4byte	0
 1613              	.LLST4:
 1614 004c 5C000000 		.4byte	.LVL7
 1615 0050 60000000 		.4byte	.LVL8
 1616 0054 0100     		.2byte	0x1
 1617 0056 54       		.byte	0x54
 1618 0057 00000000 		.4byte	0
 1619 005b 00000000 		.4byte	0
 1620              		.section	.debug_aranges,"",%progbits
 1621 0000 1C000000 		.4byte	0x1c
 1622 0004 0200     		.2byte	0x2
 1623 0006 00000000 		.4byte	.Ldebug_info0
 1624 000a 04       		.byte	0x4
 1625 000b 00       		.byte	0
 1626 000c 0000     		.2byte	0
 1627 000e 0000     		.2byte	0
 1628 0010 00000000 		.4byte	.LFB70
 1629 0014 80000000 		.4byte	.LFE70-.LFB70
 1630 0018 00000000 		.4byte	0
 1631 001c 00000000 		.4byte	0
 1632              		.section	.debug_ranges,"",%progbits
 1633              	.Ldebug_ranges0:
 1634 0000 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 53


 1635 0004 80000000 		.4byte	.LFE70
 1636 0008 00000000 		.4byte	0
 1637 000c 00000000 		.4byte	0
 1638              		.section	.debug_line,"",%progbits
 1639              	.Ldebug_line0:
 1640 0000 D5010000 		.section	.debug_str,"MS",%progbits,1
 1640      02007E01 
 1640      00000201 
 1640      FB0E0D00 
 1640      01010101 
 1641              	.LASF46:
 1642 0000 49535232 		.ascii	"ISR2_Context\000"
 1642      5F436F6E 
 1642      74657874 
 1642      00
 1643              	.LASF69:
 1644 000d 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1644      616C5F65 
 1644      6E645F6E 
 1644      65737465 
 1644      645F7072 
 1645              	.LASF41:
 1646 0029 6E657874 		.ascii	"next\000"
 1646      00
 1647              	.LASF40:
 1648 002e 64656C74 		.ascii	"delta\000"
 1648      6100
 1649              	.LASF21:
 1650 0034 5469636B 		.ascii	"TickType\000"
 1650      54797065 
 1650      00
 1651              	.LASF58:
 1652 003d 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1652      5254495F 
 1652      7365745F 
 1652      73657276 
 1652      6963655F 
 1653              	.LASF83:
 1654 0054 45455F73 		.ascii	"EE_stkfirst\000"
 1654      746B6669 
 1654      72737400 
 1655              	.LASF17:
 1656 0060 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1656      59504542 
 1656      4F4F4C00 
 1657              	.LASF103:
 1658 006c 45455F6F 		.ascii	"EE_oo_ForceSchedule\000"
 1658      6F5F466F 
 1658      72636553 
 1658      63686564 
 1658      756C6500 
 1659              	.LASF7:
 1660 0080 6C6F6E67 		.ascii	"long long unsigned int\000"
 1660      206C6F6E 
 1660      6720756E 
 1660      7369676E 
 1660      65642069 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 54


 1661              	.LASF62:
 1662 0097 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1662      616C5F72 
 1662      65616479 
 1662      32737461 
 1662      636B6564 
 1663              	.LASF43:
 1664 00ac 53746174 		.ascii	"StatusType\000"
 1664      75735479 
 1664      706500
 1665              	.LASF91:
 1666 00b7 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1666      6F5F636F 
 1666      756E7465 
 1666      725F6F62 
 1666      6A656374 
 1667              	.LASF100:
 1668 00d0 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_force_schedul"
 1668      72617465 
 1668      645F536F 
 1668      75726365 
 1668      5C50536F 
 1669 0101 652E6300 		.ascii	"e.c\000"
 1670              	.LASF37:
 1671 0105 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1671      6F5F636F 
 1671      756E7465 
 1671      725F6F62 
 1671      6A656374 
 1672              	.LASF20:
 1673 0123 5461736B 		.ascii	"TaskType\000"
 1673      54797065 
 1673      00
 1674              	.LASF24:
 1675 012c 6D617861 		.ascii	"maxallowedvalue\000"
 1675      6C6C6F77 
 1675      65647661 
 1675      6C756500 
 1676              	.LASF6:
 1677 013c 6C6F6E67 		.ascii	"long long int\000"
 1677      206C6F6E 
 1677      6720696E 
 1677      7400
 1678              	.LASF0:
 1679 014a 7369676E 		.ascii	"signed char\000"
 1679      65642063 
 1679      68617200 
 1680              	.LASF99:
 1681 0156 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1681      43313120 
 1681      352E342E 
 1681      31203230 
 1681      31363036 
 1682 0189 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1682      20726576 
 1682      6973696F 
 1682      6E203233 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 55


 1682      37373135 
 1683 01bc 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1683      66756E63 
 1683      74696F6E 
 1683      2D736563 
 1683      74696F6E 
 1684              	.LASF95:
 1685 01e4 45455F72 		.ascii	"EE_rq_lookup\000"
 1685      715F6C6F 
 1685      6F6B7570 
 1685      00
 1686              	.LASF30:
 1687 01f1 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1687      6F5F636F 
 1687      756E7465 
 1687      725F5241 
 1687      4D5F7479 
 1688              	.LASF50:
 1689 0208 506F7374 		.ascii	"PostTaskHook_Context\000"
 1689      5461736B 
 1689      486F6F6B 
 1689      5F436F6E 
 1689      74657874 
 1690              	.LASF4:
 1691 021d 6C6F6E67 		.ascii	"long int\000"
 1691      20696E74 
 1691      00
 1692              	.LASF59:
 1693 0226 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1693      5254495F 
 1693      7365745F 
 1693      73657276 
 1693      6963655F 
 1694              	.LASF93:
 1695 023e 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1695      6F5F4952 
 1695      515F7375 
 1695      7370656E 
 1695      645F7374 
 1696              	.LASF76:
 1697 0257 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1697      74645F65 
 1697      6E646379 
 1697      636C655F 
 1697      6E657874 
 1698              	.LASF26:
 1699 0270 6D696E63 		.ascii	"mincycle\000"
 1699      79636C65 
 1699      00
 1700              	.LASF98:
 1701 0279 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1701      715F7175 
 1701      65727966 
 1701      69727374 
 1701      00
 1702              	.LASF18:
 1703 028a 45455F54 		.ascii	"EE_TID\000"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 56


 1703      494400
 1704              	.LASF28:
 1705 0291 76616C75 		.ascii	"value\000"
 1705      6500
 1706              	.LASF65:
 1707 0297 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1707      746B5F71 
 1707      75657279 
 1707      66697273 
 1707      7400
 1708              	.LASF8:
 1709 02a9 756E7369 		.ascii	"unsigned int\000"
 1709      676E6564 
 1709      20696E74 
 1709      00
 1710              	.LASF11:
 1711 02b6 45455F49 		.ascii	"EE_INT8\000"
 1711      4E543800 
 1712              	.LASF15:
 1713 02be 45455F55 		.ascii	"EE_UREG\000"
 1713      52454700 
 1714              	.LASF5:
 1715 02c6 6C6F6E67 		.ascii	"long unsigned int\000"
 1715      20756E73 
 1715      69676E65 
 1715      6420696E 
 1715      7400
 1716              	.LASF87:
 1717 02d8 45455F74 		.ascii	"EE_th_waswaiting\000"
 1717      685F7761 
 1717      73776169 
 1717      74696E67 
 1717      00
 1718              	.LASF36:
 1719 02e9 6B696E64 		.ascii	"kind\000"
 1719      00
 1720              	.LASF3:
 1721 02ee 73686F72 		.ascii	"short unsigned int\000"
 1721      7420756E 
 1721      7369676E 
 1721      65642069 
 1721      6E7400
 1722              	.LASF92:
 1723 0301 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1723      6F5F4952 
 1723      515F6469 
 1723      7361626C 
 1723      655F636F 
 1724              	.LASF33:
 1725 0319 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1725      6F5F636F 
 1725      756E7465 
 1725      725F6F62 
 1725      6A656374 
 1726              	.LASF53:
 1727 0338 416C6172 		.ascii	"AlarmCallback_Context\000"
 1727      6D43616C 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 57


 1727      6C626163 
 1727      6B5F436F 
 1727      6E746578 
 1728              	.LASF80:
 1729 034e 45455F74 		.ascii	"EE_th_status\000"
 1729      685F7374 
 1729      61747573 
 1729      00
 1730              	.LASF34:
 1731 035b 436F756E 		.ascii	"CounterObjectKindType\000"
 1731      7465724F 
 1731      626A6563 
 1731      744B696E 
 1731      64547970 
 1732              	.LASF79:
 1733 0371 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1733      685F6469 
 1733      73706174 
 1733      63685F70 
 1733      72696F00 
 1734              	.LASF10:
 1735 0385 45455F55 		.ascii	"EE_UINT8\000"
 1735      494E5438 
 1735      00
 1736              	.LASF23:
 1737 038e 436F756E 		.ascii	"CounterType\000"
 1737      74657254 
 1737      79706500 
 1738              	.LASF89:
 1739 039a 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1739      6F5F636F 
 1739      756E7465 
 1739      725F6F62 
 1739      6A656374 
 1740              	.LASF19:
 1741 03b3 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1741      5950455F 
 1741      52515F4D 
 1741      41534B00 
 1742              	.LASF49:
 1743 03c3 50726554 		.ascii	"PreTaskHook_Context\000"
 1743      61736B48 
 1743      6F6F6B5F 
 1743      436F6E74 
 1743      65787400 
 1744              	.LASF47:
 1745 03d7 4572726F 		.ascii	"ErrorHook_Context\000"
 1745      72486F6F 
 1745      6B5F436F 
 1745      6E746578 
 1745      7400
 1746              	.LASF97:
 1747 03e9 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1747      71327374 
 1747      6B5F6578 
 1747      6368616E 
 1747      676500
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 58


 1748              	.LASF77:
 1749 03fc 73697A65 		.ascii	"sizetype\000"
 1749      74797065 
 1749      00
 1750              	.LASF48:
 1751 0405 50726F74 		.ascii	"ProtectionHook_Context\000"
 1751      65637469 
 1751      6F6E486F 
 1751      6F6B5F43 
 1751      6F6E7465 
 1752              	.LASF9:
 1753 041c 6C6F6E67 		.ascii	"long double\000"
 1753      20646F75 
 1753      626C6500 
 1754              	.LASF94:
 1755 0428 45455F41 		.ascii	"EE_ApplicationMode\000"
 1755      70706C69 
 1755      63617469 
 1755      6F6E4D6F 
 1755      646500
 1756              	.LASF54:
 1757 043b 49646C65 		.ascii	"Idle_Context\000"
 1757      5F436F6E 
 1757      74657874 
 1757      00
 1758              	.LASF67:
 1759 0448 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 1759      735F6D6F 
 1759      6E69746F 
 1759      72696E67 
 1759      5F746865 
 1760              	.LASF25:
 1761 0463 7469636B 		.ascii	"ticksperbase\000"
 1761      73706572 
 1761      62617365 
 1761      00
 1762              	.LASF44:
 1763 0470 4B65726E 		.ascii	"Kernel_Context\000"
 1763      656C5F43 
 1763      6F6E7465 
 1763      787400
 1764              	.LASF72:
 1765 047f 63757272 		.ascii	"current\000"
 1765      656E7400 
 1766              	.LASF45:
 1767 0487 5441534B 		.ascii	"TASK_Context\000"
 1767      5F436F6E 
 1767      74657874 
 1767      00
 1768              	.LASF38:
 1769 0494 75736564 		.ascii	"used\000"
 1769      00
 1770              	.LASF64:
 1771 0499 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1771      6F5F6361 
 1771      6C6C5F50 
 1771      6F737454 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 59


 1771      61736B48 
 1772              	.LASF84:
 1773 04b1 45455F73 		.ascii	"EE_sys_ceiling\000"
 1773      79735F63 
 1773      65696C69 
 1773      6E6700
 1774              	.LASF42:
 1775 04c0 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 1775      6F5F636F 
 1775      756E7465 
 1775      725F6F62 
 1775      6A656374 
 1776              	.LASF63:
 1777 04de 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1777      6F5F6361 
 1777      6C6C5F50 
 1777      72655461 
 1777      736B486F 
 1778              	.LASF88:
 1779 04f5 45455F63 		.ascii	"EE_counter_ROM\000"
 1779      6F756E74 
 1779      65725F52 
 1779      4F4D00
 1780              	.LASF12:
 1781 0504 45455F55 		.ascii	"EE_UINT16\000"
 1781      494E5431 
 1781      3600
 1782              	.LASF32:
 1783 050e 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 1783      43484544 
 1783      554C4554 
 1783      41424C45 
 1783      00
 1784              	.LASF70:
 1785 051f 45455F6F 		.ascii	"EE_oo_preemption_point\000"
 1785      6F5F7072 
 1785      65656D70 
 1785      74696F6E 
 1785      5F706F69 
 1786              	.LASF56:
 1787 0536 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 1787      6F727465 
 1787      785F6D78 
 1787      5F726573 
 1787      756D6549 
 1788              	.LASF1:
 1789 054d 756E7369 		.ascii	"unsigned char\000"
 1789      676E6564 
 1789      20636861 
 1789      7200
 1790              	.LASF31:
 1791 055b 45455F41 		.ascii	"EE_ALARM\000"
 1791      4C41524D 
 1791      00
 1792              	.LASF81:
 1793 0564 45455F74 		.ascii	"EE_th_next\000"
 1793      685F6E65 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 60


 1793      787400
 1794              	.LASF86:
 1795 056f 45455F74 		.ascii	"EE_th_event_active\000"
 1795      685F6576 
 1795      656E745F 
 1795      61637469 
 1795      766500
 1796              	.LASF2:
 1797 0582 73686F72 		.ascii	"short int\000"
 1797      7420696E 
 1797      7400
 1798              	.LASF104:
 1799 058c 666C6167 		.ascii	"flag\000"
 1799      00
 1800              	.LASF27:
 1801 0591 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 1801      6F5F636F 
 1801      756E7465 
 1801      725F524F 
 1801      4D5F7479 
 1802              	.LASF61:
 1803 05a8 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1803      735F7365 
 1803      745F6578 
 1803      65637574 
 1803      696F6E5F 
 1804              	.LASF85:
 1805 05c4 45455F72 		.ascii	"EE_rq_bitmask\000"
 1805      715F6269 
 1805      746D6173 
 1805      6B00
 1806              	.LASF29:
 1807 05d2 66697273 		.ascii	"first\000"
 1807      7400
 1808              	.LASF22:
 1809 05d8 436F756E 		.ascii	"CounterObjectType\000"
 1809      7465724F 
 1809      626A6563 
 1809      74547970 
 1809      6500
 1810              	.LASF51:
 1811 05ea 53746172 		.ascii	"StartupHook_Context\000"
 1811      74757048 
 1811      6F6F6B5F 
 1811      436F6E74 
 1811      65787400 
 1812              	.LASF60:
 1813 05fe 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1813      5254495F 
 1813      7365745F 
 1813      74685F65 
 1813      715F6469 
 1814              	.LASF55:
 1815 061e 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1815      59504543 
 1815      4F4E5445 
 1815      585400
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 61


 1816              	.LASF90:
 1817 062d 45455F63 		.ascii	"EE_counter_RAM\000"
 1817      6F756E74 
 1817      65725F52 
 1817      414D00
 1818              	.LASF35:
 1819 063c 73706563 		.ascii	"spec_id\000"
 1819      5F696400 
 1820              	.LASF68:
 1821 0644 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 1821      616C5F62 
 1821      6567696E 
 1821      5F6E6573 
 1821      7465645F 
 1822              	.LASF71:
 1823 0662 69737461 		.ascii	"istat\000"
 1823      7400
 1824              	.LASF57:
 1825 0668 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 1825      5254495F 
 1825      7365745F 
 1825      73657276 
 1825      69636500 
 1826              	.LASF74:
 1827 067c 45455F68 		.ascii	"EE_hal_stkchange\000"
 1827      616C5F73 
 1827      746B6368 
 1827      616E6765 
 1827      00
 1828              	.LASF66:
 1829 068d 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 1829      616C5F67 
 1829      65745F49 
 1829      52515F6E 
 1829      65737469 
 1830              	.LASF82:
 1831 06aa 45455F74 		.ascii	"EE_th_rnact\000"
 1831      685F726E 
 1831      61637400 
 1832              	.LASF96:
 1833 06b6 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 1833      6F727465 
 1833      785F6D78 
 1833      5F636861 
 1833      6E67655F 
 1834              	.LASF101:
 1835 06d2 443A5C48 		.ascii	"D:\\H_da\\Winter Semester\\MM03 Advanced Microcontr"
 1835      5F64615C 
 1835      57696E74 
 1835      65722053 
 1835      656D6573 
 1836 0702 6F6C6C65 		.ascii	"oller Systems and Embedded Operating Systems\\Lectu"
 1836      72205379 
 1836      7374656D 
 1836      7320616E 
 1836      6420456D 
 1837 0734 72652050 		.ascii	"re Prof. Fromm\\workspace\\workspace_psoc\\Reaction"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccoNZeXF.s 			page 62


 1837      726F662E 
 1837      2046726F 
 1837      6D6D5C77 
 1837      6F726B73 
 1838 0764 47616D65 		.ascii	"Game_with erika.cydsn\000"
 1838      5F776974 
 1838      68206572 
 1838      696B612E 
 1838      63796473 
 1839              	.LASF75:
 1840 077a 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1840      52515F6E 
 1840      65737469 
 1840      6E675F6C 
 1840      6576656C 
 1841              	.LASF14:
 1842 078f 45455F55 		.ascii	"EE_UINT32\000"
 1842      494E5433 
 1842      3200
 1843              	.LASF13:
 1844 0799 45455F49 		.ascii	"EE_INT32\000"
 1844      4E543332 
 1844      00
 1845              	.LASF73:
 1846 07a2 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 1846      6F5F7275 
 1846      6E5F6E65 
 1846      78745F74 
 1846      61736B00 
 1847              	.LASF39:
 1848 07b6 636E7463 		.ascii	"cntcycle\000"
 1848      79636C65 
 1848      00
 1849              	.LASF52:
 1850 07bf 53687574 		.ascii	"ShutdownHook_Context\000"
 1850      646F776E 
 1850      486F6F6B 
 1850      5F436F6E 
 1850      74657874 
 1851              	.LASF78:
 1852 07d4 45455F74 		.ascii	"EE_th_ready_prio\000"
 1852      685F7265 
 1852      6164795F 
 1852      7072696F 
 1852      00
 1853              	.LASF102:
 1854 07e5 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 1854      6F727465 
 1854      785F6D78 
 1854      5F737573 
 1854      70656E64 
 1855              	.LASF16:
 1856 07fd 45455F46 		.ascii	"EE_FREG\000"
 1856      52454700 
 1857              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
