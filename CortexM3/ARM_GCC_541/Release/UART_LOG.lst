ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_LOG.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_LOG_Init,"ax",%progbits
  20              		.align	1
  21              		.global	UART_LOG_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_LOG_Init, %function
  25              	UART_LOG_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_LOG.c"
   1:Generated_Source\PSoC5/UART_LOG.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_LOG.c **** * File Name: UART_LOG.c
   3:Generated_Source\PSoC5/UART_LOG.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_LOG.c **** *
   5:Generated_Source\PSoC5/UART_LOG.c **** * Description:
   6:Generated_Source\PSoC5/UART_LOG.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_LOG.c **** *
   8:Generated_Source\PSoC5/UART_LOG.c **** * Note:
   9:Generated_Source\PSoC5/UART_LOG.c **** *
  10:Generated_Source\PSoC5/UART_LOG.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_LOG.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_LOG.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_LOG.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_LOG.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_LOG.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_LOG.c **** 
  17:Generated_Source\PSoC5/UART_LOG.c **** #include "UART_LOG.h"
  18:Generated_Source\PSoC5/UART_LOG.c **** #if (UART_LOG_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_LOG.c ****     #include "UART_LOG_IntClock.h"
  20:Generated_Source\PSoC5/UART_LOG.c **** #endif /* End UART_LOG_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_LOG.c **** 
  22:Generated_Source\PSoC5/UART_LOG.c **** 
  23:Generated_Source\PSoC5/UART_LOG.c **** /***************************************
  24:Generated_Source\PSoC5/UART_LOG.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_LOG.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_LOG.c **** 
  27:Generated_Source\PSoC5/UART_LOG.c **** uint8 UART_LOG_initVar = 0u;
  28:Generated_Source\PSoC5/UART_LOG.c **** 
  29:Generated_Source\PSoC5/UART_LOG.c **** #if (UART_LOG_TX_INTERRUPT_ENABLED && UART_LOG_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_LOG.c ****     volatile uint8 UART_LOG_txBuffer[UART_LOG_TX_BUFFER_SIZE];
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 2


  31:Generated_Source\PSoC5/UART_LOG.c ****     volatile uint8 UART_LOG_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_LOG.c ****     uint8 UART_LOG_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_LOG.c **** #endif /* (UART_LOG_TX_INTERRUPT_ENABLED && UART_LOG_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_LOG.c **** 
  35:Generated_Source\PSoC5/UART_LOG.c **** #if (UART_LOG_RX_INTERRUPT_ENABLED && (UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_LOG.c ****     uint8 UART_LOG_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_LOG.c ****     volatile uint8 UART_LOG_rxBuffer[UART_LOG_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_LOG.c ****     volatile uint8 UART_LOG_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_LOG.c ****     volatile uint8 UART_LOG_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_LOG.c ****     volatile uint8 UART_LOG_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_LOG.c ****     volatile uint8 UART_LOG_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_LOG.c ****         volatile uint8 UART_LOG_rxAddressMode = UART_LOG_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_LOG.c ****         volatile uint8 UART_LOG_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_LOG.c **** #endif /* (UART_LOG_RX_INTERRUPT_ENABLED && (UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_LOG.c **** 
  48:Generated_Source\PSoC5/UART_LOG.c **** 
  49:Generated_Source\PSoC5/UART_LOG.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_LOG.c **** * Function Name: UART_LOG_Start
  51:Generated_Source\PSoC5/UART_LOG.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_LOG.c **** *
  53:Generated_Source\PSoC5/UART_LOG.c **** * Summary:
  54:Generated_Source\PSoC5/UART_LOG.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_LOG.c **** *  UART_LOG_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_LOG.c **** *  UART_LOG_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_LOG.c **** *  UART_LOG_Enable() function.
  58:Generated_Source\PSoC5/UART_LOG.c **** *
  59:Generated_Source\PSoC5/UART_LOG.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_LOG.c **** *  None.
  61:Generated_Source\PSoC5/UART_LOG.c **** *
  62:Generated_Source\PSoC5/UART_LOG.c **** * Return:
  63:Generated_Source\PSoC5/UART_LOG.c **** *  None.
  64:Generated_Source\PSoC5/UART_LOG.c **** *
  65:Generated_Source\PSoC5/UART_LOG.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_LOG.c **** *  The UART_LOG_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_LOG.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_LOG.c **** *  and set to one (1u) the first time UART_LOG_Start() is called. This
  69:Generated_Source\PSoC5/UART_LOG.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_LOG.c **** *  subsequent calls to the UART_LOG_Start() routine.
  71:Generated_Source\PSoC5/UART_LOG.c **** *
  72:Generated_Source\PSoC5/UART_LOG.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_LOG.c **** *  No.
  74:Generated_Source\PSoC5/UART_LOG.c **** *
  75:Generated_Source\PSoC5/UART_LOG.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_LOG.c **** void UART_LOG_Start(void) 
  77:Generated_Source\PSoC5/UART_LOG.c **** {
  78:Generated_Source\PSoC5/UART_LOG.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_LOG.c ****     if(UART_LOG_initVar == 0u)
  80:Generated_Source\PSoC5/UART_LOG.c ****     {
  81:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_Init();
  82:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_initVar = 1u;
  83:Generated_Source\PSoC5/UART_LOG.c ****     }
  84:Generated_Source\PSoC5/UART_LOG.c **** 
  85:Generated_Source\PSoC5/UART_LOG.c ****     UART_LOG_Enable();
  86:Generated_Source\PSoC5/UART_LOG.c **** }
  87:Generated_Source\PSoC5/UART_LOG.c **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 3


  88:Generated_Source\PSoC5/UART_LOG.c **** 
  89:Generated_Source\PSoC5/UART_LOG.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_LOG.c **** * Function Name: UART_LOG_Init
  91:Generated_Source\PSoC5/UART_LOG.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_LOG.c **** *
  93:Generated_Source\PSoC5/UART_LOG.c **** * Summary:
  94:Generated_Source\PSoC5/UART_LOG.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_LOG.c **** *  dialog settings. It is not necessary to call UART_LOG_Init() because
  96:Generated_Source\PSoC5/UART_LOG.c **** *  the UART_LOG_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_LOG.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_LOG.c **** *
  99:Generated_Source\PSoC5/UART_LOG.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_LOG.c **** *  None.
 101:Generated_Source\PSoC5/UART_LOG.c **** *
 102:Generated_Source\PSoC5/UART_LOG.c **** * Return:
 103:Generated_Source\PSoC5/UART_LOG.c **** *  None.
 104:Generated_Source\PSoC5/UART_LOG.c **** *
 105:Generated_Source\PSoC5/UART_LOG.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_LOG.c **** void UART_LOG_Init(void) 
 107:Generated_Source\PSoC5/UART_LOG.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC5/UART_LOG.c ****     #if(UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_LOG.c **** 
 110:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_LOG.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_LOG.c ****             (void) CyIntSetVector(UART_LOG_RX_VECT_NUM, &UART_LOG_RXISR);
 113:Generated_Source\PSoC5/UART_LOG.c ****             CyIntSetPriority(UART_LOG_RX_VECT_NUM, UART_LOG_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_LOG.c **** 
 117:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_SetRxAddressMode(UART_LOG_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_SetRxAddress1(UART_LOG_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_SetRxAddress2(UART_LOG_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* End UART_LOG_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_LOG.c **** 
 123:Generated_Source\PSoC5/UART_LOG.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXBITCTR_PERIOD_REG = UART_LOG_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 084B     		ldr	r3, .L2
  35 0002 7222     		movs	r2, #114
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_LOG.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXSTATUS_MASK_REG  = UART_LOG_INIT_RX_INTERRUPTS_MASK;
  37              		.loc 1 126 0
  38 0006 2022     		movs	r2, #32
  39 0008 83F8FF20 		strb	r2, [r3, #255]
 127:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* End UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_LOG.c **** 
 129:Generated_Source\PSoC5/UART_LOG.c ****     #if(UART_LOG_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_LOG.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_LOG.c ****             (void) CyIntSetVector(UART_LOG_TX_VECT_NUM, &UART_LOG_TXISR);
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 4


 133:Generated_Source\PSoC5/UART_LOG.c ****             CyIntSetPriority(UART_LOG_TX_VECT_NUM, UART_LOG_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_LOG.c **** 
 136:Generated_Source\PSoC5/UART_LOG.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXBITCLKGEN_CTR_REG = UART_LOG_BIT_CENTER;
  40              		.loc 1 138 0
  41 000c 0622     		movs	r2, #6
  42 000e 83F89D20 		strb	r2, [r3, #157]
 139:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXBITCLKTX_COMPLETE_REG = ((UART_LOG_NUMBER_OF_DATA_BITS +
  43              		.loc 1 139 0
  44 0012 4722     		movs	r2, #71
  45 0014 83F8AD20 		strb	r2, [r3, #173]
 138:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXBITCLKTX_COMPLETE_REG = ((UART_LOG_NUMBER_OF_DATA_BITS +
  46              		.loc 1 138 0
  47 0018 9D33     		adds	r3, r3, #157
 140:Generated_Source\PSoC5/UART_LOG.c ****                         UART_LOG_NUMBER_OF_START_BIT) * UART_LOG_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_LOG.c ****         #else
 142:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXBITCTR_PERIOD_REG = ((UART_LOG_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_LOG.c ****                         UART_LOG_NUMBER_OF_START_BIT) * UART_LOG_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* End UART_LOG_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_LOG.c **** 
 146:Generated_Source\PSoC5/UART_LOG.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXSTATUS_MASK_REG = UART_LOG_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_LOG.c ****         #else
 150:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXSTATUS_MASK_REG = UART_LOG_INIT_TX_INTERRUPTS_MASK;
  48              		.loc 1 150 0
  49 001a 0022     		movs	r2, #0
  50 001c 03F8A02C 		strb	r2, [r3, #-160]
  51 0020 7047     		bx	lr
  52              	.L3:
  53 0022 00BF     		.align	2
  54              	.L2:
  55 0024 89640040 		.word	1073767561
  56              		.cfi_endproc
  57              	.LFE1:
  58              		.size	UART_LOG_Init, .-UART_LOG_Init
  59              		.section	.text.UART_LOG_Enable,"ax",%progbits
  60              		.align	1
  61              		.global	UART_LOG_Enable
  62              		.thumb
  63              		.thumb_func
  64              		.type	UART_LOG_Enable, %function
  65              	UART_LOG_Enable:
  66              	.LFB2:
 151:Generated_Source\PSoC5/UART_LOG.c ****         #endif /*End UART_LOG_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_LOG.c **** 
 153:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* End UART_LOG_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_LOG.c **** 
 155:Generated_Source\PSoC5/UART_LOG.c ****     #if(UART_LOG_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_LOG.c ****             (UART_LOG_ReadControlRegister() & (uint8)~UART_LOG_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_LOG.c ****             (uint8)(UART_LOG_PARITY_TYPE << UART_LOG_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* End UART_LOG_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_LOG.c **** }
 161:Generated_Source\PSoC5/UART_LOG.c **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 5


 162:Generated_Source\PSoC5/UART_LOG.c **** 
 163:Generated_Source\PSoC5/UART_LOG.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_LOG.c **** * Function Name: UART_LOG_Enable
 165:Generated_Source\PSoC5/UART_LOG.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_LOG.c **** *
 167:Generated_Source\PSoC5/UART_LOG.c **** * Summary:
 168:Generated_Source\PSoC5/UART_LOG.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_LOG.c **** *  to call UART_LOG_Enable() because the UART_LOG_Start() API
 170:Generated_Source\PSoC5/UART_LOG.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_LOG.c **** *  operation.
 172:Generated_Source\PSoC5/UART_LOG.c **** 
 173:Generated_Source\PSoC5/UART_LOG.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_LOG.c **** *  None.
 175:Generated_Source\PSoC5/UART_LOG.c **** *
 176:Generated_Source\PSoC5/UART_LOG.c **** * Return:
 177:Generated_Source\PSoC5/UART_LOG.c **** *  None.
 178:Generated_Source\PSoC5/UART_LOG.c **** *
 179:Generated_Source\PSoC5/UART_LOG.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_LOG.c **** *  UART_LOG_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_LOG.c **** *
 182:Generated_Source\PSoC5/UART_LOG.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_LOG.c **** void UART_LOG_Enable(void) 
 184:Generated_Source\PSoC5/UART_LOG.c **** {
  67              		.loc 1 184 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 10B5     		push	{r4, lr}
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART_LOG.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_LOG.c ****     enableInterrupts = CyEnterCriticalSection();
  75              		.loc 1 186 0
  76 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  77              	.LVL0:
  78 0006 0446     		mov	r4, r0
  79              	.LVL1:
 187:Generated_Source\PSoC5/UART_LOG.c **** 
 188:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_LOG.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXBITCTR_CONTROL_REG |= UART_LOG_CNTR_ENABLE;
  80              		.loc 1 190 0
  81 0008 0B4A     		ldr	r2, .L5
  82 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191:Generated_Source\PSoC5/UART_LOG.c **** 
 192:Generated_Source\PSoC5/UART_LOG.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXSTATUS_ACTL_REG  |= UART_LOG_INT_ENABLE;
 194:Generated_Source\PSoC5/UART_LOG.c **** 
 195:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_EnableRxInt();
 197:Generated_Source\PSoC5/UART_LOG.c **** 
 198:Generated_Source\PSoC5/UART_LOG.c ****             #if (UART_LOG_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_LOG.c ****             #endif /* (UART_LOG_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED) */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 6


 203:Generated_Source\PSoC5/UART_LOG.c **** 
 204:Generated_Source\PSoC5/UART_LOG.c ****     #if(UART_LOG_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_LOG.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_LOG.c ****         #if(!UART_LOG_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXBITCTR_CONTROL_REG |= UART_LOG_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* End UART_LOG_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_LOG.c **** 
 210:Generated_Source\PSoC5/UART_LOG.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_TXSTATUS_ACTL_REG |= UART_LOG_INT_ENABLE;
  83              		.loc 1 211 0
  84 000c 033A     		subs	r2, r2, #3
 190:Generated_Source\PSoC5/UART_LOG.c **** 
  85              		.loc 1 190 0
  86 000e 43F02003 		orr	r3, r3, #32
  87 0012 D370     		strb	r3, [r2, #3]
 193:Generated_Source\PSoC5/UART_LOG.c **** 
  88              		.loc 1 193 0
  89 0014 92F80231 		ldrb	r3, [r2, #258]	@ zero_extendqisi2
  90 0018 43F01003 		orr	r3, r3, #16
  91 001c 82F80231 		strb	r3, [r2, #258]
  92              		.loc 1 211 0
  93 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  94 0022 43F01003 		orr	r3, r3, #16
  95 0026 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_EnableTxInt();
 215:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_LOG.c ****      #endif /* (UART_LOG_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_LOG.c **** 
 218:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_IntClock_Start();  /* Enable the clock */
  96              		.loc 1 219 0
  97 0028 FFF7FEFF 		bl	UART_LOG_IntClock_Start
  98              	.LVL2:
 220:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_LOG.c **** 
 222:Generated_Source\PSoC5/UART_LOG.c ****     CyExitCriticalSection(enableInterrupts);
  99              		.loc 1 222 0
 100 002c 2046     		mov	r0, r4
 223:Generated_Source\PSoC5/UART_LOG.c **** }
 101              		.loc 1 223 0
 102 002e BDE81040 		pop	{r4, lr}
 103              		.cfi_restore 14
 104              		.cfi_restore 4
 105              		.cfi_def_cfa_offset 0
 106              	.LVL3:
 222:Generated_Source\PSoC5/UART_LOG.c **** }
 107              		.loc 1 222 0
 108 0032 FFF7FEBF 		b	CyExitCriticalSection
 109              	.LVL4:
 110              	.L6:
 111 0036 00BF     		.align	2
 112              	.L5:
 113 0038 99640040 		.word	1073767577
 114              		.cfi_endproc
 115              	.LFE2:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 7


 116              		.size	UART_LOG_Enable, .-UART_LOG_Enable
 117              		.section	.text.UART_LOG_Start,"ax",%progbits
 118              		.align	1
 119              		.global	UART_LOG_Start
 120              		.thumb
 121              		.thumb_func
 122              		.type	UART_LOG_Start, %function
 123              	UART_LOG_Start:
 124              	.LFB0:
  77:Generated_Source\PSoC5/UART_LOG.c ****     /* If not initialized then initialize all required hardware and software */
 125              		.loc 1 77 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 08B5     		push	{r3, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 3, -8
 132              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART_LOG.c ****     {
 133              		.loc 1 79 0
 134 0002 0549     		ldr	r1, .L10
 135 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 136 0006 1BB9     		cbnz	r3, .L8
  81:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_initVar = 1u;
 137              		.loc 1 81 0
 138 0008 FFF7FEFF 		bl	UART_LOG_Init
 139              	.LVL5:
  82:Generated_Source\PSoC5/UART_LOG.c ****     }
 140              		.loc 1 82 0
 141 000c 0123     		movs	r3, #1
 142 000e 0B70     		strb	r3, [r1]
 143              	.L8:
  86:Generated_Source\PSoC5/UART_LOG.c **** 
 144              		.loc 1 86 0
 145 0010 BDE80840 		pop	{r3, lr}
 146              		.cfi_restore 14
 147              		.cfi_restore 3
 148              		.cfi_def_cfa_offset 0
  85:Generated_Source\PSoC5/UART_LOG.c **** }
 149              		.loc 1 85 0
 150 0014 FFF7FEBF 		b	UART_LOG_Enable
 151              	.LVL6:
 152              	.L11:
 153              		.align	2
 154              	.L10:
 155 0018 00000000 		.word	.LANCHOR0
 156              		.cfi_endproc
 157              	.LFE0:
 158              		.size	UART_LOG_Start, .-UART_LOG_Start
 159              		.section	.text.UART_LOG_Stop,"ax",%progbits
 160              		.align	1
 161              		.global	UART_LOG_Stop
 162              		.thumb
 163              		.thumb_func
 164              		.type	UART_LOG_Stop, %function
 165              	UART_LOG_Stop:
 166              	.LFB3:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 8


 224:Generated_Source\PSoC5/UART_LOG.c **** 
 225:Generated_Source\PSoC5/UART_LOG.c **** 
 226:Generated_Source\PSoC5/UART_LOG.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_LOG.c **** * Function Name: UART_LOG_Stop
 228:Generated_Source\PSoC5/UART_LOG.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_LOG.c **** *
 230:Generated_Source\PSoC5/UART_LOG.c **** * Summary:
 231:Generated_Source\PSoC5/UART_LOG.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_LOG.c **** *
 233:Generated_Source\PSoC5/UART_LOG.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_LOG.c **** *  None.
 235:Generated_Source\PSoC5/UART_LOG.c **** *
 236:Generated_Source\PSoC5/UART_LOG.c **** * Return:
 237:Generated_Source\PSoC5/UART_LOG.c **** *  None.
 238:Generated_Source\PSoC5/UART_LOG.c **** *
 239:Generated_Source\PSoC5/UART_LOG.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_LOG.c **** void UART_LOG_Stop(void) 
 241:Generated_Source\PSoC5/UART_LOG.c **** {
 167              		.loc 1 241 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 10B5     		push	{r4, lr}
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 4, -8
 174              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART_LOG.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_LOG.c ****     enableInterrupts = CyEnterCriticalSection();
 175              		.loc 1 243 0
 176 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 177              	.LVL7:
 178 0006 0446     		mov	r4, r0
 179              	.LVL8:
 244:Generated_Source\PSoC5/UART_LOG.c **** 
 245:Generated_Source\PSoC5/UART_LOG.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXBITCTR_CONTROL_REG &= (uint8) ~UART_LOG_CNTR_ENABLE;
 180              		.loc 1 247 0
 181 0008 0B4A     		ldr	r2, .L13
 182 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 183 000c 03F0DF03 		and	r3, r3, #223
 184 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_LOG.c **** 
 250:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_LOG.c ****         #if(!UART_LOG_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXBITCTR_CONTROL_REG &= (uint8) ~UART_LOG_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (!UART_LOG_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_LOG.c **** 
 256:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_IntClock_Stop();   /* Disable the clock */
 185              		.loc 1 257 0
 186 0012 FFF7FEFF 		bl	UART_LOG_IntClock_Stop
 187              	.LVL9:
 258:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_LOG.c **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 9


 260:Generated_Source\PSoC5/UART_LOG.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXSTATUS_ACTL_REG  &= (uint8) ~UART_LOG_INT_ENABLE;
 188              		.loc 1 262 0
 189 0016 094A     		ldr	r2, .L13+4
 263:Generated_Source\PSoC5/UART_LOG.c **** 
 264:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_DisableRxInt();
 266:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_LOG.c **** 
 269:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_TXSTATUS_ACTL_REG &= (uint8) ~UART_LOG_INT_ENABLE;
 271:Generated_Source\PSoC5/UART_LOG.c **** 
 272:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_DisableTxInt();
 274:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_LOG.c **** 
 277:Generated_Source\PSoC5/UART_LOG.c ****     CyExitCriticalSection(enableInterrupts);
 190              		.loc 1 277 0
 191 0018 2046     		mov	r0, r4
 262:Generated_Source\PSoC5/UART_LOG.c **** 
 192              		.loc 1 262 0
 193 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 270:Generated_Source\PSoC5/UART_LOG.c **** 
 194              		.loc 1 270 0
 195 001c A2F58172 		sub	r2, r2, #258
 262:Generated_Source\PSoC5/UART_LOG.c **** 
 196              		.loc 1 262 0
 197 0020 03F0EF03 		and	r3, r3, #239
 198 0024 82F80231 		strb	r3, [r2, #258]
 270:Generated_Source\PSoC5/UART_LOG.c **** 
 199              		.loc 1 270 0
 200 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 201 002a 03F0EF03 		and	r3, r3, #239
 202 002e 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/UART_LOG.c **** }
 203              		.loc 1 278 0
 204 0030 BDE81040 		pop	{r4, lr}
 205              		.cfi_restore 14
 206              		.cfi_restore 4
 207              		.cfi_def_cfa_offset 0
 208              	.LVL10:
 277:Generated_Source\PSoC5/UART_LOG.c **** }
 209              		.loc 1 277 0
 210 0034 FFF7FEBF 		b	CyExitCriticalSection
 211              	.LVL11:
 212              	.L14:
 213              		.align	2
 214              	.L13:
 215 0038 99640040 		.word	1073767577
 216 003c 98650040 		.word	1073767832
 217              		.cfi_endproc
 218              	.LFE3:
 219              		.size	UART_LOG_Stop, .-UART_LOG_Stop
 220              		.section	.text.UART_LOG_ReadControlRegister,"ax",%progbits
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 10


 221              		.align	1
 222              		.global	UART_LOG_ReadControlRegister
 223              		.thumb
 224              		.thumb_func
 225              		.type	UART_LOG_ReadControlRegister, %function
 226              	UART_LOG_ReadControlRegister:
 227              	.LFB4:
 279:Generated_Source\PSoC5/UART_LOG.c **** 
 280:Generated_Source\PSoC5/UART_LOG.c **** 
 281:Generated_Source\PSoC5/UART_LOG.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_LOG.c **** * Function Name: UART_LOG_ReadControlRegister
 283:Generated_Source\PSoC5/UART_LOG.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_LOG.c **** *
 285:Generated_Source\PSoC5/UART_LOG.c **** * Summary:
 286:Generated_Source\PSoC5/UART_LOG.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_LOG.c **** *
 288:Generated_Source\PSoC5/UART_LOG.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_LOG.c **** *  None.
 290:Generated_Source\PSoC5/UART_LOG.c **** *
 291:Generated_Source\PSoC5/UART_LOG.c **** * Return:
 292:Generated_Source\PSoC5/UART_LOG.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_LOG.c **** *
 294:Generated_Source\PSoC5/UART_LOG.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_LOG.c **** uint8 UART_LOG_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_LOG.c **** {
 228              		.loc 1 296 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_LOG.c ****         return(0u);
 299:Generated_Source\PSoC5/UART_LOG.c ****     #else
 300:Generated_Source\PSoC5/UART_LOG.c ****         return(UART_LOG_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_LOG.c **** }
 233              		.loc 1 302 0
 234 0000 0020     		movs	r0, #0
 235 0002 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE4:
 238              		.size	UART_LOG_ReadControlRegister, .-UART_LOG_ReadControlRegister
 239              		.section	.text.UART_LOG_WriteControlRegister,"ax",%progbits
 240              		.align	1
 241              		.global	UART_LOG_WriteControlRegister
 242              		.thumb
 243              		.thumb_func
 244              		.type	UART_LOG_WriteControlRegister, %function
 245              	UART_LOG_WriteControlRegister:
 246              	.LFB30:
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251 0000 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE30:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 11


 254              		.size	UART_LOG_WriteControlRegister, .-UART_LOG_WriteControlRegister
 255              		.section	.text.UART_LOG_SetRxInterruptMode,"ax",%progbits
 256              		.align	1
 257              		.global	UART_LOG_SetRxInterruptMode
 258              		.thumb
 259              		.thumb_func
 260              		.type	UART_LOG_SetRxInterruptMode, %function
 261              	UART_LOG_SetRxInterruptMode:
 262              	.LFB6:
 303:Generated_Source\PSoC5/UART_LOG.c **** 
 304:Generated_Source\PSoC5/UART_LOG.c **** 
 305:Generated_Source\PSoC5/UART_LOG.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_LOG.c **** * Function Name: UART_LOG_WriteControlRegister
 307:Generated_Source\PSoC5/UART_LOG.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_LOG.c **** *
 309:Generated_Source\PSoC5/UART_LOG.c **** * Summary:
 310:Generated_Source\PSoC5/UART_LOG.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_LOG.c **** *
 312:Generated_Source\PSoC5/UART_LOG.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_LOG.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_LOG.c **** *
 315:Generated_Source\PSoC5/UART_LOG.c **** * Return:
 316:Generated_Source\PSoC5/UART_LOG.c **** *  None.
 317:Generated_Source\PSoC5/UART_LOG.c **** *
 318:Generated_Source\PSoC5/UART_LOG.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_LOG.c **** void  UART_LOG_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_LOG.c **** {
 321:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_LOG.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_LOG.c ****         {
 324:Generated_Source\PSoC5/UART_LOG.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_LOG.c ****         }
 326:Generated_Source\PSoC5/UART_LOG.c ****     #else
 327:Generated_Source\PSoC5/UART_LOG.c ****        UART_LOG_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_LOG.c **** }
 330:Generated_Source\PSoC5/UART_LOG.c **** 
 331:Generated_Source\PSoC5/UART_LOG.c **** 
 332:Generated_Source\PSoC5/UART_LOG.c **** #if(UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_LOG.c ****     *
 337:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_LOG.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_LOG.c ****     *
 340:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_LOG.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_LOG.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_LOG.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_LOG.c ****     *      UART_LOG_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_LOG.c ****     *      UART_LOG_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_LOG.c ****     *      UART_LOG_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_LOG.c ****     *      UART_LOG_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_LOG.c ****     *      UART_LOG_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_LOG.c ****     *      UART_LOG_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_LOG.c ****     *      UART_LOG_RX_STS_MRKSPC           Interrupt on address detect.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 12


 351:Generated_Source\PSoC5/UART_LOG.c ****     *
 352:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 353:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 354:Generated_Source\PSoC5/UART_LOG.c ****     *
 355:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_LOG.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_LOG.c ****     *
 358:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_LOG.c ****     {
 263              		.loc 1 360 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              	.LVL12:
 361:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXSTATUS_MASK_REG  = intSrc;
 269              		.loc 1 361 0
 270 0000 014B     		ldr	r3, .L18
 271 0002 1870     		strb	r0, [r3]
 272 0004 7047     		bx	lr
 273              	.L19:
 274 0006 00BF     		.align	2
 275              	.L18:
 276 0008 88650040 		.word	1073767816
 277              		.cfi_endproc
 278              	.LFE6:
 279              		.size	UART_LOG_SetRxInterruptMode, .-UART_LOG_SetRxInterruptMode
 280              		.section	.text.UART_LOG_ReadRxData,"ax",%progbits
 281              		.align	1
 282              		.global	UART_LOG_ReadRxData
 283              		.thumb
 284              		.thumb_func
 285              		.type	UART_LOG_ReadRxData, %function
 286              	UART_LOG_ReadRxData:
 287              	.LFB7:
 362:Generated_Source\PSoC5/UART_LOG.c ****     }
 363:Generated_Source\PSoC5/UART_LOG.c **** 
 364:Generated_Source\PSoC5/UART_LOG.c **** 
 365:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_ReadRxData
 367:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_LOG.c ****     *
 369:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_LOG.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_LOG.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_LOG.c ****     *
 373:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 375:Generated_Source\PSoC5/UART_LOG.c ****     *
 376:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 377:Generated_Source\PSoC5/UART_LOG.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_LOG.c ****     *
 379:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_LOG.c ****     *     checked to identify new data.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 13


 383:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_LOG.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_LOG.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_LOG.c ****     *
 388:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
 390:Generated_Source\PSoC5/UART_LOG.c ****     *
 391:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_LOG.c ****     uint8 UART_LOG_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_LOG.c ****     {
 288              		.loc 1 393 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART_LOG.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_LOG.c **** 
 396:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_LOG.c **** 
 398:Generated_Source\PSoC5/UART_LOG.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_LOG.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_LOG.c **** 
 401:Generated_Source\PSoC5/UART_LOG.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_DisableRxInt();
 403:Generated_Source\PSoC5/UART_LOG.c **** 
 404:Generated_Source\PSoC5/UART_LOG.c ****         locRxBufferRead  = UART_LOG_rxBufferRead;
 405:Generated_Source\PSoC5/UART_LOG.c ****         locRxBufferWrite = UART_LOG_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_LOG.c **** 
 407:Generated_Source\PSoC5/UART_LOG.c ****         if( (UART_LOG_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_LOG.c ****         {
 409:Generated_Source\PSoC5/UART_LOG.c ****             rxData = UART_LOG_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_LOG.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_LOG.c **** 
 412:Generated_Source\PSoC5/UART_LOG.c ****             if(locRxBufferRead >= UART_LOG_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_LOG.c ****             {
 414:Generated_Source\PSoC5/UART_LOG.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_LOG.c ****             }
 416:Generated_Source\PSoC5/UART_LOG.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_LOG.c **** 
 419:Generated_Source\PSoC5/UART_LOG.c ****             if(UART_LOG_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_LOG.c ****             {
 421:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_LOG.c ****                 #if ((UART_LOG_RX_INTERRUPT_ENABLED) && (UART_LOG_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_LOG.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_LOG.c ****                     #if( UART_LOG_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_LOG.c ****                         if((UART_LOG_CONTROL_REG & UART_LOG_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_LOG.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_LOG.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_LOG.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_LOG.c ****                             */
 430:Generated_Source\PSoC5/UART_LOG.c ****                             UART_LOG_RXSTATUS_MASK_REG  |= UART_LOG_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_LOG.c ****                         }
 432:Generated_Source\PSoC5/UART_LOG.c ****                     #else
 433:Generated_Source\PSoC5/UART_LOG.c ****                         UART_LOG_RXSTATUS_MASK_REG  |= UART_LOG_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_LOG.c ****                     #endif /* end UART_LOG_HD_ENABLED */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 14


 435:Generated_Source\PSoC5/UART_LOG.c ****                 #endif /* ((UART_LOG_RX_INTERRUPT_ENABLED) && (UART_LOG_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_LOG.c ****             }
 437:Generated_Source\PSoC5/UART_LOG.c ****         }
 438:Generated_Source\PSoC5/UART_LOG.c ****         else
 439:Generated_Source\PSoC5/UART_LOG.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_LOG.c ****             rxData = UART_LOG_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_LOG.c ****         }
 442:Generated_Source\PSoC5/UART_LOG.c **** 
 443:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_EnableRxInt();
 444:Generated_Source\PSoC5/UART_LOG.c **** 
 445:Generated_Source\PSoC5/UART_LOG.c ****     #else
 446:Generated_Source\PSoC5/UART_LOG.c **** 
 447:Generated_Source\PSoC5/UART_LOG.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_LOG.c ****         rxData = UART_LOG_RXDATA_REG;
 293              		.loc 1 448 0
 294 0000 014B     		ldr	r3, .L21
 295 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 296              	.LVL13:
 449:Generated_Source\PSoC5/UART_LOG.c **** 
 450:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_LOG.c **** 
 452:Generated_Source\PSoC5/UART_LOG.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_LOG.c ****     }
 297              		.loc 1 453 0
 298 0004 7047     		bx	lr
 299              	.L22:
 300 0006 00BF     		.align	2
 301              	.L21:
 302 0008 47650040 		.word	1073767751
 303              		.cfi_endproc
 304              	.LFE7:
 305              		.size	UART_LOG_ReadRxData, .-UART_LOG_ReadRxData
 306              		.section	.text.UART_LOG_ReadRxStatus,"ax",%progbits
 307              		.align	1
 308              		.global	UART_LOG_ReadRxStatus
 309              		.thumb
 310              		.thumb_func
 311              		.type	UART_LOG_ReadRxStatus, %function
 312              	UART_LOG_ReadRxStatus:
 313              	.LFB8:
 454:Generated_Source\PSoC5/UART_LOG.c **** 
 455:Generated_Source\PSoC5/UART_LOG.c **** 
 456:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_ReadRxStatus
 458:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_LOG.c ****     *
 460:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_LOG.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_LOG.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_LOG.c ****     *
 464:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 466:Generated_Source\PSoC5/UART_LOG.c ****     *
 467:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 468:Generated_Source\PSoC5/UART_LOG.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_LOG.c ****     *
 470:Generated_Source\PSoC5/UART_LOG.c ****     * Side Effect:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 15


 471:Generated_Source\PSoC5/UART_LOG.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_LOG.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_LOG.c ****     *
 476:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_LOG.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_LOG.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_LOG.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_LOG.c ****     *
 484:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_LOG.c ****     uint8 UART_LOG_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_LOG.c ****     {
 314              		.loc 1 486 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART_LOG.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_LOG.c **** 
 489:Generated_Source\PSoC5/UART_LOG.c ****         status = UART_LOG_RXSTATUS_REG & UART_LOG_RX_HW_MASK;
 319              		.loc 1 489 0
 320 0000 024B     		ldr	r3, .L24
 321 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 322              	.LVL14:
 490:Generated_Source\PSoC5/UART_LOG.c **** 
 491:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_LOG.c ****         if(UART_LOG_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_LOG.c ****         {
 494:Generated_Source\PSoC5/UART_LOG.c ****             status |= UART_LOG_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_LOG.c ****         }
 497:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_LOG.c **** 
 499:Generated_Source\PSoC5/UART_LOG.c ****         return(status);
 500:Generated_Source\PSoC5/UART_LOG.c ****     }
 323              		.loc 1 500 0
 324 0004 00F07F00 		and	r0, r0, #127
 325              	.LVL15:
 326 0008 7047     		bx	lr
 327              	.L25:
 328 000a 00BF     		.align	2
 329              	.L24:
 330 000c 68650040 		.word	1073767784
 331              		.cfi_endproc
 332              	.LFE8:
 333              		.size	UART_LOG_ReadRxStatus, .-UART_LOG_ReadRxStatus
 334              		.section	.text.UART_LOG_GetChar,"ax",%progbits
 335              		.align	1
 336              		.global	UART_LOG_GetChar
 337              		.thumb
 338              		.thumb_func
 339              		.type	UART_LOG_GetChar, %function
 340              	UART_LOG_GetChar:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 16


 341              	.LFB9:
 501:Generated_Source\PSoC5/UART_LOG.c **** 
 502:Generated_Source\PSoC5/UART_LOG.c **** 
 503:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_GetChar
 505:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_LOG.c ****     *
 507:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_LOG.c ****     *  Returns the last received byte of data. UART_LOG_GetChar() is
 509:Generated_Source\PSoC5/UART_LOG.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_LOG.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_LOG.c ****     *
 512:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 514:Generated_Source\PSoC5/UART_LOG.c ****     *
 515:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 516:Generated_Source\PSoC5/UART_LOG.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_LOG.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_LOG.c ****     *
 519:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_LOG.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_LOG.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_LOG.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_LOG.c ****     *
 528:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
 530:Generated_Source\PSoC5/UART_LOG.c ****     *
 531:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_LOG.c ****     uint8 UART_LOG_GetChar(void) 
 533:Generated_Source\PSoC5/UART_LOG.c ****     {
 342              		.loc 1 533 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347              	.LVL16:
 534:Generated_Source\PSoC5/UART_LOG.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_LOG.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_LOG.c **** 
 537:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_LOG.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_LOG.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_LOG.c **** 
 541:Generated_Source\PSoC5/UART_LOG.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_DisableRxInt();
 543:Generated_Source\PSoC5/UART_LOG.c **** 
 544:Generated_Source\PSoC5/UART_LOG.c ****         locRxBufferRead  = UART_LOG_rxBufferRead;
 545:Generated_Source\PSoC5/UART_LOG.c ****         locRxBufferWrite = UART_LOG_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_LOG.c **** 
 547:Generated_Source\PSoC5/UART_LOG.c ****         if( (UART_LOG_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_LOG.c ****         {
 549:Generated_Source\PSoC5/UART_LOG.c ****             rxData = UART_LOG_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_LOG.c ****             locRxBufferRead++;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 17


 551:Generated_Source\PSoC5/UART_LOG.c ****             if(locRxBufferRead >= UART_LOG_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_LOG.c ****             {
 553:Generated_Source\PSoC5/UART_LOG.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_LOG.c ****             }
 555:Generated_Source\PSoC5/UART_LOG.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_LOG.c **** 
 558:Generated_Source\PSoC5/UART_LOG.c ****             if(UART_LOG_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_LOG.c ****             {
 560:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_LOG.c ****                 #if( (UART_LOG_RX_INTERRUPT_ENABLED) && (UART_LOG_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_LOG.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_LOG.c ****                     #if( UART_LOG_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_LOG.c ****                         if((UART_LOG_CONTROL_REG & UART_LOG_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_LOG.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_LOG.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_LOG.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_LOG.c ****                             */
 569:Generated_Source\PSoC5/UART_LOG.c ****                             UART_LOG_RXSTATUS_MASK_REG |= UART_LOG_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_LOG.c ****                         }
 571:Generated_Source\PSoC5/UART_LOG.c ****                     #else
 572:Generated_Source\PSoC5/UART_LOG.c ****                         UART_LOG_RXSTATUS_MASK_REG |= UART_LOG_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_LOG.c ****                     #endif /* end UART_LOG_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_LOG.c ****                 #endif /* UART_LOG_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_LOG.c ****             }
 576:Generated_Source\PSoC5/UART_LOG.c **** 
 577:Generated_Source\PSoC5/UART_LOG.c ****         }
 578:Generated_Source\PSoC5/UART_LOG.c ****         else
 579:Generated_Source\PSoC5/UART_LOG.c ****         {   rxStatus = UART_LOG_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_LOG.c ****             if((rxStatus & UART_LOG_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_LOG.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_LOG.c ****                 rxData = UART_LOG_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_LOG.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_LOG.c ****                 if((rxStatus & (UART_LOG_RX_STS_BREAK | UART_LOG_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_LOG.c ****                                 UART_LOG_RX_STS_STOP_ERROR | UART_LOG_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_LOG.c ****                 {
 587:Generated_Source\PSoC5/UART_LOG.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_LOG.c ****                 }
 589:Generated_Source\PSoC5/UART_LOG.c ****             }
 590:Generated_Source\PSoC5/UART_LOG.c ****         }
 591:Generated_Source\PSoC5/UART_LOG.c **** 
 592:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_EnableRxInt();
 593:Generated_Source\PSoC5/UART_LOG.c **** 
 594:Generated_Source\PSoC5/UART_LOG.c ****     #else
 595:Generated_Source\PSoC5/UART_LOG.c **** 
 596:Generated_Source\PSoC5/UART_LOG.c ****         rxStatus =UART_LOG_RXSTATUS_REG;
 348              		.loc 1 596 0
 349 0000 074B     		ldr	r3, .L30
 350 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 351 0004 DBB2     		uxtb	r3, r3
 352              	.LVL17:
 597:Generated_Source\PSoC5/UART_LOG.c ****         if((rxStatus & UART_LOG_RX_STS_FIFO_NOTEMPTY) != 0u)
 353              		.loc 1 597 0
 354 0006 03F02002 		and	r2, r3, #32
 355 000a 02F0FF00 		and	r0, r2, #255
 356 000e 2AB1     		cbz	r2, .L27
 598:Generated_Source\PSoC5/UART_LOG.c ****         {
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 18


 599:Generated_Source\PSoC5/UART_LOG.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_LOG.c ****             rxData = UART_LOG_RXDATA_REG;
 357              		.loc 1 600 0
 358 0010 044A     		ldr	r2, .L30+4
 601:Generated_Source\PSoC5/UART_LOG.c **** 
 602:Generated_Source\PSoC5/UART_LOG.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_LOG.c ****             if((rxStatus & (UART_LOG_RX_STS_BREAK | UART_LOG_RX_STS_PAR_ERROR |
 359              		.loc 1 603 0
 360 0012 13F01E0F 		tst	r3, #30
 600:Generated_Source\PSoC5/UART_LOG.c **** 
 361              		.loc 1 600 0
 362 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 363              	.LVL18:
 604:Generated_Source\PSoC5/UART_LOG.c ****                             UART_LOG_RX_STS_STOP_ERROR | UART_LOG_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_LOG.c ****             {
 606:Generated_Source\PSoC5/UART_LOG.c ****                 rxData = 0u;
 364              		.loc 1 606 0
 365 0018 18BF     		it	ne
 366 001a 0020     		movne	r0, #0
 367              	.LVL19:
 368              	.L27:
 607:Generated_Source\PSoC5/UART_LOG.c ****             }
 608:Generated_Source\PSoC5/UART_LOG.c ****         }
 609:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_LOG.c **** 
 611:Generated_Source\PSoC5/UART_LOG.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_LOG.c ****     }
 369              		.loc 1 612 0
 370 001c 7047     		bx	lr
 371              	.L31:
 372 001e 00BF     		.align	2
 373              	.L30:
 374 0020 68650040 		.word	1073767784
 375 0024 47650040 		.word	1073767751
 376              		.cfi_endproc
 377              	.LFE9:
 378              		.size	UART_LOG_GetChar, .-UART_LOG_GetChar
 379              		.section	.text.UART_LOG_GetByte,"ax",%progbits
 380              		.align	1
 381              		.global	UART_LOG_GetByte
 382              		.thumb
 383              		.thumb_func
 384              		.type	UART_LOG_GetByte, %function
 385              	UART_LOG_GetByte:
 386              	.LFB10:
 613:Generated_Source\PSoC5/UART_LOG.c **** 
 614:Generated_Source\PSoC5/UART_LOG.c **** 
 615:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_GetByte
 617:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_LOG.c ****     *
 619:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_LOG.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_LOG.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_LOG.c ****     *
 623:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 19


 625:Generated_Source\PSoC5/UART_LOG.c ****     *
 626:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 627:Generated_Source\PSoC5/UART_LOG.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_LOG.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_LOG.c ****     *
 630:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
 632:Generated_Source\PSoC5/UART_LOG.c ****     *
 633:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_LOG.c ****     uint16 UART_LOG_GetByte(void) 
 635:Generated_Source\PSoC5/UART_LOG.c ****     {
 387              		.loc 1 635 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392              	.LBB6:
 393              	.LBB7:
 489:Generated_Source\PSoC5/UART_LOG.c **** 
 394              		.loc 1 489 0
 395 0000 044B     		ldr	r3, .L33
 396              	.LBE7:
 397              	.LBE6:
 398              	.LBB9:
 399              	.LBB10:
 448:Generated_Source\PSoC5/UART_LOG.c **** 
 400              		.loc 1 448 0
 401 0002 054A     		ldr	r2, .L33+4
 402              	.LBE10:
 403              	.LBE9:
 404              	.LBB12:
 405              	.LBB8:
 489:Generated_Source\PSoC5/UART_LOG.c **** 
 406              		.loc 1 489 0
 407 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408              	.LBE8:
 409              	.LBE12:
 410              	.LBB13:
 411              	.LBB11:
 448:Generated_Source\PSoC5/UART_LOG.c **** 
 412              		.loc 1 448 0
 413 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 414              	.LBE11:
 415              	.LBE13:
 636:Generated_Source\PSoC5/UART_LOG.c ****         
 637:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_LOG.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_LOG.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_DisableRxInt();
 641:Generated_Source\PSoC5/UART_LOG.c ****         locErrorStatus = (uint16)UART_LOG_errorStatus;
 642:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_EnableRxInt();
 644:Generated_Source\PSoC5/UART_LOG.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_LOG_ReadRxData() );
 645:Generated_Source\PSoC5/UART_LOG.c ****     #else
 646:Generated_Source\PSoC5/UART_LOG.c ****         return ( ((uint16)UART_LOG_ReadRxStatus() << 8u) | UART_LOG_ReadRxData() );
 416              		.loc 1 646 0
 417 0008 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 20


 647:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* UART_LOG_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_LOG.c ****         
 649:Generated_Source\PSoC5/UART_LOG.c ****     }
 418              		.loc 1 649 0
 419 000c 40EA0320 		orr	r0, r0, r3, lsl #8
 420 0010 7047     		bx	lr
 421              	.L34:
 422 0012 00BF     		.align	2
 423              	.L33:
 424 0014 68650040 		.word	1073767784
 425 0018 47650040 		.word	1073767751
 426              		.cfi_endproc
 427              	.LFE10:
 428              		.size	UART_LOG_GetByte, .-UART_LOG_GetByte
 429              		.section	.text.UART_LOG_GetRxBufferSize,"ax",%progbits
 430              		.align	1
 431              		.global	UART_LOG_GetRxBufferSize
 432              		.thumb
 433              		.thumb_func
 434              		.type	UART_LOG_GetRxBufferSize, %function
 435              	UART_LOG_GetRxBufferSize:
 436              	.LFB11:
 650:Generated_Source\PSoC5/UART_LOG.c **** 
 651:Generated_Source\PSoC5/UART_LOG.c **** 
 652:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_LOG.c ****     *
 656:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_LOG.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_LOG.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_LOG.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_LOG.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_LOG.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_LOG.c ****     *    account.
 663:Generated_Source\PSoC5/UART_LOG.c ****     *
 664:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 666:Generated_Source\PSoC5/UART_LOG.c ****     *
 667:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 668:Generated_Source\PSoC5/UART_LOG.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_LOG.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_LOG.c ****     *
 671:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_LOG.c ****     *
 676:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
 678:Generated_Source\PSoC5/UART_LOG.c ****     *
 679:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_LOG.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_LOG.c ****     *
 682:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_LOG.c ****     uint8 UART_LOG_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_LOG.c ****                                                             
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 21


 685:Generated_Source\PSoC5/UART_LOG.c ****     {
 437              		.loc 1 685 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART_LOG.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_LOG.c **** 
 688:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_LOG.c **** 
 690:Generated_Source\PSoC5/UART_LOG.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_DisableRxInt();
 692:Generated_Source\PSoC5/UART_LOG.c **** 
 693:Generated_Source\PSoC5/UART_LOG.c ****         if(UART_LOG_rxBufferRead == UART_LOG_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_LOG.c ****         {
 695:Generated_Source\PSoC5/UART_LOG.c ****             if(UART_LOG_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_LOG.c ****             {
 697:Generated_Source\PSoC5/UART_LOG.c ****                 size = UART_LOG_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_LOG.c ****             }
 699:Generated_Source\PSoC5/UART_LOG.c ****             else
 700:Generated_Source\PSoC5/UART_LOG.c ****             {
 701:Generated_Source\PSoC5/UART_LOG.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_LOG.c ****             }
 703:Generated_Source\PSoC5/UART_LOG.c ****         }
 704:Generated_Source\PSoC5/UART_LOG.c ****         else if(UART_LOG_rxBufferRead < UART_LOG_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_LOG.c ****         {
 706:Generated_Source\PSoC5/UART_LOG.c ****             size = (UART_LOG_rxBufferWrite - UART_LOG_rxBufferRead);
 707:Generated_Source\PSoC5/UART_LOG.c ****         }
 708:Generated_Source\PSoC5/UART_LOG.c ****         else
 709:Generated_Source\PSoC5/UART_LOG.c ****         {
 710:Generated_Source\PSoC5/UART_LOG.c ****             size = (UART_LOG_RX_BUFFER_SIZE - UART_LOG_rxBufferRead) + UART_LOG_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_LOG.c ****         }
 712:Generated_Source\PSoC5/UART_LOG.c **** 
 713:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_EnableRxInt();
 714:Generated_Source\PSoC5/UART_LOG.c **** 
 715:Generated_Source\PSoC5/UART_LOG.c ****     #else
 716:Generated_Source\PSoC5/UART_LOG.c **** 
 717:Generated_Source\PSoC5/UART_LOG.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_LOG.c ****         size = ((UART_LOG_RXSTATUS_REG & UART_LOG_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 442              		.loc 1 718 0
 443 0000 024B     		ldr	r3, .L36
 444 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 445              	.LVL20:
 719:Generated_Source\PSoC5/UART_LOG.c **** 
 720:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_LOG.c **** 
 722:Generated_Source\PSoC5/UART_LOG.c ****         return(size);
 723:Generated_Source\PSoC5/UART_LOG.c ****     }
 446              		.loc 1 723 0
 447 0004 C0F34010 		ubfx	r0, r0, #5, #1
 448              	.LVL21:
 449 0008 7047     		bx	lr
 450              	.L37:
 451 000a 00BF     		.align	2
 452              	.L36:
 453 000c 68650040 		.word	1073767784
 454              		.cfi_endproc
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 22


 455              	.LFE11:
 456              		.size	UART_LOG_GetRxBufferSize, .-UART_LOG_GetRxBufferSize
 457              		.section	.text.UART_LOG_ClearRxBuffer,"ax",%progbits
 458              		.align	1
 459              		.global	UART_LOG_ClearRxBuffer
 460              		.thumb
 461              		.thumb_func
 462              		.type	UART_LOG_ClearRxBuffer, %function
 463              	UART_LOG_ClearRxBuffer:
 464              	.LFB12:
 724:Generated_Source\PSoC5/UART_LOG.c **** 
 725:Generated_Source\PSoC5/UART_LOG.c **** 
 726:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_LOG.c ****     *
 730:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_LOG.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_LOG.c ****     *
 733:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 735:Generated_Source\PSoC5/UART_LOG.c ****     *
 736:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 737:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 738:Generated_Source\PSoC5/UART_LOG.c ****     *
 739:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_LOG.c ****     *
 745:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
 747:Generated_Source\PSoC5/UART_LOG.c ****     *
 748:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_LOG.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_LOG.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_LOG.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_LOG.c ****     *
 753:Generated_Source\PSoC5/UART_LOG.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_LOG.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_LOG.c ****     *
 756:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_LOG.c ****     {
 465              		.loc 1 758 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 08B5     		push	{r3, lr}
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 3, -8
 472              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART_LOG.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_LOG.c **** 
 761:Generated_Source\PSoC5/UART_LOG.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_LOG.c ****         enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 23


 473              		.loc 1 762 0
 474 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 475              	.LVL22:
 763:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXDATA_AUX_CTL_REG |= (uint8)  UART_LOG_RX_FIFO_CLR;
 476              		.loc 1 763 0
 477 0006 064B     		ldr	r3, .L39
 478 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 479 000a 42F00102 		orr	r2, r2, #1
 480 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXDATA_AUX_CTL_REG &= (uint8) ~UART_LOG_RX_FIFO_CLR;
 481              		.loc 1 764 0
 482 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 483 0012 02F0FE02 		and	r2, r2, #254
 484 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART_LOG.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART_LOG.c **** 
 767:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_LOG.c **** 
 769:Generated_Source\PSoC5/UART_LOG.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_DisableRxInt();
 771:Generated_Source\PSoC5/UART_LOG.c **** 
 772:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_LOG.c **** 
 777:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_EnableRxInt();
 778:Generated_Source\PSoC5/UART_LOG.c **** 
 779:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_LOG.c **** 
 781:Generated_Source\PSoC5/UART_LOG.c ****     }
 485              		.loc 1 781 0
 486 0018 BDE80840 		pop	{r3, lr}
 487              		.cfi_restore 14
 488              		.cfi_restore 3
 489              		.cfi_def_cfa_offset 0
 765:Generated_Source\PSoC5/UART_LOG.c ****         CyExitCriticalSection(enableInterrupts);
 490              		.loc 1 765 0
 491 001c FFF7FEBF 		b	CyExitCriticalSection
 492              	.LVL23:
 493              	.L40:
 494              		.align	2
 495              	.L39:
 496 0020 97650040 		.word	1073767831
 497              		.cfi_endproc
 498              	.LFE12:
 499              		.size	UART_LOG_ClearRxBuffer, .-UART_LOG_ClearRxBuffer
 500              		.section	.text.UART_LOG_SetRxAddressMode,"ax",%progbits
 501              		.align	1
 502              		.global	UART_LOG_SetRxAddressMode
 503              		.thumb
 504              		.thumb_func
 505              		.type	UART_LOG_SetRxAddressMode, %function
 506              	UART_LOG_SetRxAddressMode:
 507              	.LFB28:
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 24


 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512 0000 7047     		bx	lr
 513              		.cfi_endproc
 514              	.LFE28:
 515              		.size	UART_LOG_SetRxAddressMode, .-UART_LOG_SetRxAddressMode
 516              		.section	.text.UART_LOG_SetRxAddress1,"ax",%progbits
 517              		.align	1
 518              		.global	UART_LOG_SetRxAddress1
 519              		.thumb
 520              		.thumb_func
 521              		.type	UART_LOG_SetRxAddress1, %function
 522              	UART_LOG_SetRxAddress1:
 523              	.LFB14:
 782:Generated_Source\PSoC5/UART_LOG.c **** 
 783:Generated_Source\PSoC5/UART_LOG.c **** 
 784:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_LOG.c ****     *
 788:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_LOG.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_LOG.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_LOG.c ****     *
 792:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_LOG.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_LOG.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_LOG.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_LOG.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_LOG.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_LOG.c ****     *
 804:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 805:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 806:Generated_Source\PSoC5/UART_LOG.c ****     *
 807:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_LOG.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_LOG.c ****     *
 812:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_LOG.c ****                                                         
 815:Generated_Source\PSoC5/UART_LOG.c ****     {
 816:Generated_Source\PSoC5/UART_LOG.c ****         #if(UART_LOG_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_LOG.c ****             #if(UART_LOG_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_LOG.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_LOG.c ****                 {
 820:Generated_Source\PSoC5/UART_LOG.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_LOG.c ****                 }
 822:Generated_Source\PSoC5/UART_LOG.c ****             #else /* UART_LOG_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_LOG.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_LOG.c ****                 tmpCtrl = UART_LOG_CONTROL_REG & (uint8)~UART_LOG_CTRL_RXADDR_MODE_MASK;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 25


 825:Generated_Source\PSoC5/UART_LOG.c ****                 tmpCtrl |= (uint8)(addressMode << UART_LOG_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_LOG.c **** 
 828:Generated_Source\PSoC5/UART_LOG.c ****                 #if(UART_LOG_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_LOG.c ****                    (UART_LOG_RXBUFFERSIZE > UART_LOG_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_LOG.c ****                     UART_LOG_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_LOG.c ****                     UART_LOG_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_LOG.c ****                 #endif /* End UART_LOG_RXBUFFERSIZE > UART_LOG_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_LOG.c ****             #endif /* End UART_LOG_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_LOG.c ****         #else /* UART_LOG_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_LOG.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_LOG.c ****             {
 837:Generated_Source\PSoC5/UART_LOG.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_LOG.c ****             }
 839:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* End UART_LOG_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_LOG.c ****     }
 841:Generated_Source\PSoC5/UART_LOG.c **** 
 842:Generated_Source\PSoC5/UART_LOG.c **** 
 843:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_SetRxAddress1
 845:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_LOG.c ****     *
 847:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_LOG.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_LOG.c ****     *
 850:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_LOG.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_LOG.c ****     *
 853:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 854:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 855:Generated_Source\PSoC5/UART_LOG.c ****     *
 856:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_LOG.c ****     {
 524              		.loc 1 858 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529              	.LVL24:
 859:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXADDRESS1_REG = address;
 530              		.loc 1 859 0
 531 0000 014B     		ldr	r3, .L43
 532 0002 1870     		strb	r0, [r3]
 533 0004 7047     		bx	lr
 534              	.L44:
 535 0006 00BF     		.align	2
 536              	.L43:
 537 0008 27650040 		.word	1073767719
 538              		.cfi_endproc
 539              	.LFE14:
 540              		.size	UART_LOG_SetRxAddress1, .-UART_LOG_SetRxAddress1
 541              		.section	.text.UART_LOG_SetRxAddress2,"ax",%progbits
 542              		.align	1
 543              		.global	UART_LOG_SetRxAddress2
 544              		.thumb
 545              		.thumb_func
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 26


 546              		.type	UART_LOG_SetRxAddress2, %function
 547              	UART_LOG_SetRxAddress2:
 548              	.LFB15:
 860:Generated_Source\PSoC5/UART_LOG.c ****     }
 861:Generated_Source\PSoC5/UART_LOG.c **** 
 862:Generated_Source\PSoC5/UART_LOG.c **** 
 863:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_SetRxAddress2
 865:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_LOG.c ****     *
 867:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_LOG.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_LOG.c ****     *
 870:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_LOG.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_LOG.c ****     *
 873:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 874:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 875:Generated_Source\PSoC5/UART_LOG.c ****     *
 876:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_LOG.c ****     {
 549              		.loc 1 878 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              	.LVL25:
 879:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_RXADDRESS2_REG = address;
 555              		.loc 1 879 0
 556 0000 014B     		ldr	r3, .L46
 557 0002 1870     		strb	r0, [r3]
 558 0004 7047     		bx	lr
 559              	.L47:
 560 0006 00BF     		.align	2
 561              	.L46:
 562 0008 37650040 		.word	1073767735
 563              		.cfi_endproc
 564              	.LFE15:
 565              		.size	UART_LOG_SetRxAddress2, .-UART_LOG_SetRxAddress2
 566              		.section	.text.UART_LOG_SetTxInterruptMode,"ax",%progbits
 567              		.align	1
 568              		.global	UART_LOG_SetTxInterruptMode
 569              		.thumb
 570              		.thumb_func
 571              		.type	UART_LOG_SetTxInterruptMode, %function
 572              	UART_LOG_SetTxInterruptMode:
 573              	.LFB16:
 880:Generated_Source\PSoC5/UART_LOG.c ****     }
 881:Generated_Source\PSoC5/UART_LOG.c **** 
 882:Generated_Source\PSoC5/UART_LOG.c **** #endif  /* UART_LOG_RX_ENABLED || UART_LOG_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_LOG.c **** 
 884:Generated_Source\PSoC5/UART_LOG.c **** 
 885:Generated_Source\PSoC5/UART_LOG.c **** #if( (UART_LOG_TX_ENABLED) || (UART_LOG_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 27


 889:Generated_Source\PSoC5/UART_LOG.c ****     *
 890:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_LOG.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_LOG.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_LOG.c ****     *
 894:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_LOG.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_LOG.c ****     *
 901:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 902:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 903:Generated_Source\PSoC5/UART_LOG.c ****     *
 904:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_LOG.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_LOG.c ****     *
 907:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_LOG.c ****     {
 574              		.loc 1 909 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579              	.LVL26:
 910:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_TXSTATUS_MASK_REG = intSrc;
 580              		.loc 1 910 0
 581 0000 014B     		ldr	r3, .L49
 582 0002 1870     		strb	r0, [r3]
 583 0004 7047     		bx	lr
 584              	.L50:
 585 0006 00BF     		.align	2
 586              	.L49:
 587 0008 86640040 		.word	1073767558
 588              		.cfi_endproc
 589              	.LFE16:
 590              		.size	UART_LOG_SetTxInterruptMode, .-UART_LOG_SetTxInterruptMode
 591              		.section	.text.UART_LOG_WriteTxData,"ax",%progbits
 592              		.align	1
 593              		.global	UART_LOG_WriteTxData
 594              		.thumb
 595              		.thumb_func
 596              		.type	UART_LOG_WriteTxData, %function
 597              	UART_LOG_WriteTxData:
 598              	.LFB17:
 911:Generated_Source\PSoC5/UART_LOG.c ****     }
 912:Generated_Source\PSoC5/UART_LOG.c **** 
 913:Generated_Source\PSoC5/UART_LOG.c **** 
 914:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_WriteTxData
 916:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_LOG.c ****     *
 918:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_LOG.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_LOG.c ****     *  available without checking the TX status register. You must check status
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 28


 921:Generated_Source\PSoC5/UART_LOG.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_LOG.c ****     *
 923:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_LOG.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_LOG.c ****     *
 926:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 927:Generated_Source\PSoC5/UART_LOG.c ****     * None.
 928:Generated_Source\PSoC5/UART_LOG.c ****     *
 929:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_LOG.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_LOG.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_LOG.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_LOG.c ****     *
 938:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
 940:Generated_Source\PSoC5/UART_LOG.c ****     *
 941:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_LOG.c ****     {
 599              		.loc 1 943 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604              	.LVL27:
 944:Generated_Source\PSoC5/UART_LOG.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_LOG.c ****         if(UART_LOG_initVar != 0u)
 605              		.loc 1 945 0
 606 0000 024B     		ldr	r3, .L56
 607 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 608 0004 0BB1     		cbz	r3, .L51
 946:Generated_Source\PSoC5/UART_LOG.c ****         {
 947:Generated_Source\PSoC5/UART_LOG.c ****         #if (UART_LOG_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_LOG.c **** 
 949:Generated_Source\PSoC5/UART_LOG.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_DisableTxInt();
 951:Generated_Source\PSoC5/UART_LOG.c **** 
 952:Generated_Source\PSoC5/UART_LOG.c ****             if( (UART_LOG_txBufferRead == UART_LOG_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_LOG.c ****                 ((UART_LOG_TXSTATUS_REG & UART_LOG_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_LOG.c ****             {
 955:Generated_Source\PSoC5/UART_LOG.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_LOG.c ****             }
 958:Generated_Source\PSoC5/UART_LOG.c ****             else
 959:Generated_Source\PSoC5/UART_LOG.c ****             {
 960:Generated_Source\PSoC5/UART_LOG.c ****                 if(UART_LOG_txBufferWrite >= UART_LOG_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_LOG.c ****                 {
 962:Generated_Source\PSoC5/UART_LOG.c ****                     UART_LOG_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_LOG.c ****                 }
 964:Generated_Source\PSoC5/UART_LOG.c **** 
 965:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_txBuffer[UART_LOG_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_LOG.c **** 
 967:Generated_Source\PSoC5/UART_LOG.c ****                 /* Add to the software buffer. */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 29


 968:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_LOG.c ****             }
 970:Generated_Source\PSoC5/UART_LOG.c **** 
 971:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_EnableTxInt();
 972:Generated_Source\PSoC5/UART_LOG.c **** 
 973:Generated_Source\PSoC5/UART_LOG.c ****         #else
 974:Generated_Source\PSoC5/UART_LOG.c **** 
 975:Generated_Source\PSoC5/UART_LOG.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXDATA_REG = txDataByte;
 609              		.loc 1 976 0
 610 0006 024B     		ldr	r3, .L56+4
 611 0008 1870     		strb	r0, [r3]
 612              	.L51:
 613 000a 7047     		bx	lr
 614              	.L57:
 615              		.align	2
 616              	.L56:
 617 000c 00000000 		.word	.LANCHOR0
 618 0010 46640040 		.word	1073767494
 619              		.cfi_endproc
 620              	.LFE17:
 621              		.size	UART_LOG_WriteTxData, .-UART_LOG_WriteTxData
 622              		.section	.text.UART_LOG_ReadTxStatus,"ax",%progbits
 623              		.align	1
 624              		.global	UART_LOG_ReadTxStatus
 625              		.thumb
 626              		.thumb_func
 627              		.type	UART_LOG_ReadTxStatus, %function
 628              	UART_LOG_ReadTxStatus:
 629              	.LFB18:
 977:Generated_Source\PSoC5/UART_LOG.c **** 
 978:Generated_Source\PSoC5/UART_LOG.c ****         #endif /*(UART_LOG_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_LOG.c ****         }
 980:Generated_Source\PSoC5/UART_LOG.c ****     }
 981:Generated_Source\PSoC5/UART_LOG.c **** 
 982:Generated_Source\PSoC5/UART_LOG.c **** 
 983:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_ReadTxStatus
 985:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_LOG.c ****     *
 987:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_LOG.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_LOG.c ****     *
 990:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
 992:Generated_Source\PSoC5/UART_LOG.c ****     *
 993:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
 994:Generated_Source\PSoC5/UART_LOG.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_LOG.c ****     *
 996:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_LOG.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_LOG.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_LOG.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_LOG.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_LOG.c ****     *
1002:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_LOG.c ****     uint8 UART_LOG_ReadTxStatus(void) 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 30


1004:Generated_Source\PSoC5/UART_LOG.c ****     {
 630              		.loc 1 1004 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART_LOG.c ****         return(UART_LOG_TXSTATUS_REG);
 635              		.loc 1 1005 0
 636 0000 014B     		ldr	r3, .L59
 637 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART_LOG.c ****     }
 638              		.loc 1 1006 0
 639 0004 7047     		bx	lr
 640              	.L60:
 641 0006 00BF     		.align	2
 642              	.L59:
 643 0008 66640040 		.word	1073767526
 644              		.cfi_endproc
 645              	.LFE18:
 646              		.size	UART_LOG_ReadTxStatus, .-UART_LOG_ReadTxStatus
 647              		.section	.text.UART_LOG_PutChar,"ax",%progbits
 648              		.align	1
 649              		.global	UART_LOG_PutChar
 650              		.thumb
 651              		.thumb_func
 652              		.type	UART_LOG_PutChar, %function
 653              	UART_LOG_PutChar:
 654              	.LFB19:
1007:Generated_Source\PSoC5/UART_LOG.c **** 
1008:Generated_Source\PSoC5/UART_LOG.c **** 
1009:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_PutChar
1011:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_LOG.c ****     *
1013:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_LOG.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_LOG.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_LOG.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_LOG.c ****     *
1018:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_LOG.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_LOG.c ****     *
1021:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
1022:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
1023:Generated_Source\PSoC5/UART_LOG.c ****     *
1024:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_LOG.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_LOG.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_LOG.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_LOG.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_LOG.c ****     *
1034:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 31


1036:Generated_Source\PSoC5/UART_LOG.c ****     *
1037:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_LOG.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_LOG.c ****     *
1040:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_LOG.c ****     {
 655              		.loc 1 1042 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 660              	.LVL28:
1043:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_LOG.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_LOG.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_LOG.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_LOG.c ****         */
1048:Generated_Source\PSoC5/UART_LOG.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_LOG.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_LOG.c **** 
1051:Generated_Source\PSoC5/UART_LOG.c ****         do
1052:Generated_Source\PSoC5/UART_LOG.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_LOG.c **** 
1054:Generated_Source\PSoC5/UART_LOG.c ****         #if ((UART_LOG_TX_BUFFER_SIZE > UART_LOG_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_LOG.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_DisableTxInt();
1057:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_TX_BUFFER_SIZE > UART_LOG_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_LOG.c **** 
1059:Generated_Source\PSoC5/UART_LOG.c ****             locTxBufferWrite = UART_LOG_txBufferWrite;
1060:Generated_Source\PSoC5/UART_LOG.c ****             locTxBufferRead  = UART_LOG_txBufferRead;
1061:Generated_Source\PSoC5/UART_LOG.c **** 
1062:Generated_Source\PSoC5/UART_LOG.c ****         #if ((UART_LOG_TX_BUFFER_SIZE > UART_LOG_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_LOG.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_EnableTxInt();
1065:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_TX_BUFFER_SIZE > UART_LOG_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_LOG.c ****         }
1067:Generated_Source\PSoC5/UART_LOG.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_LOG.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_LOG.c ****                                 (uint8)(UART_LOG_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_LOG.c **** 
1071:Generated_Source\PSoC5/UART_LOG.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_LOG.c ****             ((UART_LOG_TXSTATUS_REG & UART_LOG_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_LOG.c ****         {
1074:Generated_Source\PSoC5/UART_LOG.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_LOG.c ****         }
1077:Generated_Source\PSoC5/UART_LOG.c ****         else
1078:Generated_Source\PSoC5/UART_LOG.c ****         {
1079:Generated_Source\PSoC5/UART_LOG.c ****             if(locTxBufferWrite >= UART_LOG_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_LOG.c ****             {
1081:Generated_Source\PSoC5/UART_LOG.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_LOG.c ****             }
1083:Generated_Source\PSoC5/UART_LOG.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_LOG.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_LOG.c **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 32


1087:Generated_Source\PSoC5/UART_LOG.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_LOG.c ****         #if ((UART_LOG_TX_BUFFER_SIZE > UART_LOG_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_DisableTxInt();
1090:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_TX_BUFFER_SIZE > UART_LOG_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_LOG.c **** 
1092:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_LOG.c **** 
1094:Generated_Source\PSoC5/UART_LOG.c ****         #if ((UART_LOG_TX_BUFFER_SIZE > UART_LOG_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_EnableTxInt();
1096:Generated_Source\PSoC5/UART_LOG.c ****         #endif /* (UART_LOG_TX_BUFFER_SIZE > UART_LOG_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_LOG.c **** 
1098:Generated_Source\PSoC5/UART_LOG.c ****             if(0u != (UART_LOG_TXSTATUS_REG & UART_LOG_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_LOG.c ****             {
1100:Generated_Source\PSoC5/UART_LOG.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_LOG.c ****             }
1103:Generated_Source\PSoC5/UART_LOG.c ****         }
1104:Generated_Source\PSoC5/UART_LOG.c **** 
1105:Generated_Source\PSoC5/UART_LOG.c ****     #else
1106:Generated_Source\PSoC5/UART_LOG.c **** 
1107:Generated_Source\PSoC5/UART_LOG.c ****         while((UART_LOG_TXSTATUS_REG & UART_LOG_TX_STS_FIFO_FULL) != 0u)
 661              		.loc 1 1107 0
 662 0000 034A     		ldr	r2, .L64
 663              	.L62:
 664              		.loc 1 1107 0 is_stmt 0 discriminator 1
 665 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 666 0004 5B07     		lsls	r3, r3, #29
 667 0006 FCD4     		bmi	.L62
1108:Generated_Source\PSoC5/UART_LOG.c ****         {
1109:Generated_Source\PSoC5/UART_LOG.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_LOG.c ****         }
1111:Generated_Source\PSoC5/UART_LOG.c **** 
1112:Generated_Source\PSoC5/UART_LOG.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_TXDATA_REG = txDataByte;
 668              		.loc 1 1113 0 is_stmt 1
 669 0008 024B     		ldr	r3, .L64+4
 670 000a 1870     		strb	r0, [r3]
 671 000c 7047     		bx	lr
 672              	.L65:
 673 000e 00BF     		.align	2
 674              	.L64:
 675 0010 66640040 		.word	1073767526
 676 0014 46640040 		.word	1073767494
 677              		.cfi_endproc
 678              	.LFE19:
 679              		.size	UART_LOG_PutChar, .-UART_LOG_PutChar
 680              		.section	.text.UART_LOG_PutString,"ax",%progbits
 681              		.align	1
 682              		.global	UART_LOG_PutString
 683              		.thumb
 684              		.thumb_func
 685              		.type	UART_LOG_PutString, %function
 686              	UART_LOG_PutString:
 687              	.LFB20:
1114:Generated_Source\PSoC5/UART_LOG.c **** 
1115:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* UART_LOG_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_LOG.c ****     }
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 33


1117:Generated_Source\PSoC5/UART_LOG.c **** 
1118:Generated_Source\PSoC5/UART_LOG.c **** 
1119:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_PutString
1121:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_LOG.c ****     *
1123:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_LOG.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_LOG.c ****     *
1126:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_LOG.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_LOG.c ****     *
1129:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
1130:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
1131:Generated_Source\PSoC5/UART_LOG.c ****     *
1132:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_LOG.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_LOG.c ****     *
1136:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
1138:Generated_Source\PSoC5/UART_LOG.c ****     *
1139:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_LOG.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_LOG.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_LOG.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_LOG.c ****     *
1144:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_LOG.c ****     {
 688              		.loc 1 1146 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              	.LVL29:
 693 0000 10B5     		push	{r4, lr}
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 4, -8
 696              		.cfi_offset 14, -4
1147:Generated_Source\PSoC5/UART_LOG.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART_LOG.c **** 
1149:Generated_Source\PSoC5/UART_LOG.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_LOG.c ****         if(UART_LOG_initVar != 0u)
 697              		.loc 1 1150 0
 698 0002 064B     		ldr	r3, .L73
1146:Generated_Source\PSoC5/UART_LOG.c ****         uint16 bufIndex = 0u;
 699              		.loc 1 1146 0
 700 0004 0446     		mov	r4, r0
 701              		.loc 1 1150 0
 702 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 703 0008 3BB1     		cbz	r3, .L66
 704 000a 0021     		movs	r1, #0
 705              	.LVL30:
 706              	.L68:
1151:Generated_Source\PSoC5/UART_LOG.c ****         {
1152:Generated_Source\PSoC5/UART_LOG.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_LOG.c ****             while(string[bufIndex] != (char8) 0)
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 34


 707              		.loc 1 1153 0
 708 000c 8BB2     		uxth	r3, r1
 709              	.LVL31:
 710 000e E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 711 0010 0131     		adds	r1, r1, #1
 712 0012 10B1     		cbz	r0, .L66
1154:Generated_Source\PSoC5/UART_LOG.c ****             {
1155:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_PutChar((uint8)string[bufIndex]);
 713              		.loc 1 1155 0
 714 0014 FFF7FEFF 		bl	UART_LOG_PutChar
 715              	.LVL32:
 716 0018 F8E7     		b	.L68
 717              	.LVL33:
 718              	.L66:
 719 001a 10BD     		pop	{r4, pc}
 720              	.LVL34:
 721              	.L74:
 722              		.align	2
 723              	.L73:
 724 001c 00000000 		.word	.LANCHOR0
 725              		.cfi_endproc
 726              	.LFE20:
 727              		.size	UART_LOG_PutString, .-UART_LOG_PutString
 728              		.section	.text.UART_LOG_PutArray,"ax",%progbits
 729              		.align	1
 730              		.global	UART_LOG_PutArray
 731              		.thumb
 732              		.thumb_func
 733              		.type	UART_LOG_PutArray, %function
 734              	UART_LOG_PutArray:
 735              	.LFB21:
1156:Generated_Source\PSoC5/UART_LOG.c ****                 bufIndex++;
1157:Generated_Source\PSoC5/UART_LOG.c ****             }
1158:Generated_Source\PSoC5/UART_LOG.c ****         }
1159:Generated_Source\PSoC5/UART_LOG.c ****     }
1160:Generated_Source\PSoC5/UART_LOG.c **** 
1161:Generated_Source\PSoC5/UART_LOG.c **** 
1162:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_PutArray
1164:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_LOG.c ****     *
1166:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_LOG.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_LOG.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_LOG.c ****     *
1170:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_LOG.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_LOG.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_LOG.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_LOG.c ****     *
1175:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
1176:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
1177:Generated_Source\PSoC5/UART_LOG.c ****     *
1178:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_LOG.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_LOG.c ****     *
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 35


1182:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
1184:Generated_Source\PSoC5/UART_LOG.c ****     *
1185:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_LOG.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_LOG.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_LOG.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_LOG.c ****     *
1190:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_LOG.c ****                                                                     
1193:Generated_Source\PSoC5/UART_LOG.c ****     {
 736              		.loc 1 1193 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              	.LVL35:
 741 0000 10B5     		push	{r4, lr}
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 4, -8
 744              		.cfi_offset 14, -4
1194:Generated_Source\PSoC5/UART_LOG.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART_LOG.c **** 
1196:Generated_Source\PSoC5/UART_LOG.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_LOG.c ****         if(UART_LOG_initVar != 0u)
 745              		.loc 1 1197 0
 746 0002 074B     		ldr	r3, .L80
 747 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 748 0006 4BB1     		cbz	r3, .L75
 749 0008 0139     		subs	r1, r1, #1
 750              	.LVL36:
 751 000a 441E     		subs	r4, r0, #1
 752 000c 0144     		add	r1, r1, r0
 753              	.LVL37:
 754              	.L77:
1198:Generated_Source\PSoC5/UART_LOG.c ****         {
1199:Generated_Source\PSoC5/UART_LOG.c ****             while(bufIndex < byteCount)
 755              		.loc 1 1199 0
 756 000e 8C42     		cmp	r4, r1
 757 0010 04D0     		beq	.L75
1200:Generated_Source\PSoC5/UART_LOG.c ****             {
1201:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_PutChar(string[bufIndex]);
 758              		.loc 1 1201 0
 759 0012 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 760              	.LVL38:
 761 0016 FFF7FEFF 		bl	UART_LOG_PutChar
 762              	.LVL39:
 763 001a F8E7     		b	.L77
 764              	.LVL40:
 765              	.L75:
 766 001c 10BD     		pop	{r4, pc}
 767              	.L81:
 768 001e 00BF     		.align	2
 769              	.L80:
 770 0020 00000000 		.word	.LANCHOR0
 771              		.cfi_endproc
 772              	.LFE21:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 36


 773              		.size	UART_LOG_PutArray, .-UART_LOG_PutArray
 774              		.section	.text.UART_LOG_PutCRLF,"ax",%progbits
 775              		.align	1
 776              		.global	UART_LOG_PutCRLF
 777              		.thumb
 778              		.thumb_func
 779              		.type	UART_LOG_PutCRLF, %function
 780              	UART_LOG_PutCRLF:
 781              	.LFB22:
1202:Generated_Source\PSoC5/UART_LOG.c ****                 bufIndex++;
1203:Generated_Source\PSoC5/UART_LOG.c ****             }
1204:Generated_Source\PSoC5/UART_LOG.c ****         }
1205:Generated_Source\PSoC5/UART_LOG.c ****     }
1206:Generated_Source\PSoC5/UART_LOG.c **** 
1207:Generated_Source\PSoC5/UART_LOG.c **** 
1208:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_PutCRLF
1210:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_LOG.c ****     *
1212:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_LOG.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_LOG.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_LOG.c ****     *
1216:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_LOG.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_LOG.c ****     *
1219:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
1220:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
1221:Generated_Source\PSoC5/UART_LOG.c ****     *
1222:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_LOG.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_LOG.c ****     *
1226:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
1228:Generated_Source\PSoC5/UART_LOG.c ****     *
1229:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_LOG.c ****     {
 782              		.loc 1 1231 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL41:
 787 0000 08B5     		push	{r3, lr}
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 3, -8
 790              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART_LOG.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_LOG.c ****         if(UART_LOG_initVar != 0u)
 791              		.loc 1 1233 0
 792 0002 074B     		ldr	r3, .L84
 793 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 794 0006 4BB1     		cbz	r3, .L82
1234:Generated_Source\PSoC5/UART_LOG.c ****         {
1235:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_PutChar(txDataByte);
 795              		.loc 1 1235 0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 37


 796 0008 FFF7FEFF 		bl	UART_LOG_PutChar
 797              	.LVL42:
1236:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_PutChar(0x0Du);
 798              		.loc 1 1236 0
 799 000c 0D20     		movs	r0, #13
 800 000e FFF7FEFF 		bl	UART_LOG_PutChar
 801              	.LVL43:
1237:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_PutChar(0x0Au);
1238:Generated_Source\PSoC5/UART_LOG.c ****         }
1239:Generated_Source\PSoC5/UART_LOG.c ****     }
 802              		.loc 1 1239 0
 803 0012 BDE80840 		pop	{r3, lr}
 804              		.cfi_remember_state
 805              		.cfi_restore 14
 806              		.cfi_restore 3
 807              		.cfi_def_cfa_offset 0
1237:Generated_Source\PSoC5/UART_LOG.c ****             UART_LOG_PutChar(0x0Au);
 808              		.loc 1 1237 0
 809 0016 0A20     		movs	r0, #10
 810 0018 FFF7FEBF 		b	UART_LOG_PutChar
 811              	.LVL44:
 812              	.L82:
 813              		.cfi_restore_state
 814 001c 08BD     		pop	{r3, pc}
 815              	.L85:
 816 001e 00BF     		.align	2
 817              	.L84:
 818 0020 00000000 		.word	.LANCHOR0
 819              		.cfi_endproc
 820              	.LFE22:
 821              		.size	UART_LOG_PutCRLF, .-UART_LOG_PutCRLF
 822              		.section	.text.UART_LOG_GetTxBufferSize,"ax",%progbits
 823              		.align	1
 824              		.global	UART_LOG_GetTxBufferSize
 825              		.thumb
 826              		.thumb_func
 827              		.type	UART_LOG_GetTxBufferSize, %function
 828              	UART_LOG_GetTxBufferSize:
 829              	.LFB23:
1240:Generated_Source\PSoC5/UART_LOG.c **** 
1241:Generated_Source\PSoC5/UART_LOG.c **** 
1242:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_LOG.c ****     *
1246:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_LOG.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_LOG.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_LOG.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_LOG.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_LOG.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_LOG.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_LOG.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_LOG.c ****     *
1255:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
1257:Generated_Source\PSoC5/UART_LOG.c ****     *
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 38


1258:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
1259:Generated_Source\PSoC5/UART_LOG.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_LOG.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_LOG.c ****     *
1262:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_LOG.c ****     *
1266:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
1268:Generated_Source\PSoC5/UART_LOG.c ****     *
1269:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_LOG.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_LOG.c ****     *
1272:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_LOG.c ****     uint8 UART_LOG_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_LOG.c ****                                                             
1275:Generated_Source\PSoC5/UART_LOG.c ****     {
 830              		.loc 1 1275 0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART_LOG.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_LOG.c **** 
1278:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_LOG.c **** 
1280:Generated_Source\PSoC5/UART_LOG.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_DisableTxInt();
1282:Generated_Source\PSoC5/UART_LOG.c **** 
1283:Generated_Source\PSoC5/UART_LOG.c ****         if(UART_LOG_txBufferRead == UART_LOG_txBufferWrite)
1284:Generated_Source\PSoC5/UART_LOG.c ****         {
1285:Generated_Source\PSoC5/UART_LOG.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_LOG.c ****         }
1287:Generated_Source\PSoC5/UART_LOG.c ****         else if(UART_LOG_txBufferRead < UART_LOG_txBufferWrite)
1288:Generated_Source\PSoC5/UART_LOG.c ****         {
1289:Generated_Source\PSoC5/UART_LOG.c ****             size = (UART_LOG_txBufferWrite - UART_LOG_txBufferRead);
1290:Generated_Source\PSoC5/UART_LOG.c ****         }
1291:Generated_Source\PSoC5/UART_LOG.c ****         else
1292:Generated_Source\PSoC5/UART_LOG.c ****         {
1293:Generated_Source\PSoC5/UART_LOG.c ****             size = (UART_LOG_TX_BUFFER_SIZE - UART_LOG_txBufferRead) +
1294:Generated_Source\PSoC5/UART_LOG.c ****                     UART_LOG_txBufferWrite;
1295:Generated_Source\PSoC5/UART_LOG.c ****         }
1296:Generated_Source\PSoC5/UART_LOG.c **** 
1297:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_EnableTxInt();
1298:Generated_Source\PSoC5/UART_LOG.c **** 
1299:Generated_Source\PSoC5/UART_LOG.c ****     #else
1300:Generated_Source\PSoC5/UART_LOG.c **** 
1301:Generated_Source\PSoC5/UART_LOG.c ****         size = UART_LOG_TXSTATUS_REG;
 835              		.loc 1 1301 0
 836 0000 054B     		ldr	r3, .L89
 837 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 838 0004 C0B2     		uxtb	r0, r0
 839              	.LVL45:
1302:Generated_Source\PSoC5/UART_LOG.c **** 
1303:Generated_Source\PSoC5/UART_LOG.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_LOG.c ****         if((size & UART_LOG_TX_STS_FIFO_FULL) != 0u)
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 39


 840              		.loc 1 1304 0
 841 0006 4307     		lsls	r3, r0, #29
1305:Generated_Source\PSoC5/UART_LOG.c ****         {
1306:Generated_Source\PSoC5/UART_LOG.c ****             size = UART_LOG_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART_LOG.c ****         }
1308:Generated_Source\PSoC5/UART_LOG.c ****         else if((size & UART_LOG_TX_STS_FIFO_EMPTY) != 0u)
 842              		.loc 1 1308 0
 843 0008 5ABF     		itte	pl
 844 000a 80F00200 		eorpl	r0, r0, #2
 845              	.LVL46:
 846 000e C0F34000 		ubfxpl	r0, r0, #1, #1
1306:Generated_Source\PSoC5/UART_LOG.c ****         }
 847              		.loc 1 1306 0
 848 0012 0420     		movmi	r0, #4
 849              	.LVL47:
1309:Generated_Source\PSoC5/UART_LOG.c ****         {
1310:Generated_Source\PSoC5/UART_LOG.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART_LOG.c ****         }
1312:Generated_Source\PSoC5/UART_LOG.c ****         else
1313:Generated_Source\PSoC5/UART_LOG.c ****         {
1314:Generated_Source\PSoC5/UART_LOG.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_LOG.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART_LOG.c ****         }
1317:Generated_Source\PSoC5/UART_LOG.c **** 
1318:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_LOG.c **** 
1320:Generated_Source\PSoC5/UART_LOG.c ****     return(size);
1321:Generated_Source\PSoC5/UART_LOG.c ****     }
 850              		.loc 1 1321 0
 851 0014 7047     		bx	lr
 852              	.L90:
 853 0016 00BF     		.align	2
 854              	.L89:
 855 0018 66640040 		.word	1073767526
 856              		.cfi_endproc
 857              	.LFE23:
 858              		.size	UART_LOG_GetTxBufferSize, .-UART_LOG_GetTxBufferSize
 859              		.section	.text.UART_LOG_ClearTxBuffer,"ax",%progbits
 860              		.align	1
 861              		.global	UART_LOG_ClearTxBuffer
 862              		.thumb
 863              		.thumb_func
 864              		.type	UART_LOG_ClearTxBuffer, %function
 865              	UART_LOG_ClearTxBuffer:
 866              	.LFB24:
1322:Generated_Source\PSoC5/UART_LOG.c **** 
1323:Generated_Source\PSoC5/UART_LOG.c **** 
1324:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_LOG.c ****     *
1328:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_LOG.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_LOG.c ****     *
1331:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
1333:Generated_Source\PSoC5/UART_LOG.c ****     *
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 40


1334:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
1335:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
1336:Generated_Source\PSoC5/UART_LOG.c ****     *
1337:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_LOG.c ****     *
1341:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
1343:Generated_Source\PSoC5/UART_LOG.c ****     *
1344:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_LOG.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_LOG.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_LOG.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_LOG.c ****     *
1349:Generated_Source\PSoC5/UART_LOG.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_LOG.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_LOG.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_LOG.c ****     *
1353:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_LOG.c ****     {
 867              		.loc 1 1355 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871 0000 08B5     		push	{r3, lr}
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 3, -8
 874              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART_LOG.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_LOG.c **** 
1358:Generated_Source\PSoC5/UART_LOG.c ****         enableInterrupts = CyEnterCriticalSection();
 875              		.loc 1 1358 0
 876 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 877              	.LVL48:
1359:Generated_Source\PSoC5/UART_LOG.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_TXDATA_AUX_CTL_REG |= (uint8)  UART_LOG_TX_FIFO_CLR;
 878              		.loc 1 1360 0
 879 0006 064B     		ldr	r3, .L92
 880 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 881 000a 42F00102 		orr	r2, r2, #1
 882 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_TXDATA_AUX_CTL_REG &= (uint8) ~UART_LOG_TX_FIFO_CLR;
 883              		.loc 1 1361 0
 884 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 885 0012 02F0FE02 		and	r2, r2, #254
 886 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART_LOG.c ****         CyExitCriticalSection(enableInterrupts);
1363:Generated_Source\PSoC5/UART_LOG.c **** 
1364:Generated_Source\PSoC5/UART_LOG.c ****     #if (UART_LOG_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_LOG.c **** 
1366:Generated_Source\PSoC5/UART_LOG.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_DisableTxInt();
1368:Generated_Source\PSoC5/UART_LOG.c **** 
1369:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_txBufferWrite = 0u;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 41


1371:Generated_Source\PSoC5/UART_LOG.c **** 
1372:Generated_Source\PSoC5/UART_LOG.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_LOG.c ****         UART_LOG_EnableTxInt();
1374:Generated_Source\PSoC5/UART_LOG.c **** 
1375:Generated_Source\PSoC5/UART_LOG.c ****     #endif /* (UART_LOG_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_LOG.c ****     }
 887              		.loc 1 1376 0
 888 0018 BDE80840 		pop	{r3, lr}
 889              		.cfi_restore 14
 890              		.cfi_restore 3
 891              		.cfi_def_cfa_offset 0
1362:Generated_Source\PSoC5/UART_LOG.c ****         CyExitCriticalSection(enableInterrupts);
 892              		.loc 1 1362 0
 893 001c FFF7FEBF 		b	CyExitCriticalSection
 894              	.LVL49:
 895              	.L93:
 896              		.align	2
 897              	.L92:
 898 0020 96640040 		.word	1073767574
 899              		.cfi_endproc
 900              	.LFE24:
 901              		.size	UART_LOG_ClearTxBuffer, .-UART_LOG_ClearTxBuffer
 902              		.section	.text.UART_LOG_SendBreak,"ax",%progbits
 903              		.align	1
 904              		.global	UART_LOG_SendBreak
 905              		.thumb
 906              		.thumb_func
 907              		.type	UART_LOG_SendBreak, %function
 908              	UART_LOG_SendBreak:
 909              	.LFB25:
1377:Generated_Source\PSoC5/UART_LOG.c **** 
1378:Generated_Source\PSoC5/UART_LOG.c **** 
1379:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_SendBreak
1381:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_LOG.c ****     *
1383:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_LOG.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_LOG.c ****     *
1386:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_LOG.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_LOG.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_LOG.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_LOG.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_LOG.c ****     *   UART_LOG_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_LOG.c ****     *      UART_LOG_SEND_BREAK and UART_LOG_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_LOG.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_LOG.c ****     *
1398:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
1399:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
1400:Generated_Source\PSoC5/UART_LOG.c ****     *
1401:Generated_Source\PSoC5/UART_LOG.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_LOG.c ****     *  UART_LOG_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_LOG.c ****     *     initialized.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 42


1404:Generated_Source\PSoC5/UART_LOG.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_LOG.c ****     *
1406:Generated_Source\PSoC5/UART_LOG.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_LOG.c ****     *  No.
1408:Generated_Source\PSoC5/UART_LOG.c ****     *
1409:Generated_Source\PSoC5/UART_LOG.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_LOG.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_LOG.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_LOG.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_LOG.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_LOG.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_LOG.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_LOG.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_LOG.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_LOG.c ****     *     operation
1419:Generated_Source\PSoC5/UART_LOG.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_LOG.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_LOG.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_LOG.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_LOG.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_LOG.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_LOG.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_LOG.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_LOG.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_LOG.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_LOG.c ****     *     When interrupt appear with UART_LOG_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_LOG.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_LOG.c ****     *
1432:Generated_Source\PSoC5/UART_LOG.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_LOG.c ****     *  The UART_LOG_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_LOG.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_LOG.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_LOG.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_LOG.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_LOG.c ****     *
1439:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_LOG.c ****     {
 910              		.loc 1 1441 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915              	.LVL50:
1442:Generated_Source\PSoC5/UART_LOG.c **** 
1443:Generated_Source\PSoC5/UART_LOG.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_LOG.c ****         if(UART_LOG_initVar != 0u)
 916              		.loc 1 1444 0
 917 0000 124B     		ldr	r3, .L117
 918 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 919 0004 0AB3     		cbz	r2, .L94
 920              	.LBB14:
1445:Generated_Source\PSoC5/UART_LOG.c ****         {
1446:Generated_Source\PSoC5/UART_LOG.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_LOG.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_LOG.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_LOG.c **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 43


1450:Generated_Source\PSoC5/UART_LOG.c ****         #if(UART_LOG_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_LOG.c **** 
1452:Generated_Source\PSoC5/UART_LOG.c ****             if( (retMode == UART_LOG_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_LOG.c ****                 (retMode == UART_LOG_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_LOG.c ****             {
1455:Generated_Source\PSoC5/UART_LOG.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_WriteControlRegister(UART_LOG_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_LOG.c ****                                                       UART_LOG_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_LOG.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_LOG.c **** 
1461:Generated_Source\PSoC5/UART_LOG.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_LOG.c ****                 {
1463:Generated_Source\PSoC5/UART_LOG.c ****                     tmpStat = UART_LOG_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_LOG.c ****                 }
1465:Generated_Source\PSoC5/UART_LOG.c ****                 while((tmpStat & UART_LOG_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_LOG.c ****             }
1467:Generated_Source\PSoC5/UART_LOG.c **** 
1468:Generated_Source\PSoC5/UART_LOG.c ****             if( (retMode == UART_LOG_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_LOG.c ****                 (retMode == UART_LOG_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_LOG.c ****             {
1471:Generated_Source\PSoC5/UART_LOG.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_LOG.c ****                 {
1473:Generated_Source\PSoC5/UART_LOG.c ****                     tmpStat = UART_LOG_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_LOG.c ****                 }
1475:Generated_Source\PSoC5/UART_LOG.c ****                 while(((uint8)~tmpStat & UART_LOG_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_LOG.c ****             }
1477:Generated_Source\PSoC5/UART_LOG.c **** 
1478:Generated_Source\PSoC5/UART_LOG.c ****             if( (retMode == UART_LOG_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_LOG.c ****                 (retMode == UART_LOG_REINIT) ||
1480:Generated_Source\PSoC5/UART_LOG.c ****                 (retMode == UART_LOG_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_LOG.c ****             {
1482:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_WriteControlRegister(UART_LOG_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_LOG.c ****                                               (uint8)~UART_LOG_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_LOG.c ****             }
1485:Generated_Source\PSoC5/UART_LOG.c **** 
1486:Generated_Source\PSoC5/UART_LOG.c ****         #else /* UART_LOG_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_LOG.c **** 
1488:Generated_Source\PSoC5/UART_LOG.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_LOG.c **** 
1490:Generated_Source\PSoC5/UART_LOG.c ****             if( (retMode == UART_LOG_SEND_BREAK) ||
 921              		.loc 1 1490 0
 922 0006 08B1     		cbz	r0, .L97
 923              		.loc 1 1490 0 is_stmt 0 discriminator 1
 924 0008 0328     		cmp	r0, #3
 925 000a 1CD1     		bne	.L98
 926              	.L97:
1491:Generated_Source\PSoC5/UART_LOG.c ****                 (retMode == UART_LOG_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_LOG.c ****             {
1493:Generated_Source\PSoC5/UART_LOG.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_LOG.c ****                 #if( (UART_LOG_PARITY_TYPE != UART_LOG__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_LOG.c ****                                     (UART_LOG_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_LOG.c ****                     UART_LOG_WriteControlRegister(UART_LOG_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_LOG.c ****                                                           UART_LOG_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_LOG.c ****                 #endif /* End UART_LOG_PARITY_TYPE != UART_LOG__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_LOG.c **** 
1500:Generated_Source\PSoC5/UART_LOG.c ****                 #if(UART_LOG_TXCLKGEN_DP)
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 44


1501:Generated_Source\PSoC5/UART_LOG.c ****                     txPeriod = UART_LOG_TXBITCLKTX_COMPLETE_REG;
 927              		.loc 1 1501 0 is_stmt 1
 928 000c 104A     		ldr	r2, .L117+4
 929 000e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 930 0010 5970     		strb	r1, [r3, #1]
1502:Generated_Source\PSoC5/UART_LOG.c ****                     UART_LOG_TXBITCLKTX_COMPLETE_REG = UART_LOG_TXBITCTR_BREAKBITS;
 931              		.loc 1 1502 0
 932 0012 6721     		movs	r1, #103
 933 0014 1170     		strb	r1, [r2]
1503:Generated_Source\PSoC5/UART_LOG.c ****                 #else
1504:Generated_Source\PSoC5/UART_LOG.c ****                     txPeriod = UART_LOG_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_LOG.c ****                     UART_LOG_TXBITCTR_PERIOD_REG = UART_LOG_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_LOG.c ****                 #endif /* End UART_LOG_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_LOG.c **** 
1508:Generated_Source\PSoC5/UART_LOG.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_TXDATA_REG = 0u;
 934              		.loc 1 1509 0
 935 0016 0021     		movs	r1, #0
 936 0018 02F8F01C 		strb	r1, [r2, #-240]
1510:Generated_Source\PSoC5/UART_LOG.c **** 
1511:Generated_Source\PSoC5/UART_LOG.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_LOG.c ****                 {
1513:Generated_Source\PSoC5/UART_LOG.c ****                     tmpStat = UART_LOG_TXSTATUS_REG;
 937              		.loc 1 1513 0
 938 001c 0D49     		ldr	r1, .L117+8
 939              	.L99:
 940              		.loc 1 1513 0 is_stmt 0 discriminator 1
 941 001e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 942              	.LVL51:
1514:Generated_Source\PSoC5/UART_LOG.c ****                 }
1515:Generated_Source\PSoC5/UART_LOG.c ****                 while((tmpStat & UART_LOG_TX_STS_FIFO_EMPTY) != 0u);
 943              		.loc 1 1515 0 is_stmt 1 discriminator 1
 944 0020 9207     		lsls	r2, r2, #30
 945              	.LVL52:
 946 0022 FCD4     		bmi	.L99
1516:Generated_Source\PSoC5/UART_LOG.c ****             }
1517:Generated_Source\PSoC5/UART_LOG.c **** 
1518:Generated_Source\PSoC5/UART_LOG.c ****             if( (retMode == UART_LOG_WAIT_FOR_COMPLETE_REINIT) ||
 947              		.loc 1 1518 0
 948 0024 00F0FD02 		and	r2, r0, #253
 949 0028 012A     		cmp	r2, #1
 950              	.L116:
 951 002a 03D0     		beq	.L100
 952              	.L104:
1519:Generated_Source\PSoC5/UART_LOG.c ****                 (retMode == UART_LOG_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_LOG.c ****             {
1521:Generated_Source\PSoC5/UART_LOG.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_LOG.c ****                 {
1523:Generated_Source\PSoC5/UART_LOG.c ****                     tmpStat = UART_LOG_TXSTATUS_REG;
1524:Generated_Source\PSoC5/UART_LOG.c ****                 }
1525:Generated_Source\PSoC5/UART_LOG.c ****                 while(((uint8)~tmpStat & UART_LOG_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/UART_LOG.c ****             }
1527:Generated_Source\PSoC5/UART_LOG.c **** 
1528:Generated_Source\PSoC5/UART_LOG.c ****             if( (retMode == UART_LOG_WAIT_FOR_COMPLETE_REINIT) ||
 953              		.loc 1 1528 0
 954 002c 0138     		subs	r0, r0, #1
 955              	.LVL53:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 45


 956 002e 0228     		cmp	r0, #2
 957 0030 05D9     		bls	.L101
 958 0032 7047     		bx	lr
 959              	.LVL54:
 960              	.L100:
1523:Generated_Source\PSoC5/UART_LOG.c ****                 }
 961              		.loc 1 1523 0
 962 0034 0749     		ldr	r1, .L117+8
 963              	.L103:
1523:Generated_Source\PSoC5/UART_LOG.c ****                 }
 964              		.loc 1 1523 0 is_stmt 0 discriminator 1
 965 0036 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 966              	.LVL55:
1525:Generated_Source\PSoC5/UART_LOG.c ****             }
 967              		.loc 1 1525 0 is_stmt 1 discriminator 1
 968 0038 D207     		lsls	r2, r2, #31
 969              	.LVL56:
 970 003a FCD5     		bpl	.L103
 971 003c F6E7     		b	.L104
 972              	.LVL57:
 973              	.L101:
1529:Generated_Source\PSoC5/UART_LOG.c ****                 (retMode == UART_LOG_REINIT) ||
1530:Generated_Source\PSoC5/UART_LOG.c ****                 (retMode == UART_LOG_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_LOG.c ****             {
1532:Generated_Source\PSoC5/UART_LOG.c **** 
1533:Generated_Source\PSoC5/UART_LOG.c ****             #if(UART_LOG_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_TXBITCLKTX_COMPLETE_REG = txPeriod;
 974              		.loc 1 1534 0
 975 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 976 0040 034B     		ldr	r3, .L117+4
 977 0042 1A70     		strb	r2, [r3]
 978              	.LBE14:
1535:Generated_Source\PSoC5/UART_LOG.c ****             #else
1536:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_LOG.c ****             #endif /* End UART_LOG_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_LOG.c **** 
1539:Generated_Source\PSoC5/UART_LOG.c ****             #if( (UART_LOG_PARITY_TYPE != UART_LOG__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_LOG.c ****                  (UART_LOG_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_LOG.c ****                 UART_LOG_WriteControlRegister(UART_LOG_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_LOG.c ****                                                       (uint8) ~UART_LOG_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_LOG.c ****             #endif /* End UART_LOG_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_LOG.c ****             }
1545:Generated_Source\PSoC5/UART_LOG.c ****         #endif    /* End UART_LOG_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_LOG.c ****         }
1547:Generated_Source\PSoC5/UART_LOG.c ****     }
 979              		.loc 1 1547 0
 980 0044 7047     		bx	lr
 981              	.LVL58:
 982              	.L98:
 983              	.LBB15:
1518:Generated_Source\PSoC5/UART_LOG.c ****                 (retMode == UART_LOG_SEND_WAIT_REINIT) )
 984              		.loc 1 1518 0
 985 0046 0128     		cmp	r0, #1
 986 0048 EFE7     		b	.L116
 987              	.L94:
 988 004a 7047     		bx	lr
 989              	.L118:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 46


 990              		.align	2
 991              	.L117:
 992 004c 00000000 		.word	.LANCHOR0
 993 0050 36650040 		.word	1073767734
 994 0054 66640040 		.word	1073767526
 995              	.LBE15:
 996              		.cfi_endproc
 997              	.LFE25:
 998              		.size	UART_LOG_SendBreak, .-UART_LOG_SendBreak
 999              		.section	.text.UART_LOG_SetTxAddressMode,"ax",%progbits
 1000              		.align	1
 1001              		.global	UART_LOG_SetTxAddressMode
 1002              		.thumb
 1003              		.thumb_func
 1004              		.type	UART_LOG_SetTxAddressMode, %function
 1005              	UART_LOG_SetTxAddressMode:
 1006              	.LFB26:
1548:Generated_Source\PSoC5/UART_LOG.c **** 
1549:Generated_Source\PSoC5/UART_LOG.c **** 
1550:Generated_Source\PSoC5/UART_LOG.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_LOG.c ****     * Function Name: UART_LOG_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_LOG.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_LOG.c ****     *
1554:Generated_Source\PSoC5/UART_LOG.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_LOG.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_LOG.c ****     *
1557:Generated_Source\PSoC5/UART_LOG.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_LOG.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_LOG.c ****     *       UART_LOG_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_LOG.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_LOG.c ****     *       UART_LOG_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_LOG.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_LOG.c ****     *
1564:Generated_Source\PSoC5/UART_LOG.c ****     * Return:
1565:Generated_Source\PSoC5/UART_LOG.c ****     *  None.
1566:Generated_Source\PSoC5/UART_LOG.c ****     *
1567:Generated_Source\PSoC5/UART_LOG.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_LOG.c ****     *  This function sets and clears UART_LOG_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_LOG.c ****     *  register.
1570:Generated_Source\PSoC5/UART_LOG.c ****     *
1571:Generated_Source\PSoC5/UART_LOG.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_LOG.c ****     void UART_LOG_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_LOG.c ****     {
 1007              		.loc 1 1573 0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011              		@ link register save eliminated.
 1012              	.LVL59:
 1013 0000 7047     		bx	lr
 1014              		.cfi_endproc
 1015              	.LFE26:
 1016              		.size	UART_LOG_SetTxAddressMode, .-UART_LOG_SetTxAddressMode
 1017              		.global	UART_LOG_initVar
 1018              		.bss
 1019              		.set	.LANCHOR0,. + 0
 1020              		.type	UART_LOG_initVar, %object
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 47


 1021              		.size	UART_LOG_initVar, 1
 1022              	UART_LOG_initVar:
 1023 0000 00       		.space	1
 1024              		.type	txPeriod.5122, %object
 1025              		.size	txPeriod.5122, 1
 1026              	txPeriod.5122:
 1027 0001 00       		.space	1
 1028              		.text
 1029              	.Letext0:
 1030              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1031              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1032              		.file 4 "Generated_Source\\PSoC5\\UART_LOG_IntClock.h"
 1033              		.section	.debug_info,"",%progbits
 1034              	.Ldebug_info0:
 1035 0000 08060000 		.4byte	0x608
 1036 0004 0400     		.2byte	0x4
 1037 0006 00000000 		.4byte	.Ldebug_abbrev0
 1038 000a 04       		.byte	0x4
 1039 000b 01       		.uleb128 0x1
 1040 000c DB000000 		.4byte	.LASF59
 1041 0010 0C       		.byte	0xc
 1042 0011 65000000 		.4byte	.LASF60
 1043 0015 14040000 		.4byte	.LASF61
 1044 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1045 001d 00000000 		.4byte	0
 1046 0021 00000000 		.4byte	.Ldebug_line0
 1047 0025 02       		.uleb128 0x2
 1048 0026 01       		.byte	0x1
 1049 0027 06       		.byte	0x6
 1050 0028 CF000000 		.4byte	.LASF0
 1051 002c 02       		.uleb128 0x2
 1052 002d 01       		.byte	0x1
 1053 002e 08       		.byte	0x8
 1054 002f E0020000 		.4byte	.LASF1
 1055 0033 02       		.uleb128 0x2
 1056 0034 02       		.byte	0x2
 1057 0035 05       		.byte	0x5
 1058 0036 FF020000 		.4byte	.LASF2
 1059 003a 02       		.uleb128 0x2
 1060 003b 02       		.byte	0x2
 1061 003c 07       		.byte	0x7
 1062 003d 25020000 		.4byte	.LASF3
 1063 0041 02       		.uleb128 0x2
 1064 0042 04       		.byte	0x4
 1065 0043 05       		.byte	0x5
 1066 0044 83010000 		.4byte	.LASF4
 1067 0048 02       		.uleb128 0x2
 1068 0049 04       		.byte	0x4
 1069 004a 07       		.byte	0x7
 1070 004b DD010000 		.4byte	.LASF5
 1071 004f 02       		.uleb128 0x2
 1072 0050 08       		.byte	0x8
 1073 0051 05       		.byte	0x5
 1074 0052 C1000000 		.4byte	.LASF6
 1075 0056 02       		.uleb128 0x2
 1076 0057 08       		.byte	0x8
 1077 0058 07       		.byte	0x7
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 48


 1078 0059 87000000 		.4byte	.LASF7
 1079 005d 03       		.uleb128 0x3
 1080 005e 04       		.byte	0x4
 1081 005f 05       		.byte	0x5
 1082 0060 696E7400 		.ascii	"int\000"
 1083 0064 02       		.uleb128 0x2
 1084 0065 04       		.byte	0x4
 1085 0066 07       		.byte	0x7
 1086 0067 D0010000 		.4byte	.LASF8
 1087 006b 04       		.uleb128 0x4
 1088 006c A0010000 		.4byte	.LASF9
 1089 0070 02       		.byte	0x2
 1090 0071 E401     		.2byte	0x1e4
 1091 0073 2C000000 		.4byte	0x2c
 1092 0077 04       		.uleb128 0x4
 1093 0078 00000000 		.4byte	.LASF10
 1094 007c 02       		.byte	0x2
 1095 007d E501     		.2byte	0x1e5
 1096 007f 3A000000 		.4byte	0x3a
 1097 0083 02       		.uleb128 0x2
 1098 0084 04       		.byte	0x4
 1099 0085 04       		.byte	0x4
 1100 0086 C2020000 		.4byte	.LASF11
 1101 008a 02       		.uleb128 0x2
 1102 008b 08       		.byte	0x8
 1103 008c 04       		.byte	0x4
 1104 008d A6010000 		.4byte	.LASF12
 1105 0091 04       		.uleb128 0x4
 1106 0092 9D030000 		.4byte	.LASF13
 1107 0096 02       		.byte	0x2
 1108 0097 F501     		.2byte	0x1f5
 1109 0099 9D000000 		.4byte	0x9d
 1110 009d 02       		.uleb128 0x2
 1111 009e 01       		.byte	0x1
 1112 009f 08       		.byte	0x8
 1113 00a0 6F030000 		.4byte	.LASF14
 1114 00a4 04       		.uleb128 0x4
 1115 00a5 DB020000 		.4byte	.LASF15
 1116 00a9 02       		.byte	0x2
 1117 00aa 8E02     		.2byte	0x28e
 1118 00ac B0000000 		.4byte	0xb0
 1119 00b0 05       		.uleb128 0x5
 1120 00b1 6B000000 		.4byte	0x6b
 1121 00b5 02       		.uleb128 0x2
 1122 00b6 08       		.byte	0x8
 1123 00b7 04       		.byte	0x4
 1124 00b8 70020000 		.4byte	.LASF16
 1125 00bc 02       		.uleb128 0x2
 1126 00bd 04       		.byte	0x4
 1127 00be 07       		.byte	0x7
 1128 00bf 67020000 		.4byte	.LASF17
 1129 00c3 06       		.uleb128 0x6
 1130 00c4 8C010000 		.4byte	.LASF18
 1131 00c8 01       		.byte	0x1
 1132 00c9 8801     		.2byte	0x188
 1133 00cb 6B000000 		.4byte	0x6b
 1134 00cf 01       		.byte	0x1
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 49


 1135 00d0 E1000000 		.4byte	0xe1
 1136 00d4 07       		.uleb128 0x7
 1137 00d5 57030000 		.4byte	.LASF20
 1138 00d9 01       		.byte	0x1
 1139 00da 8A01     		.2byte	0x18a
 1140 00dc 6B000000 		.4byte	0x6b
 1141 00e0 00       		.byte	0
 1142 00e1 06       		.uleb128 0x6
 1143 00e2 7C020000 		.4byte	.LASF19
 1144 00e6 01       		.byte	0x1
 1145 00e7 E501     		.2byte	0x1e5
 1146 00e9 6B000000 		.4byte	0x6b
 1147 00ed 01       		.byte	0x1
 1148 00ee FF000000 		.4byte	0xff
 1149 00f2 07       		.uleb128 0x7
 1150 00f3 0D040000 		.4byte	.LASF21
 1151 00f7 01       		.byte	0x1
 1152 00f8 E701     		.2byte	0x1e7
 1153 00fa 6B000000 		.4byte	0x6b
 1154 00fe 00       		.byte	0
 1155 00ff 08       		.uleb128 0x8
 1156 0100 9A020000 		.4byte	.LASF62
 1157 0104 01       		.byte	0x1
 1158 0105 6A       		.byte	0x6a
 1159 0106 00000000 		.4byte	.LFB1
 1160 010a 28000000 		.4byte	.LFE1-.LFB1
 1161 010e 01       		.uleb128 0x1
 1162 010f 9C       		.byte	0x9c
 1163 0110 09       		.uleb128 0x9
 1164 0111 8D030000 		.4byte	.LASF22
 1165 0115 01       		.byte	0x1
 1166 0116 B7       		.byte	0xb7
 1167 0117 00000000 		.4byte	.LFB2
 1168 011b 3C000000 		.4byte	.LFE2-.LFB2
 1169 011f 01       		.uleb128 0x1
 1170 0120 9C       		.byte	0x9c
 1171 0121 50010000 		.4byte	0x150
 1172 0125 0A       		.uleb128 0xa
 1173 0126 FC030000 		.4byte	.LASF25
 1174 012a 01       		.byte	0x1
 1175 012b B9       		.byte	0xb9
 1176 012c 6B000000 		.4byte	0x6b
 1177 0130 00000000 		.4byte	.LLST0
 1178 0134 0B       		.uleb128 0xb
 1179 0135 06000000 		.4byte	.LVL0
 1180 0139 DF050000 		.4byte	0x5df
 1181 013d 0B       		.uleb128 0xb
 1182 013e 2C000000 		.4byte	.LVL2
 1183 0142 EA050000 		.4byte	0x5ea
 1184 0146 0C       		.uleb128 0xc
 1185 0147 36000000 		.4byte	.LVL4
 1186 014b F5050000 		.4byte	0x5f5
 1187 014f 00       		.byte	0
 1188 0150 09       		.uleb128 0x9
 1189 0151 B9010000 		.4byte	.LASF23
 1190 0155 01       		.byte	0x1
 1191 0156 4C       		.byte	0x4c
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 50


 1192 0157 00000000 		.4byte	.LFB0
 1193 015b 1C000000 		.4byte	.LFE0-.LFB0
 1194 015f 01       		.uleb128 0x1
 1195 0160 9C       		.byte	0x9c
 1196 0161 78010000 		.4byte	0x178
 1197 0165 0B       		.uleb128 0xb
 1198 0166 0C000000 		.4byte	.LVL5
 1199 016a FF000000 		.4byte	0xff
 1200 016e 0C       		.uleb128 0xc
 1201 016f 18000000 		.4byte	.LVL6
 1202 0173 10010000 		.4byte	0x110
 1203 0177 00       		.byte	0
 1204 0178 09       		.uleb128 0x9
 1205 0179 9E000000 		.4byte	.LASF24
 1206 017d 01       		.byte	0x1
 1207 017e F0       		.byte	0xf0
 1208 017f 00000000 		.4byte	.LFB3
 1209 0183 40000000 		.4byte	.LFE3-.LFB3
 1210 0187 01       		.uleb128 0x1
 1211 0188 9C       		.byte	0x9c
 1212 0189 B8010000 		.4byte	0x1b8
 1213 018d 0A       		.uleb128 0xa
 1214 018e FC030000 		.4byte	.LASF25
 1215 0192 01       		.byte	0x1
 1216 0193 F2       		.byte	0xf2
 1217 0194 6B000000 		.4byte	0x6b
 1218 0198 13000000 		.4byte	.LLST1
 1219 019c 0B       		.uleb128 0xb
 1220 019d 06000000 		.4byte	.LVL7
 1221 01a1 DF050000 		.4byte	0x5df
 1222 01a5 0B       		.uleb128 0xb
 1223 01a6 16000000 		.4byte	.LVL9
 1224 01aa 00060000 		.4byte	0x600
 1225 01ae 0C       		.uleb128 0xc
 1226 01af 38000000 		.4byte	.LVL11
 1227 01b3 F5050000 		.4byte	0x5f5
 1228 01b7 00       		.byte	0
 1229 01b8 0D       		.uleb128 0xd
 1230 01b9 07000000 		.4byte	.LASF40
 1231 01bd 01       		.byte	0x1
 1232 01be 2701     		.2byte	0x127
 1233 01c0 6B000000 		.4byte	0x6b
 1234 01c4 00000000 		.4byte	.LFB4
 1235 01c8 04000000 		.4byte	.LFE4-.LFB4
 1236 01cc 01       		.uleb128 0x1
 1237 01cd 9C       		.byte	0x9c
 1238 01ce 0E       		.uleb128 0xe
 1239 01cf BB030000 		.4byte	.LASF26
 1240 01d3 01       		.byte	0x1
 1241 01d4 6701     		.2byte	0x167
 1242 01d6 00000000 		.4byte	.LFB6
 1243 01da 0C000000 		.4byte	.LFE6-.LFB6
 1244 01de 01       		.uleb128 0x1
 1245 01df 9C       		.byte	0x9c
 1246 01e0 F3010000 		.4byte	0x1f3
 1247 01e4 0F       		.uleb128 0xf
 1248 01e5 41020000 		.4byte	.LASF34
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 51


 1249 01e9 01       		.byte	0x1
 1250 01ea 6701     		.2byte	0x167
 1251 01ec 6B000000 		.4byte	0x6b
 1252 01f0 01       		.uleb128 0x1
 1253 01f1 50       		.byte	0x50
 1254 01f2 00       		.byte	0
 1255 01f3 10       		.uleb128 0x10
 1256 01f4 C3000000 		.4byte	0xc3
 1257 01f8 00000000 		.4byte	.LFB7
 1258 01fc 0C000000 		.4byte	.LFE7-.LFB7
 1259 0200 01       		.uleb128 0x1
 1260 0201 9C       		.byte	0x9c
 1261 0202 0E020000 		.4byte	0x20e
 1262 0206 11       		.uleb128 0x11
 1263 0207 D4000000 		.4byte	0xd4
 1264 020b 01       		.uleb128 0x1
 1265 020c 50       		.byte	0x50
 1266 020d 00       		.byte	0
 1267 020e 10       		.uleb128 0x10
 1268 020f E1000000 		.4byte	0xe1
 1269 0213 00000000 		.4byte	.LFB8
 1270 0217 10000000 		.4byte	.LFE8-.LFB8
 1271 021b 01       		.uleb128 0x1
 1272 021c 9C       		.byte	0x9c
 1273 021d 2B020000 		.4byte	0x22b
 1274 0221 12       		.uleb128 0x12
 1275 0222 F2000000 		.4byte	0xf2
 1276 0226 26000000 		.4byte	.LLST2
 1277 022a 00       		.byte	0
 1278 022b 13       		.uleb128 0x13
 1279 022c EE020000 		.4byte	.LASF28
 1280 0230 01       		.byte	0x1
 1281 0231 1402     		.2byte	0x214
 1282 0233 6B000000 		.4byte	0x6b
 1283 0237 00000000 		.4byte	.LFB9
 1284 023b 28000000 		.4byte	.LFE9-.LFB9
 1285 023f 01       		.uleb128 0x1
 1286 0240 9C       		.byte	0x9c
 1287 0241 64020000 		.4byte	0x264
 1288 0245 14       		.uleb128 0x14
 1289 0246 57030000 		.4byte	.LASF20
 1290 024a 01       		.byte	0x1
 1291 024b 1602     		.2byte	0x216
 1292 024d 6B000000 		.4byte	0x6b
 1293 0251 3E000000 		.4byte	.LLST3
 1294 0255 15       		.uleb128 0x15
 1295 0256 B9020000 		.4byte	.LASF27
 1296 025a 01       		.byte	0x1
 1297 025b 1702     		.2byte	0x217
 1298 025d 6B000000 		.4byte	0x6b
 1299 0261 01       		.uleb128 0x1
 1300 0262 53       		.byte	0x53
 1301 0263 00       		.byte	0
 1302 0264 13       		.uleb128 0x13
 1303 0265 72010000 		.4byte	.LASF29
 1304 0269 01       		.byte	0x1
 1305 026a 7A02     		.2byte	0x27a
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 52


 1306 026c 77000000 		.4byte	0x77
 1307 0270 00000000 		.4byte	.LFB10
 1308 0274 1C000000 		.4byte	.LFE10-.LFB10
 1309 0278 01       		.uleb128 0x1
 1310 0279 9C       		.byte	0x9c
 1311 027a BB020000 		.4byte	0x2bb
 1312 027e 16       		.uleb128 0x16
 1313 027f E1000000 		.4byte	0xe1
 1314 0283 00000000 		.4byte	.LBB6
 1315 0287 00000000 		.4byte	.Ldebug_ranges0+0
 1316 028b 01       		.byte	0x1
 1317 028c 8602     		.2byte	0x286
 1318 028e 9E020000 		.4byte	0x29e
 1319 0292 17       		.uleb128 0x17
 1320 0293 00000000 		.4byte	.Ldebug_ranges0+0
 1321 0297 18       		.uleb128 0x18
 1322 0298 F2000000 		.4byte	0xf2
 1323 029c 00       		.byte	0
 1324 029d 00       		.byte	0
 1325 029e 19       		.uleb128 0x19
 1326 029f C3000000 		.4byte	0xc3
 1327 02a3 02000000 		.4byte	.LBB9
 1328 02a7 18000000 		.4byte	.Ldebug_ranges0+0x18
 1329 02ab 01       		.byte	0x1
 1330 02ac 8602     		.2byte	0x286
 1331 02ae 17       		.uleb128 0x17
 1332 02af 18000000 		.4byte	.Ldebug_ranges0+0x18
 1333 02b3 18       		.uleb128 0x18
 1334 02b4 D4000000 		.4byte	0xd4
 1335 02b8 00       		.byte	0
 1336 02b9 00       		.byte	0
 1337 02ba 00       		.byte	0
 1338 02bb 13       		.uleb128 0x13
 1339 02bc 45000000 		.4byte	.LASF30
 1340 02c0 01       		.byte	0x1
 1341 02c1 AB02     		.2byte	0x2ab
 1342 02c3 6B000000 		.4byte	0x6b
 1343 02c7 00000000 		.4byte	.LFB11
 1344 02cb 10000000 		.4byte	.LFE11-.LFB11
 1345 02cf 01       		.uleb128 0x1
 1346 02d0 9C       		.byte	0x9c
 1347 02d1 E6020000 		.4byte	0x2e6
 1348 02d5 14       		.uleb128 0x14
 1349 02d6 20020000 		.4byte	.LASF31
 1350 02da 01       		.byte	0x1
 1351 02db AE02     		.2byte	0x2ae
 1352 02dd 6B000000 		.4byte	0x6b
 1353 02e1 5D000000 		.4byte	.LLST4
 1354 02e5 00       		.byte	0
 1355 02e6 0E       		.uleb128 0xe
 1356 02e7 48020000 		.4byte	.LASF32
 1357 02eb 01       		.byte	0x1
 1358 02ec F502     		.2byte	0x2f5
 1359 02ee 00000000 		.4byte	.LFB12
 1360 02f2 24000000 		.4byte	.LFE12-.LFB12
 1361 02f6 01       		.uleb128 0x1
 1362 02f7 9C       		.byte	0x9c
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 53


 1363 02f8 1F030000 		.4byte	0x31f
 1364 02fc 14       		.uleb128 0x14
 1365 02fd FC030000 		.4byte	.LASF25
 1366 0301 01       		.byte	0x1
 1367 0302 F702     		.2byte	0x2f7
 1368 0304 6B000000 		.4byte	0x6b
 1369 0308 79000000 		.4byte	.LLST5
 1370 030c 0B       		.uleb128 0xb
 1371 030d 06000000 		.4byte	.LVL22
 1372 0311 DF050000 		.4byte	0x5df
 1373 0315 0C       		.uleb128 0xc
 1374 0316 20000000 		.4byte	.LVL23
 1375 031a F5050000 		.4byte	0x5f5
 1376 031e 00       		.byte	0
 1377 031f 0E       		.uleb128 0xe
 1378 0320 D2040000 		.4byte	.LASF33
 1379 0324 01       		.byte	0x1
 1380 0325 5903     		.2byte	0x359
 1381 0327 00000000 		.4byte	.LFB14
 1382 032b 0C000000 		.4byte	.LFE14-.LFB14
 1383 032f 01       		.uleb128 0x1
 1384 0330 9C       		.byte	0x9c
 1385 0331 44030000 		.4byte	0x344
 1386 0335 0F       		.uleb128 0xf
 1387 0336 92020000 		.4byte	.LASF35
 1388 033a 01       		.byte	0x1
 1389 033b 5903     		.2byte	0x359
 1390 033d 6B000000 		.4byte	0x6b
 1391 0341 01       		.uleb128 0x1
 1392 0342 50       		.byte	0x50
 1393 0343 00       		.byte	0
 1394 0344 0E       		.uleb128 0xe
 1395 0345 E9040000 		.4byte	.LASF36
 1396 0349 01       		.byte	0x1
 1397 034a 6D03     		.2byte	0x36d
 1398 034c 00000000 		.4byte	.LFB15
 1399 0350 0C000000 		.4byte	.LFE15-.LFB15
 1400 0354 01       		.uleb128 0x1
 1401 0355 9C       		.byte	0x9c
 1402 0356 69030000 		.4byte	0x369
 1403 035a 0F       		.uleb128 0xf
 1404 035b 92020000 		.4byte	.LASF35
 1405 035f 01       		.byte	0x1
 1406 0360 6D03     		.2byte	0x36d
 1407 0362 6B000000 		.4byte	0x6b
 1408 0366 01       		.uleb128 0x1
 1409 0367 50       		.byte	0x50
 1410 0368 00       		.byte	0
 1411 0369 0E       		.uleb128 0xe
 1412 036a 09030000 		.4byte	.LASF37
 1413 036e 01       		.byte	0x1
 1414 036f 8C03     		.2byte	0x38c
 1415 0371 00000000 		.4byte	.LFB16
 1416 0375 0C000000 		.4byte	.LFE16-.LFB16
 1417 0379 01       		.uleb128 0x1
 1418 037a 9C       		.byte	0x9c
 1419 037b 8E030000 		.4byte	0x38e
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 54


 1420 037f 0F       		.uleb128 0xf
 1421 0380 41020000 		.4byte	.LASF34
 1422 0384 01       		.byte	0x1
 1423 0385 8C03     		.2byte	0x38c
 1424 0387 6B000000 		.4byte	0x6b
 1425 038b 01       		.uleb128 0x1
 1426 038c 50       		.byte	0x50
 1427 038d 00       		.byte	0
 1428 038e 0E       		.uleb128 0xe
 1429 038f AC000000 		.4byte	.LASF38
 1430 0393 01       		.byte	0x1
 1431 0394 AE03     		.2byte	0x3ae
 1432 0396 00000000 		.4byte	.LFB17
 1433 039a 14000000 		.4byte	.LFE17-.LFB17
 1434 039e 01       		.uleb128 0x1
 1435 039f 9C       		.byte	0x9c
 1436 03a0 B3030000 		.4byte	0x3b3
 1437 03a4 0F       		.uleb128 0xf
 1438 03a5 3A000000 		.4byte	.LASF39
 1439 03a9 01       		.byte	0x1
 1440 03aa AE03     		.2byte	0x3ae
 1441 03ac 6B000000 		.4byte	0x6b
 1442 03b0 01       		.uleb128 0x1
 1443 03b1 50       		.byte	0x50
 1444 03b2 00       		.byte	0
 1445 03b3 0D       		.uleb128 0xd
 1446 03b4 BC040000 		.4byte	.LASF41
 1447 03b8 01       		.byte	0x1
 1448 03b9 EB03     		.2byte	0x3eb
 1449 03bb 6B000000 		.4byte	0x6b
 1450 03bf 00000000 		.4byte	.LFB18
 1451 03c3 0C000000 		.4byte	.LFE18-.LFB18
 1452 03c7 01       		.uleb128 0x1
 1453 03c8 9C       		.byte	0x9c
 1454 03c9 0E       		.uleb128 0xe
 1455 03ca 5E030000 		.4byte	.LASF42
 1456 03ce 01       		.byte	0x1
 1457 03cf 1104     		.2byte	0x411
 1458 03d1 00000000 		.4byte	.LFB19
 1459 03d5 18000000 		.4byte	.LFE19-.LFB19
 1460 03d9 01       		.uleb128 0x1
 1461 03da 9C       		.byte	0x9c
 1462 03db EE030000 		.4byte	0x3ee
 1463 03df 0F       		.uleb128 0xf
 1464 03e0 3A000000 		.4byte	.LASF39
 1465 03e4 01       		.byte	0x1
 1466 03e5 1104     		.2byte	0x411
 1467 03e7 6B000000 		.4byte	0x6b
 1468 03eb 01       		.uleb128 0x1
 1469 03ec 50       		.byte	0x50
 1470 03ed 00       		.byte	0
 1471 03ee 0E       		.uleb128 0xe
 1472 03ef E9030000 		.4byte	.LASF43
 1473 03f3 01       		.byte	0x1
 1474 03f4 7904     		.2byte	0x479
 1475 03f6 00000000 		.4byte	.LFB20
 1476 03fa 20000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 55


 1477 03fe 01       		.uleb128 0x1
 1478 03ff 9C       		.byte	0x9c
 1479 0400 2E040000 		.4byte	0x42e
 1480 0404 1A       		.uleb128 0x1a
 1481 0405 5E000000 		.4byte	.LASF44
 1482 0409 01       		.byte	0x1
 1483 040a 7904     		.2byte	0x479
 1484 040c 2E040000 		.4byte	0x42e
 1485 0410 8C000000 		.4byte	.LLST6
 1486 0414 14       		.uleb128 0x14
 1487 0415 38020000 		.4byte	.LASF45
 1488 0419 01       		.byte	0x1
 1489 041a 7B04     		.2byte	0x47b
 1490 041c 77000000 		.4byte	0x77
 1491 0420 B8000000 		.4byte	.LLST7
 1492 0424 0B       		.uleb128 0xb
 1493 0425 18000000 		.4byte	.LVL32
 1494 0429 C9030000 		.4byte	0x3c9
 1495 042d 00       		.byte	0
 1496 042e 1B       		.uleb128 0x1b
 1497 042f 04       		.byte	0x4
 1498 0430 34040000 		.4byte	0x434
 1499 0434 1C       		.uleb128 0x1c
 1500 0435 91000000 		.4byte	0x91
 1501 0439 0E       		.uleb128 0xe
 1502 043a D7030000 		.4byte	.LASF46
 1503 043e 01       		.byte	0x1
 1504 043f A704     		.2byte	0x4a7
 1505 0441 00000000 		.4byte	.LFB21
 1506 0445 24000000 		.4byte	.LFE21-.LFB21
 1507 0449 01       		.uleb128 0x1
 1508 044a 9C       		.byte	0x9c
 1509 044b 89040000 		.4byte	0x489
 1510 044f 1A       		.uleb128 0x1a
 1511 0450 5E000000 		.4byte	.LASF44
 1512 0454 01       		.byte	0x1
 1513 0455 A704     		.2byte	0x4a7
 1514 0457 89040000 		.4byte	0x489
 1515 045b ED000000 		.4byte	.LLST8
 1516 045f 1A       		.uleb128 0x1a
 1517 0460 25030000 		.4byte	.LASF47
 1518 0464 01       		.byte	0x1
 1519 0465 A704     		.2byte	0x4a7
 1520 0467 6B000000 		.4byte	0x6b
 1521 046b 0E010000 		.4byte	.LLST9
 1522 046f 14       		.uleb128 0x14
 1523 0470 38020000 		.4byte	.LASF45
 1524 0474 01       		.byte	0x1
 1525 0475 AA04     		.2byte	0x4aa
 1526 0477 6B000000 		.4byte	0x6b
 1527 047b 2F010000 		.4byte	.LLST10
 1528 047f 0B       		.uleb128 0xb
 1529 0480 1A000000 		.4byte	.LVL39
 1530 0484 C9030000 		.4byte	0x3c9
 1531 0488 00       		.byte	0
 1532 0489 1B       		.uleb128 0x1b
 1533 048a 04       		.byte	0x4
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 56


 1534 048b 8F040000 		.4byte	0x48f
 1535 048f 1C       		.uleb128 0x1c
 1536 0490 6B000000 		.4byte	0x6b
 1537 0494 0E       		.uleb128 0xe
 1538 0495 A8020000 		.4byte	.LASF48
 1539 0499 01       		.byte	0x1
 1540 049a CE04     		.2byte	0x4ce
 1541 049c 00000000 		.4byte	.LFB22
 1542 04a0 24000000 		.4byte	.LFE22-.LFB22
 1543 04a4 01       		.uleb128 0x1
 1544 04a5 9C       		.byte	0x9c
 1545 04a6 E6040000 		.4byte	0x4e6
 1546 04aa 1A       		.uleb128 0x1a
 1547 04ab 3A000000 		.4byte	.LASF39
 1548 04af 01       		.byte	0x1
 1549 04b0 CE04     		.2byte	0x4ce
 1550 04b2 6B000000 		.4byte	0x6b
 1551 04b6 69010000 		.4byte	.LLST11
 1552 04ba 0B       		.uleb128 0xb
 1553 04bb 0C000000 		.4byte	.LVL42
 1554 04bf C9030000 		.4byte	0x3c9
 1555 04c3 1D       		.uleb128 0x1d
 1556 04c4 12000000 		.4byte	.LVL43
 1557 04c8 C9030000 		.4byte	0x3c9
 1558 04cc D6040000 		.4byte	0x4d6
 1559 04d0 1E       		.uleb128 0x1e
 1560 04d1 01       		.uleb128 0x1
 1561 04d2 50       		.byte	0x50
 1562 04d3 01       		.uleb128 0x1
 1563 04d4 3D       		.byte	0x3d
 1564 04d5 00       		.byte	0
 1565 04d6 1F       		.uleb128 0x1f
 1566 04d7 1C000000 		.4byte	.LVL44
 1567 04db C9030000 		.4byte	0x3c9
 1568 04df 1E       		.uleb128 0x1e
 1569 04e0 01       		.uleb128 0x1
 1570 04e1 50       		.byte	0x50
 1571 04e2 01       		.uleb128 0x1
 1572 04e3 3A       		.byte	0x3a
 1573 04e4 00       		.byte	0
 1574 04e5 00       		.byte	0
 1575 04e6 13       		.uleb128 0x13
 1576 04e7 74030000 		.4byte	.LASF49
 1577 04eb 01       		.byte	0x1
 1578 04ec F904     		.2byte	0x4f9
 1579 04ee 6B000000 		.4byte	0x6b
 1580 04f2 00000000 		.4byte	.LFB23
 1581 04f6 1C000000 		.4byte	.LFE23-.LFB23
 1582 04fa 01       		.uleb128 0x1
 1583 04fb 9C       		.byte	0x9c
 1584 04fc 11050000 		.4byte	0x511
 1585 0500 14       		.uleb128 0x14
 1586 0501 20020000 		.4byte	.LASF31
 1587 0505 01       		.byte	0x1
 1588 0506 FC04     		.2byte	0x4fc
 1589 0508 6B000000 		.4byte	0x6b
 1590 050c 95010000 		.4byte	.LLST12
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 57


 1591 0510 00       		.byte	0
 1592 0511 0E       		.uleb128 0xe
 1593 0512 40030000 		.4byte	.LASF50
 1594 0516 01       		.byte	0x1
 1595 0517 4A05     		.2byte	0x54a
 1596 0519 00000000 		.4byte	.LFB24
 1597 051d 24000000 		.4byte	.LFE24-.LFB24
 1598 0521 01       		.uleb128 0x1
 1599 0522 9C       		.byte	0x9c
 1600 0523 4A050000 		.4byte	0x54a
 1601 0527 14       		.uleb128 0x14
 1602 0528 FC030000 		.4byte	.LASF25
 1603 052c 01       		.byte	0x1
 1604 052d 4C05     		.2byte	0x54c
 1605 052f 6B000000 		.4byte	0x6b
 1606 0533 B3010000 		.4byte	.LLST13
 1607 0537 0B       		.uleb128 0xb
 1608 0538 06000000 		.4byte	.LVL48
 1609 053c DF050000 		.4byte	0x5df
 1610 0540 0C       		.uleb128 0xc
 1611 0541 20000000 		.4byte	.LVL49
 1612 0545 F5050000 		.4byte	0x5f5
 1613 0549 00       		.byte	0
 1614 054a 0E       		.uleb128 0xe
 1615 054b C8020000 		.4byte	.LASF51
 1616 054f 01       		.byte	0x1
 1617 0550 A005     		.2byte	0x5a0
 1618 0552 00000000 		.4byte	.LFB25
 1619 0556 58000000 		.4byte	.LFE25-.LFB25
 1620 055a 01       		.uleb128 0x1
 1621 055b 9C       		.byte	0x9c
 1622 055c 99050000 		.4byte	0x599
 1623 0560 1A       		.uleb128 0x1a
 1624 0561 C8010000 		.4byte	.LASF52
 1625 0565 01       		.byte	0x1
 1626 0566 A005     		.2byte	0x5a0
 1627 0568 6B000000 		.4byte	0x6b
 1628 056c C6010000 		.4byte	.LLST14
 1629 0570 17       		.uleb128 0x17
 1630 0571 30000000 		.4byte	.Ldebug_ranges0+0x30
 1631 0575 14       		.uleb128 0x14
 1632 0576 5F020000 		.4byte	.LASF53
 1633 057a 01       		.byte	0x1
 1634 057b A805     		.2byte	0x5a8
 1635 057d 6B000000 		.4byte	0x6b
 1636 0581 0B020000 		.4byte	.LLST15
 1637 0585 15       		.uleb128 0x15
 1638 0586 69010000 		.4byte	.LASF54
 1639 058a 01       		.byte	0x1
 1640 058b D005     		.2byte	0x5d0
 1641 058d 6B000000 		.4byte	0x6b
 1642 0591 05       		.uleb128 0x5
 1643 0592 03       		.byte	0x3
 1644 0593 01000000 		.4byte	txPeriod.5122
 1645 0597 00       		.byte	0
 1646 0598 00       		.byte	0
 1647 0599 20       		.uleb128 0x20
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 58


 1648 059a 06020000 		.4byte	.LASF63
 1649 059e 01       		.byte	0x1
 1650 059f 2406     		.2byte	0x624
 1651 05a1 01       		.byte	0x1
 1652 05a2 B3050000 		.4byte	0x5b3
 1653 05a6 21       		.uleb128 0x21
 1654 05a7 AD010000 		.4byte	.LASF64
 1655 05ab 01       		.byte	0x1
 1656 05ac 2406     		.2byte	0x624
 1657 05ae 6B000000 		.4byte	0x6b
 1658 05b2 00       		.byte	0
 1659 05b3 10       		.uleb128 0x10
 1660 05b4 99050000 		.4byte	0x599
 1661 05b8 00000000 		.4byte	.LFB26
 1662 05bc 02000000 		.4byte	.LFE26-.LFB26
 1663 05c0 01       		.uleb128 0x1
 1664 05c1 9C       		.byte	0x9c
 1665 05c2 CE050000 		.4byte	0x5ce
 1666 05c6 22       		.uleb128 0x22
 1667 05c7 A6050000 		.4byte	0x5a6
 1668 05cb 01       		.uleb128 0x1
 1669 05cc 50       		.byte	0x50
 1670 05cd 00       		.byte	0
 1671 05ce 23       		.uleb128 0x23
 1672 05cf 2F030000 		.4byte	.LASF65
 1673 05d3 01       		.byte	0x1
 1674 05d4 1B       		.byte	0x1b
 1675 05d5 6B000000 		.4byte	0x6b
 1676 05d9 05       		.uleb128 0x5
 1677 05da 03       		.byte	0x3
 1678 05db 00000000 		.4byte	UART_LOG_initVar
 1679 05df 24       		.uleb128 0x24
 1680 05e0 EF010000 		.4byte	.LASF55
 1681 05e4 EF010000 		.4byte	.LASF55
 1682 05e8 03       		.byte	0x3
 1683 05e9 7D       		.byte	0x7d
 1684 05ea 24       		.uleb128 0x24
 1685 05eb A3030000 		.4byte	.LASF56
 1686 05ef A3030000 		.4byte	.LASF56
 1687 05f3 04       		.byte	0x4
 1688 05f4 27       		.byte	0x27
 1689 05f5 24       		.uleb128 0x24
 1690 05f6 24000000 		.4byte	.LASF57
 1691 05fa 24000000 		.4byte	.LASF57
 1692 05fe 03       		.byte	0x3
 1693 05ff 7E       		.byte	0x7e
 1694 0600 24       		.uleb128 0x24
 1695 0601 00050000 		.4byte	.LASF58
 1696 0605 00050000 		.4byte	.LASF58
 1697 0609 04       		.byte	0x4
 1698 060a 28       		.byte	0x28
 1699 060b 00       		.byte	0
 1700              		.section	.debug_abbrev,"",%progbits
 1701              	.Ldebug_abbrev0:
 1702 0000 01       		.uleb128 0x1
 1703 0001 11       		.uleb128 0x11
 1704 0002 01       		.byte	0x1
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 59


 1705 0003 25       		.uleb128 0x25
 1706 0004 0E       		.uleb128 0xe
 1707 0005 13       		.uleb128 0x13
 1708 0006 0B       		.uleb128 0xb
 1709 0007 03       		.uleb128 0x3
 1710 0008 0E       		.uleb128 0xe
 1711 0009 1B       		.uleb128 0x1b
 1712 000a 0E       		.uleb128 0xe
 1713 000b 55       		.uleb128 0x55
 1714 000c 17       		.uleb128 0x17
 1715 000d 11       		.uleb128 0x11
 1716 000e 01       		.uleb128 0x1
 1717 000f 10       		.uleb128 0x10
 1718 0010 17       		.uleb128 0x17
 1719 0011 00       		.byte	0
 1720 0012 00       		.byte	0
 1721 0013 02       		.uleb128 0x2
 1722 0014 24       		.uleb128 0x24
 1723 0015 00       		.byte	0
 1724 0016 0B       		.uleb128 0xb
 1725 0017 0B       		.uleb128 0xb
 1726 0018 3E       		.uleb128 0x3e
 1727 0019 0B       		.uleb128 0xb
 1728 001a 03       		.uleb128 0x3
 1729 001b 0E       		.uleb128 0xe
 1730 001c 00       		.byte	0
 1731 001d 00       		.byte	0
 1732 001e 03       		.uleb128 0x3
 1733 001f 24       		.uleb128 0x24
 1734 0020 00       		.byte	0
 1735 0021 0B       		.uleb128 0xb
 1736 0022 0B       		.uleb128 0xb
 1737 0023 3E       		.uleb128 0x3e
 1738 0024 0B       		.uleb128 0xb
 1739 0025 03       		.uleb128 0x3
 1740 0026 08       		.uleb128 0x8
 1741 0027 00       		.byte	0
 1742 0028 00       		.byte	0
 1743 0029 04       		.uleb128 0x4
 1744 002a 16       		.uleb128 0x16
 1745 002b 00       		.byte	0
 1746 002c 03       		.uleb128 0x3
 1747 002d 0E       		.uleb128 0xe
 1748 002e 3A       		.uleb128 0x3a
 1749 002f 0B       		.uleb128 0xb
 1750 0030 3B       		.uleb128 0x3b
 1751 0031 05       		.uleb128 0x5
 1752 0032 49       		.uleb128 0x49
 1753 0033 13       		.uleb128 0x13
 1754 0034 00       		.byte	0
 1755 0035 00       		.byte	0
 1756 0036 05       		.uleb128 0x5
 1757 0037 35       		.uleb128 0x35
 1758 0038 00       		.byte	0
 1759 0039 49       		.uleb128 0x49
 1760 003a 13       		.uleb128 0x13
 1761 003b 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 60


 1762 003c 00       		.byte	0
 1763 003d 06       		.uleb128 0x6
 1764 003e 2E       		.uleb128 0x2e
 1765 003f 01       		.byte	0x1
 1766 0040 3F       		.uleb128 0x3f
 1767 0041 19       		.uleb128 0x19
 1768 0042 03       		.uleb128 0x3
 1769 0043 0E       		.uleb128 0xe
 1770 0044 3A       		.uleb128 0x3a
 1771 0045 0B       		.uleb128 0xb
 1772 0046 3B       		.uleb128 0x3b
 1773 0047 05       		.uleb128 0x5
 1774 0048 27       		.uleb128 0x27
 1775 0049 19       		.uleb128 0x19
 1776 004a 49       		.uleb128 0x49
 1777 004b 13       		.uleb128 0x13
 1778 004c 20       		.uleb128 0x20
 1779 004d 0B       		.uleb128 0xb
 1780 004e 01       		.uleb128 0x1
 1781 004f 13       		.uleb128 0x13
 1782 0050 00       		.byte	0
 1783 0051 00       		.byte	0
 1784 0052 07       		.uleb128 0x7
 1785 0053 34       		.uleb128 0x34
 1786 0054 00       		.byte	0
 1787 0055 03       		.uleb128 0x3
 1788 0056 0E       		.uleb128 0xe
 1789 0057 3A       		.uleb128 0x3a
 1790 0058 0B       		.uleb128 0xb
 1791 0059 3B       		.uleb128 0x3b
 1792 005a 05       		.uleb128 0x5
 1793 005b 49       		.uleb128 0x49
 1794 005c 13       		.uleb128 0x13
 1795 005d 00       		.byte	0
 1796 005e 00       		.byte	0
 1797 005f 08       		.uleb128 0x8
 1798 0060 2E       		.uleb128 0x2e
 1799 0061 00       		.byte	0
 1800 0062 3F       		.uleb128 0x3f
 1801 0063 19       		.uleb128 0x19
 1802 0064 03       		.uleb128 0x3
 1803 0065 0E       		.uleb128 0xe
 1804 0066 3A       		.uleb128 0x3a
 1805 0067 0B       		.uleb128 0xb
 1806 0068 3B       		.uleb128 0x3b
 1807 0069 0B       		.uleb128 0xb
 1808 006a 27       		.uleb128 0x27
 1809 006b 19       		.uleb128 0x19
 1810 006c 11       		.uleb128 0x11
 1811 006d 01       		.uleb128 0x1
 1812 006e 12       		.uleb128 0x12
 1813 006f 06       		.uleb128 0x6
 1814 0070 40       		.uleb128 0x40
 1815 0071 18       		.uleb128 0x18
 1816 0072 9742     		.uleb128 0x2117
 1817 0074 19       		.uleb128 0x19
 1818 0075 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 61


 1819 0076 00       		.byte	0
 1820 0077 09       		.uleb128 0x9
 1821 0078 2E       		.uleb128 0x2e
 1822 0079 01       		.byte	0x1
 1823 007a 3F       		.uleb128 0x3f
 1824 007b 19       		.uleb128 0x19
 1825 007c 03       		.uleb128 0x3
 1826 007d 0E       		.uleb128 0xe
 1827 007e 3A       		.uleb128 0x3a
 1828 007f 0B       		.uleb128 0xb
 1829 0080 3B       		.uleb128 0x3b
 1830 0081 0B       		.uleb128 0xb
 1831 0082 27       		.uleb128 0x27
 1832 0083 19       		.uleb128 0x19
 1833 0084 11       		.uleb128 0x11
 1834 0085 01       		.uleb128 0x1
 1835 0086 12       		.uleb128 0x12
 1836 0087 06       		.uleb128 0x6
 1837 0088 40       		.uleb128 0x40
 1838 0089 18       		.uleb128 0x18
 1839 008a 9742     		.uleb128 0x2117
 1840 008c 19       		.uleb128 0x19
 1841 008d 01       		.uleb128 0x1
 1842 008e 13       		.uleb128 0x13
 1843 008f 00       		.byte	0
 1844 0090 00       		.byte	0
 1845 0091 0A       		.uleb128 0xa
 1846 0092 34       		.uleb128 0x34
 1847 0093 00       		.byte	0
 1848 0094 03       		.uleb128 0x3
 1849 0095 0E       		.uleb128 0xe
 1850 0096 3A       		.uleb128 0x3a
 1851 0097 0B       		.uleb128 0xb
 1852 0098 3B       		.uleb128 0x3b
 1853 0099 0B       		.uleb128 0xb
 1854 009a 49       		.uleb128 0x49
 1855 009b 13       		.uleb128 0x13
 1856 009c 02       		.uleb128 0x2
 1857 009d 17       		.uleb128 0x17
 1858 009e 00       		.byte	0
 1859 009f 00       		.byte	0
 1860 00a0 0B       		.uleb128 0xb
 1861 00a1 898201   		.uleb128 0x4109
 1862 00a4 00       		.byte	0
 1863 00a5 11       		.uleb128 0x11
 1864 00a6 01       		.uleb128 0x1
 1865 00a7 31       		.uleb128 0x31
 1866 00a8 13       		.uleb128 0x13
 1867 00a9 00       		.byte	0
 1868 00aa 00       		.byte	0
 1869 00ab 0C       		.uleb128 0xc
 1870 00ac 898201   		.uleb128 0x4109
 1871 00af 00       		.byte	0
 1872 00b0 11       		.uleb128 0x11
 1873 00b1 01       		.uleb128 0x1
 1874 00b2 9542     		.uleb128 0x2115
 1875 00b4 19       		.uleb128 0x19
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 62


 1876 00b5 31       		.uleb128 0x31
 1877 00b6 13       		.uleb128 0x13
 1878 00b7 00       		.byte	0
 1879 00b8 00       		.byte	0
 1880 00b9 0D       		.uleb128 0xd
 1881 00ba 2E       		.uleb128 0x2e
 1882 00bb 00       		.byte	0
 1883 00bc 3F       		.uleb128 0x3f
 1884 00bd 19       		.uleb128 0x19
 1885 00be 03       		.uleb128 0x3
 1886 00bf 0E       		.uleb128 0xe
 1887 00c0 3A       		.uleb128 0x3a
 1888 00c1 0B       		.uleb128 0xb
 1889 00c2 3B       		.uleb128 0x3b
 1890 00c3 05       		.uleb128 0x5
 1891 00c4 27       		.uleb128 0x27
 1892 00c5 19       		.uleb128 0x19
 1893 00c6 49       		.uleb128 0x49
 1894 00c7 13       		.uleb128 0x13
 1895 00c8 11       		.uleb128 0x11
 1896 00c9 01       		.uleb128 0x1
 1897 00ca 12       		.uleb128 0x12
 1898 00cb 06       		.uleb128 0x6
 1899 00cc 40       		.uleb128 0x40
 1900 00cd 18       		.uleb128 0x18
 1901 00ce 9742     		.uleb128 0x2117
 1902 00d0 19       		.uleb128 0x19
 1903 00d1 00       		.byte	0
 1904 00d2 00       		.byte	0
 1905 00d3 0E       		.uleb128 0xe
 1906 00d4 2E       		.uleb128 0x2e
 1907 00d5 01       		.byte	0x1
 1908 00d6 3F       		.uleb128 0x3f
 1909 00d7 19       		.uleb128 0x19
 1910 00d8 03       		.uleb128 0x3
 1911 00d9 0E       		.uleb128 0xe
 1912 00da 3A       		.uleb128 0x3a
 1913 00db 0B       		.uleb128 0xb
 1914 00dc 3B       		.uleb128 0x3b
 1915 00dd 05       		.uleb128 0x5
 1916 00de 27       		.uleb128 0x27
 1917 00df 19       		.uleb128 0x19
 1918 00e0 11       		.uleb128 0x11
 1919 00e1 01       		.uleb128 0x1
 1920 00e2 12       		.uleb128 0x12
 1921 00e3 06       		.uleb128 0x6
 1922 00e4 40       		.uleb128 0x40
 1923 00e5 18       		.uleb128 0x18
 1924 00e6 9742     		.uleb128 0x2117
 1925 00e8 19       		.uleb128 0x19
 1926 00e9 01       		.uleb128 0x1
 1927 00ea 13       		.uleb128 0x13
 1928 00eb 00       		.byte	0
 1929 00ec 00       		.byte	0
 1930 00ed 0F       		.uleb128 0xf
 1931 00ee 05       		.uleb128 0x5
 1932 00ef 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 63


 1933 00f0 03       		.uleb128 0x3
 1934 00f1 0E       		.uleb128 0xe
 1935 00f2 3A       		.uleb128 0x3a
 1936 00f3 0B       		.uleb128 0xb
 1937 00f4 3B       		.uleb128 0x3b
 1938 00f5 05       		.uleb128 0x5
 1939 00f6 49       		.uleb128 0x49
 1940 00f7 13       		.uleb128 0x13
 1941 00f8 02       		.uleb128 0x2
 1942 00f9 18       		.uleb128 0x18
 1943 00fa 00       		.byte	0
 1944 00fb 00       		.byte	0
 1945 00fc 10       		.uleb128 0x10
 1946 00fd 2E       		.uleb128 0x2e
 1947 00fe 01       		.byte	0x1
 1948 00ff 31       		.uleb128 0x31
 1949 0100 13       		.uleb128 0x13
 1950 0101 11       		.uleb128 0x11
 1951 0102 01       		.uleb128 0x1
 1952 0103 12       		.uleb128 0x12
 1953 0104 06       		.uleb128 0x6
 1954 0105 40       		.uleb128 0x40
 1955 0106 18       		.uleb128 0x18
 1956 0107 9742     		.uleb128 0x2117
 1957 0109 19       		.uleb128 0x19
 1958 010a 01       		.uleb128 0x1
 1959 010b 13       		.uleb128 0x13
 1960 010c 00       		.byte	0
 1961 010d 00       		.byte	0
 1962 010e 11       		.uleb128 0x11
 1963 010f 34       		.uleb128 0x34
 1964 0110 00       		.byte	0
 1965 0111 31       		.uleb128 0x31
 1966 0112 13       		.uleb128 0x13
 1967 0113 02       		.uleb128 0x2
 1968 0114 18       		.uleb128 0x18
 1969 0115 00       		.byte	0
 1970 0116 00       		.byte	0
 1971 0117 12       		.uleb128 0x12
 1972 0118 34       		.uleb128 0x34
 1973 0119 00       		.byte	0
 1974 011a 31       		.uleb128 0x31
 1975 011b 13       		.uleb128 0x13
 1976 011c 02       		.uleb128 0x2
 1977 011d 17       		.uleb128 0x17
 1978 011e 00       		.byte	0
 1979 011f 00       		.byte	0
 1980 0120 13       		.uleb128 0x13
 1981 0121 2E       		.uleb128 0x2e
 1982 0122 01       		.byte	0x1
 1983 0123 3F       		.uleb128 0x3f
 1984 0124 19       		.uleb128 0x19
 1985 0125 03       		.uleb128 0x3
 1986 0126 0E       		.uleb128 0xe
 1987 0127 3A       		.uleb128 0x3a
 1988 0128 0B       		.uleb128 0xb
 1989 0129 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 64


 1990 012a 05       		.uleb128 0x5
 1991 012b 27       		.uleb128 0x27
 1992 012c 19       		.uleb128 0x19
 1993 012d 49       		.uleb128 0x49
 1994 012e 13       		.uleb128 0x13
 1995 012f 11       		.uleb128 0x11
 1996 0130 01       		.uleb128 0x1
 1997 0131 12       		.uleb128 0x12
 1998 0132 06       		.uleb128 0x6
 1999 0133 40       		.uleb128 0x40
 2000 0134 18       		.uleb128 0x18
 2001 0135 9742     		.uleb128 0x2117
 2002 0137 19       		.uleb128 0x19
 2003 0138 01       		.uleb128 0x1
 2004 0139 13       		.uleb128 0x13
 2005 013a 00       		.byte	0
 2006 013b 00       		.byte	0
 2007 013c 14       		.uleb128 0x14
 2008 013d 34       		.uleb128 0x34
 2009 013e 00       		.byte	0
 2010 013f 03       		.uleb128 0x3
 2011 0140 0E       		.uleb128 0xe
 2012 0141 3A       		.uleb128 0x3a
 2013 0142 0B       		.uleb128 0xb
 2014 0143 3B       		.uleb128 0x3b
 2015 0144 05       		.uleb128 0x5
 2016 0145 49       		.uleb128 0x49
 2017 0146 13       		.uleb128 0x13
 2018 0147 02       		.uleb128 0x2
 2019 0148 17       		.uleb128 0x17
 2020 0149 00       		.byte	0
 2021 014a 00       		.byte	0
 2022 014b 15       		.uleb128 0x15
 2023 014c 34       		.uleb128 0x34
 2024 014d 00       		.byte	0
 2025 014e 03       		.uleb128 0x3
 2026 014f 0E       		.uleb128 0xe
 2027 0150 3A       		.uleb128 0x3a
 2028 0151 0B       		.uleb128 0xb
 2029 0152 3B       		.uleb128 0x3b
 2030 0153 05       		.uleb128 0x5
 2031 0154 49       		.uleb128 0x49
 2032 0155 13       		.uleb128 0x13
 2033 0156 02       		.uleb128 0x2
 2034 0157 18       		.uleb128 0x18
 2035 0158 00       		.byte	0
 2036 0159 00       		.byte	0
 2037 015a 16       		.uleb128 0x16
 2038 015b 1D       		.uleb128 0x1d
 2039 015c 01       		.byte	0x1
 2040 015d 31       		.uleb128 0x31
 2041 015e 13       		.uleb128 0x13
 2042 015f 52       		.uleb128 0x52
 2043 0160 01       		.uleb128 0x1
 2044 0161 55       		.uleb128 0x55
 2045 0162 17       		.uleb128 0x17
 2046 0163 58       		.uleb128 0x58
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 65


 2047 0164 0B       		.uleb128 0xb
 2048 0165 59       		.uleb128 0x59
 2049 0166 05       		.uleb128 0x5
 2050 0167 01       		.uleb128 0x1
 2051 0168 13       		.uleb128 0x13
 2052 0169 00       		.byte	0
 2053 016a 00       		.byte	0
 2054 016b 17       		.uleb128 0x17
 2055 016c 0B       		.uleb128 0xb
 2056 016d 01       		.byte	0x1
 2057 016e 55       		.uleb128 0x55
 2058 016f 17       		.uleb128 0x17
 2059 0170 00       		.byte	0
 2060 0171 00       		.byte	0
 2061 0172 18       		.uleb128 0x18
 2062 0173 34       		.uleb128 0x34
 2063 0174 00       		.byte	0
 2064 0175 31       		.uleb128 0x31
 2065 0176 13       		.uleb128 0x13
 2066 0177 00       		.byte	0
 2067 0178 00       		.byte	0
 2068 0179 19       		.uleb128 0x19
 2069 017a 1D       		.uleb128 0x1d
 2070 017b 01       		.byte	0x1
 2071 017c 31       		.uleb128 0x31
 2072 017d 13       		.uleb128 0x13
 2073 017e 52       		.uleb128 0x52
 2074 017f 01       		.uleb128 0x1
 2075 0180 55       		.uleb128 0x55
 2076 0181 17       		.uleb128 0x17
 2077 0182 58       		.uleb128 0x58
 2078 0183 0B       		.uleb128 0xb
 2079 0184 59       		.uleb128 0x59
 2080 0185 05       		.uleb128 0x5
 2081 0186 00       		.byte	0
 2082 0187 00       		.byte	0
 2083 0188 1A       		.uleb128 0x1a
 2084 0189 05       		.uleb128 0x5
 2085 018a 00       		.byte	0
 2086 018b 03       		.uleb128 0x3
 2087 018c 0E       		.uleb128 0xe
 2088 018d 3A       		.uleb128 0x3a
 2089 018e 0B       		.uleb128 0xb
 2090 018f 3B       		.uleb128 0x3b
 2091 0190 05       		.uleb128 0x5
 2092 0191 49       		.uleb128 0x49
 2093 0192 13       		.uleb128 0x13
 2094 0193 02       		.uleb128 0x2
 2095 0194 17       		.uleb128 0x17
 2096 0195 00       		.byte	0
 2097 0196 00       		.byte	0
 2098 0197 1B       		.uleb128 0x1b
 2099 0198 0F       		.uleb128 0xf
 2100 0199 00       		.byte	0
 2101 019a 0B       		.uleb128 0xb
 2102 019b 0B       		.uleb128 0xb
 2103 019c 49       		.uleb128 0x49
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 66


 2104 019d 13       		.uleb128 0x13
 2105 019e 00       		.byte	0
 2106 019f 00       		.byte	0
 2107 01a0 1C       		.uleb128 0x1c
 2108 01a1 26       		.uleb128 0x26
 2109 01a2 00       		.byte	0
 2110 01a3 49       		.uleb128 0x49
 2111 01a4 13       		.uleb128 0x13
 2112 01a5 00       		.byte	0
 2113 01a6 00       		.byte	0
 2114 01a7 1D       		.uleb128 0x1d
 2115 01a8 898201   		.uleb128 0x4109
 2116 01ab 01       		.byte	0x1
 2117 01ac 11       		.uleb128 0x11
 2118 01ad 01       		.uleb128 0x1
 2119 01ae 31       		.uleb128 0x31
 2120 01af 13       		.uleb128 0x13
 2121 01b0 01       		.uleb128 0x1
 2122 01b1 13       		.uleb128 0x13
 2123 01b2 00       		.byte	0
 2124 01b3 00       		.byte	0
 2125 01b4 1E       		.uleb128 0x1e
 2126 01b5 8A8201   		.uleb128 0x410a
 2127 01b8 00       		.byte	0
 2128 01b9 02       		.uleb128 0x2
 2129 01ba 18       		.uleb128 0x18
 2130 01bb 9142     		.uleb128 0x2111
 2131 01bd 18       		.uleb128 0x18
 2132 01be 00       		.byte	0
 2133 01bf 00       		.byte	0
 2134 01c0 1F       		.uleb128 0x1f
 2135 01c1 898201   		.uleb128 0x4109
 2136 01c4 01       		.byte	0x1
 2137 01c5 11       		.uleb128 0x11
 2138 01c6 01       		.uleb128 0x1
 2139 01c7 9542     		.uleb128 0x2115
 2140 01c9 19       		.uleb128 0x19
 2141 01ca 31       		.uleb128 0x31
 2142 01cb 13       		.uleb128 0x13
 2143 01cc 00       		.byte	0
 2144 01cd 00       		.byte	0
 2145 01ce 20       		.uleb128 0x20
 2146 01cf 2E       		.uleb128 0x2e
 2147 01d0 01       		.byte	0x1
 2148 01d1 3F       		.uleb128 0x3f
 2149 01d2 19       		.uleb128 0x19
 2150 01d3 03       		.uleb128 0x3
 2151 01d4 0E       		.uleb128 0xe
 2152 01d5 3A       		.uleb128 0x3a
 2153 01d6 0B       		.uleb128 0xb
 2154 01d7 3B       		.uleb128 0x3b
 2155 01d8 05       		.uleb128 0x5
 2156 01d9 27       		.uleb128 0x27
 2157 01da 19       		.uleb128 0x19
 2158 01db 20       		.uleb128 0x20
 2159 01dc 0B       		.uleb128 0xb
 2160 01dd 01       		.uleb128 0x1
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 67


 2161 01de 13       		.uleb128 0x13
 2162 01df 00       		.byte	0
 2163 01e0 00       		.byte	0
 2164 01e1 21       		.uleb128 0x21
 2165 01e2 05       		.uleb128 0x5
 2166 01e3 00       		.byte	0
 2167 01e4 03       		.uleb128 0x3
 2168 01e5 0E       		.uleb128 0xe
 2169 01e6 3A       		.uleb128 0x3a
 2170 01e7 0B       		.uleb128 0xb
 2171 01e8 3B       		.uleb128 0x3b
 2172 01e9 05       		.uleb128 0x5
 2173 01ea 49       		.uleb128 0x49
 2174 01eb 13       		.uleb128 0x13
 2175 01ec 00       		.byte	0
 2176 01ed 00       		.byte	0
 2177 01ee 22       		.uleb128 0x22
 2178 01ef 05       		.uleb128 0x5
 2179 01f0 00       		.byte	0
 2180 01f1 31       		.uleb128 0x31
 2181 01f2 13       		.uleb128 0x13
 2182 01f3 02       		.uleb128 0x2
 2183 01f4 18       		.uleb128 0x18
 2184 01f5 00       		.byte	0
 2185 01f6 00       		.byte	0
 2186 01f7 23       		.uleb128 0x23
 2187 01f8 34       		.uleb128 0x34
 2188 01f9 00       		.byte	0
 2189 01fa 03       		.uleb128 0x3
 2190 01fb 0E       		.uleb128 0xe
 2191 01fc 3A       		.uleb128 0x3a
 2192 01fd 0B       		.uleb128 0xb
 2193 01fe 3B       		.uleb128 0x3b
 2194 01ff 0B       		.uleb128 0xb
 2195 0200 49       		.uleb128 0x49
 2196 0201 13       		.uleb128 0x13
 2197 0202 3F       		.uleb128 0x3f
 2198 0203 19       		.uleb128 0x19
 2199 0204 02       		.uleb128 0x2
 2200 0205 18       		.uleb128 0x18
 2201 0206 00       		.byte	0
 2202 0207 00       		.byte	0
 2203 0208 24       		.uleb128 0x24
 2204 0209 2E       		.uleb128 0x2e
 2205 020a 00       		.byte	0
 2206 020b 3F       		.uleb128 0x3f
 2207 020c 19       		.uleb128 0x19
 2208 020d 3C       		.uleb128 0x3c
 2209 020e 19       		.uleb128 0x19
 2210 020f 6E       		.uleb128 0x6e
 2211 0210 0E       		.uleb128 0xe
 2212 0211 03       		.uleb128 0x3
 2213 0212 0E       		.uleb128 0xe
 2214 0213 3A       		.uleb128 0x3a
 2215 0214 0B       		.uleb128 0xb
 2216 0215 3B       		.uleb128 0x3b
 2217 0216 0B       		.uleb128 0xb
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 68


 2218 0217 00       		.byte	0
 2219 0218 00       		.byte	0
 2220 0219 00       		.byte	0
 2221              		.section	.debug_loc,"",%progbits
 2222              	.Ldebug_loc0:
 2223              	.LLST0:
 2224 0000 08000000 		.4byte	.LVL1
 2225 0004 32000000 		.4byte	.LVL3
 2226 0008 0100     		.2byte	0x1
 2227 000a 54       		.byte	0x54
 2228 000b 00000000 		.4byte	0
 2229 000f 00000000 		.4byte	0
 2230              	.LLST1:
 2231 0013 08000000 		.4byte	.LVL8
 2232 0017 34000000 		.4byte	.LVL10
 2233 001b 0100     		.2byte	0x1
 2234 001d 54       		.byte	0x54
 2235 001e 00000000 		.4byte	0
 2236 0022 00000000 		.4byte	0
 2237              	.LLST2:
 2238 0026 04000000 		.4byte	.LVL14
 2239 002a 08000000 		.4byte	.LVL15
 2240 002e 0600     		.2byte	0x6
 2241 0030 70       		.byte	0x70
 2242 0031 00       		.sleb128 0
 2243 0032 08       		.byte	0x8
 2244 0033 7F       		.byte	0x7f
 2245 0034 1A       		.byte	0x1a
 2246 0035 9F       		.byte	0x9f
 2247 0036 00000000 		.4byte	0
 2248 003a 00000000 		.4byte	0
 2249              	.LLST3:
 2250 003e 00000000 		.4byte	.LVL16
 2251 0042 18000000 		.4byte	.LVL18
 2252 0046 0200     		.2byte	0x2
 2253 0048 30       		.byte	0x30
 2254 0049 9F       		.byte	0x9f
 2255 004a 18000000 		.4byte	.LVL18
 2256 004e 28000000 		.4byte	.LFE9
 2257 0052 0100     		.2byte	0x1
 2258 0054 50       		.byte	0x50
 2259 0055 00000000 		.4byte	0
 2260 0059 00000000 		.4byte	0
 2261              	.LLST4:
 2262 005d 04000000 		.4byte	.LVL20
 2263 0061 08000000 		.4byte	.LVL21
 2264 0065 0A00     		.2byte	0xa
 2265 0067 70       		.byte	0x70
 2266 0068 00       		.sleb128 0
 2267 0069 08       		.byte	0x8
 2268 006a 20       		.byte	0x20
 2269 006b 1A       		.byte	0x1a
 2270 006c 48       		.byte	0x48
 2271 006d 24       		.byte	0x24
 2272 006e 30       		.byte	0x30
 2273 006f 2E       		.byte	0x2e
 2274 0070 9F       		.byte	0x9f
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 69


 2275 0071 00000000 		.4byte	0
 2276 0075 00000000 		.4byte	0
 2277              	.LLST5:
 2278 0079 06000000 		.4byte	.LVL22
 2279 007d 1F000000 		.4byte	.LVL23-1
 2280 0081 0100     		.2byte	0x1
 2281 0083 50       		.byte	0x50
 2282 0084 00000000 		.4byte	0
 2283 0088 00000000 		.4byte	0
 2284              	.LLST6:
 2285 008c 00000000 		.4byte	.LVL29
 2286 0090 0C000000 		.4byte	.LVL30
 2287 0094 0100     		.2byte	0x1
 2288 0096 50       		.byte	0x50
 2289 0097 0C000000 		.4byte	.LVL30
 2290 009b 1C000000 		.4byte	.LVL34
 2291 009f 0100     		.2byte	0x1
 2292 00a1 54       		.byte	0x54
 2293 00a2 1C000000 		.4byte	.LVL34
 2294 00a6 20000000 		.4byte	.LFE20
 2295 00aa 0400     		.2byte	0x4
 2296 00ac F3       		.byte	0xf3
 2297 00ad 01       		.uleb128 0x1
 2298 00ae 50       		.byte	0x50
 2299 00af 9F       		.byte	0x9f
 2300 00b0 00000000 		.4byte	0
 2301 00b4 00000000 		.4byte	0
 2302              	.LLST7:
 2303 00b8 00000000 		.4byte	.LVL29
 2304 00bc 0C000000 		.4byte	.LVL30
 2305 00c0 0200     		.2byte	0x2
 2306 00c2 30       		.byte	0x30
 2307 00c3 9F       		.byte	0x9f
 2308 00c4 0C000000 		.4byte	.LVL30
 2309 00c8 0E000000 		.4byte	.LVL31
 2310 00cc 0100     		.2byte	0x1
 2311 00ce 51       		.byte	0x51
 2312 00cf 0E000000 		.4byte	.LVL31
 2313 00d3 17000000 		.4byte	.LVL32-1
 2314 00d7 0100     		.2byte	0x1
 2315 00d9 53       		.byte	0x53
 2316 00da 18000000 		.4byte	.LVL32
 2317 00de 1A000000 		.4byte	.LVL33
 2318 00e2 0100     		.2byte	0x1
 2319 00e4 51       		.byte	0x51
 2320 00e5 00000000 		.4byte	0
 2321 00e9 00000000 		.4byte	0
 2322              	.LLST8:
 2323 00ed 00000000 		.4byte	.LVL35
 2324 00f1 0E000000 		.4byte	.LVL37
 2325 00f5 0100     		.2byte	0x1
 2326 00f7 50       		.byte	0x50
 2327 00f8 0E000000 		.4byte	.LVL37
 2328 00fc 24000000 		.4byte	.LFE21
 2329 0100 0400     		.2byte	0x4
 2330 0102 F3       		.byte	0xf3
 2331 0103 01       		.uleb128 0x1
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 70


 2332 0104 50       		.byte	0x50
 2333 0105 9F       		.byte	0x9f
 2334 0106 00000000 		.4byte	0
 2335 010a 00000000 		.4byte	0
 2336              	.LLST9:
 2337 010e 00000000 		.4byte	.LVL35
 2338 0112 0A000000 		.4byte	.LVL36
 2339 0116 0100     		.2byte	0x1
 2340 0118 51       		.byte	0x51
 2341 0119 0A000000 		.4byte	.LVL36
 2342 011d 24000000 		.4byte	.LFE21
 2343 0121 0400     		.2byte	0x4
 2344 0123 F3       		.byte	0xf3
 2345 0124 01       		.uleb128 0x1
 2346 0125 51       		.byte	0x51
 2347 0126 9F       		.byte	0x9f
 2348 0127 00000000 		.4byte	0
 2349 012b 00000000 		.4byte	0
 2350              	.LLST10:
 2351 012f 00000000 		.4byte	.LVL35
 2352 0133 0E000000 		.4byte	.LVL37
 2353 0137 0200     		.2byte	0x2
 2354 0139 30       		.byte	0x30
 2355 013a 9F       		.byte	0x9f
 2356 013b 0E000000 		.4byte	.LVL37
 2357 013f 16000000 		.4byte	.LVL38
 2358 0143 0900     		.2byte	0x9
 2359 0145 74       		.byte	0x74
 2360 0146 00       		.sleb128 0
 2361 0147 F3       		.byte	0xf3
 2362 0148 01       		.uleb128 0x1
 2363 0149 50       		.byte	0x50
 2364 014a 31       		.byte	0x31
 2365 014b 1C       		.byte	0x1c
 2366 014c 1C       		.byte	0x1c
 2367 014d 9F       		.byte	0x9f
 2368 014e 1A000000 		.4byte	.LVL39
 2369 0152 1C000000 		.4byte	.LVL40
 2370 0156 0900     		.2byte	0x9
 2371 0158 74       		.byte	0x74
 2372 0159 00       		.sleb128 0
 2373 015a F3       		.byte	0xf3
 2374 015b 01       		.uleb128 0x1
 2375 015c 50       		.byte	0x50
 2376 015d 31       		.byte	0x31
 2377 015e 1C       		.byte	0x1c
 2378 015f 1C       		.byte	0x1c
 2379 0160 9F       		.byte	0x9f
 2380 0161 00000000 		.4byte	0
 2381 0165 00000000 		.4byte	0
 2382              	.LLST11:
 2383 0169 00000000 		.4byte	.LVL41
 2384 016d 0B000000 		.4byte	.LVL42-1
 2385 0171 0100     		.2byte	0x1
 2386 0173 50       		.byte	0x50
 2387 0174 0B000000 		.4byte	.LVL42-1
 2388 0178 1C000000 		.4byte	.LVL44
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 71


 2389 017c 0400     		.2byte	0x4
 2390 017e F3       		.byte	0xf3
 2391 017f 01       		.uleb128 0x1
 2392 0180 50       		.byte	0x50
 2393 0181 9F       		.byte	0x9f
 2394 0182 1C000000 		.4byte	.LVL44
 2395 0186 24000000 		.4byte	.LFE22
 2396 018a 0100     		.2byte	0x1
 2397 018c 50       		.byte	0x50
 2398 018d 00000000 		.4byte	0
 2399 0191 00000000 		.4byte	0
 2400              	.LLST12:
 2401 0195 06000000 		.4byte	.LVL45
 2402 0199 0E000000 		.4byte	.LVL46
 2403 019d 0100     		.2byte	0x1
 2404 019f 50       		.byte	0x50
 2405 01a0 14000000 		.4byte	.LVL47
 2406 01a4 1C000000 		.4byte	.LFE23
 2407 01a8 0100     		.2byte	0x1
 2408 01aa 50       		.byte	0x50
 2409 01ab 00000000 		.4byte	0
 2410 01af 00000000 		.4byte	0
 2411              	.LLST13:
 2412 01b3 06000000 		.4byte	.LVL48
 2413 01b7 1F000000 		.4byte	.LVL49-1
 2414 01bb 0100     		.2byte	0x1
 2415 01bd 50       		.byte	0x50
 2416 01be 00000000 		.4byte	0
 2417 01c2 00000000 		.4byte	0
 2418              	.LLST14:
 2419 01c6 00000000 		.4byte	.LVL50
 2420 01ca 2E000000 		.4byte	.LVL53
 2421 01ce 0100     		.2byte	0x1
 2422 01d0 50       		.byte	0x50
 2423 01d1 2E000000 		.4byte	.LVL53
 2424 01d5 34000000 		.4byte	.LVL54
 2425 01d9 0400     		.2byte	0x4
 2426 01db F3       		.byte	0xf3
 2427 01dc 01       		.uleb128 0x1
 2428 01dd 50       		.byte	0x50
 2429 01de 9F       		.byte	0x9f
 2430 01df 34000000 		.4byte	.LVL54
 2431 01e3 3E000000 		.4byte	.LVL57
 2432 01e7 0100     		.2byte	0x1
 2433 01e9 50       		.byte	0x50
 2434 01ea 3E000000 		.4byte	.LVL57
 2435 01ee 46000000 		.4byte	.LVL58
 2436 01f2 0400     		.2byte	0x4
 2437 01f4 F3       		.byte	0xf3
 2438 01f5 01       		.uleb128 0x1
 2439 01f6 50       		.byte	0x50
 2440 01f7 9F       		.byte	0x9f
 2441 01f8 46000000 		.4byte	.LVL58
 2442 01fc 58000000 		.4byte	.LFE25
 2443 0200 0100     		.2byte	0x1
 2444 0202 50       		.byte	0x50
 2445 0203 00000000 		.4byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 72


 2446 0207 00000000 		.4byte	0
 2447              	.LLST15:
 2448 020b 20000000 		.4byte	.LVL51
 2449 020f 22000000 		.4byte	.LVL52
 2450 0213 0100     		.2byte	0x1
 2451 0215 52       		.byte	0x52
 2452 0216 38000000 		.4byte	.LVL55
 2453 021a 3A000000 		.4byte	.LVL56
 2454 021e 0100     		.2byte	0x1
 2455 0220 52       		.byte	0x52
 2456 0221 00000000 		.4byte	0
 2457 0225 00000000 		.4byte	0
 2458              		.section	.debug_aranges,"",%progbits
 2459 0000 DC000000 		.4byte	0xdc
 2460 0004 0200     		.2byte	0x2
 2461 0006 00000000 		.4byte	.Ldebug_info0
 2462 000a 04       		.byte	0x4
 2463 000b 00       		.byte	0
 2464 000c 0000     		.2byte	0
 2465 000e 0000     		.2byte	0
 2466 0010 00000000 		.4byte	.LFB1
 2467 0014 28000000 		.4byte	.LFE1-.LFB1
 2468 0018 00000000 		.4byte	.LFB2
 2469 001c 3C000000 		.4byte	.LFE2-.LFB2
 2470 0020 00000000 		.4byte	.LFB0
 2471 0024 1C000000 		.4byte	.LFE0-.LFB0
 2472 0028 00000000 		.4byte	.LFB3
 2473 002c 40000000 		.4byte	.LFE3-.LFB3
 2474 0030 00000000 		.4byte	.LFB4
 2475 0034 04000000 		.4byte	.LFE4-.LFB4
 2476 0038 00000000 		.4byte	.LFB6
 2477 003c 0C000000 		.4byte	.LFE6-.LFB6
 2478 0040 00000000 		.4byte	.LFB7
 2479 0044 0C000000 		.4byte	.LFE7-.LFB7
 2480 0048 00000000 		.4byte	.LFB8
 2481 004c 10000000 		.4byte	.LFE8-.LFB8
 2482 0050 00000000 		.4byte	.LFB9
 2483 0054 28000000 		.4byte	.LFE9-.LFB9
 2484 0058 00000000 		.4byte	.LFB10
 2485 005c 1C000000 		.4byte	.LFE10-.LFB10
 2486 0060 00000000 		.4byte	.LFB11
 2487 0064 10000000 		.4byte	.LFE11-.LFB11
 2488 0068 00000000 		.4byte	.LFB12
 2489 006c 24000000 		.4byte	.LFE12-.LFB12
 2490 0070 00000000 		.4byte	.LFB14
 2491 0074 0C000000 		.4byte	.LFE14-.LFB14
 2492 0078 00000000 		.4byte	.LFB15
 2493 007c 0C000000 		.4byte	.LFE15-.LFB15
 2494 0080 00000000 		.4byte	.LFB16
 2495 0084 0C000000 		.4byte	.LFE16-.LFB16
 2496 0088 00000000 		.4byte	.LFB17
 2497 008c 14000000 		.4byte	.LFE17-.LFB17
 2498 0090 00000000 		.4byte	.LFB18
 2499 0094 0C000000 		.4byte	.LFE18-.LFB18
 2500 0098 00000000 		.4byte	.LFB19
 2501 009c 18000000 		.4byte	.LFE19-.LFB19
 2502 00a0 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 73


 2503 00a4 20000000 		.4byte	.LFE20-.LFB20
 2504 00a8 00000000 		.4byte	.LFB21
 2505 00ac 24000000 		.4byte	.LFE21-.LFB21
 2506 00b0 00000000 		.4byte	.LFB22
 2507 00b4 24000000 		.4byte	.LFE22-.LFB22
 2508 00b8 00000000 		.4byte	.LFB23
 2509 00bc 1C000000 		.4byte	.LFE23-.LFB23
 2510 00c0 00000000 		.4byte	.LFB24
 2511 00c4 24000000 		.4byte	.LFE24-.LFB24
 2512 00c8 00000000 		.4byte	.LFB25
 2513 00cc 58000000 		.4byte	.LFE25-.LFB25
 2514 00d0 00000000 		.4byte	.LFB26
 2515 00d4 02000000 		.4byte	.LFE26-.LFB26
 2516 00d8 00000000 		.4byte	0
 2517 00dc 00000000 		.4byte	0
 2518              		.section	.debug_ranges,"",%progbits
 2519              	.Ldebug_ranges0:
 2520 0000 00000000 		.4byte	.LBB6
 2521 0004 02000000 		.4byte	.LBE6
 2522 0008 04000000 		.4byte	.LBB12
 2523 000c 06000000 		.4byte	.LBE12
 2524 0010 00000000 		.4byte	0
 2525 0014 00000000 		.4byte	0
 2526 0018 02000000 		.4byte	.LBB9
 2527 001c 04000000 		.4byte	.LBE9
 2528 0020 06000000 		.4byte	.LBB13
 2529 0024 08000000 		.4byte	.LBE13
 2530 0028 00000000 		.4byte	0
 2531 002c 00000000 		.4byte	0
 2532 0030 06000000 		.4byte	.LBB14
 2533 0034 44000000 		.4byte	.LBE14
 2534 0038 46000000 		.4byte	.LBB15
 2535 003c 58000000 		.4byte	.LBE15
 2536 0040 00000000 		.4byte	0
 2537 0044 00000000 		.4byte	0
 2538 0048 00000000 		.4byte	.LFB1
 2539 004c 28000000 		.4byte	.LFE1
 2540 0050 00000000 		.4byte	.LFB2
 2541 0054 3C000000 		.4byte	.LFE2
 2542 0058 00000000 		.4byte	.LFB0
 2543 005c 1C000000 		.4byte	.LFE0
 2544 0060 00000000 		.4byte	.LFB3
 2545 0064 40000000 		.4byte	.LFE3
 2546 0068 00000000 		.4byte	.LFB4
 2547 006c 04000000 		.4byte	.LFE4
 2548 0070 00000000 		.4byte	.LFB6
 2549 0074 0C000000 		.4byte	.LFE6
 2550 0078 00000000 		.4byte	.LFB7
 2551 007c 0C000000 		.4byte	.LFE7
 2552 0080 00000000 		.4byte	.LFB8
 2553 0084 10000000 		.4byte	.LFE8
 2554 0088 00000000 		.4byte	.LFB9
 2555 008c 28000000 		.4byte	.LFE9
 2556 0090 00000000 		.4byte	.LFB10
 2557 0094 1C000000 		.4byte	.LFE10
 2558 0098 00000000 		.4byte	.LFB11
 2559 009c 10000000 		.4byte	.LFE11
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 74


 2560 00a0 00000000 		.4byte	.LFB12
 2561 00a4 24000000 		.4byte	.LFE12
 2562 00a8 00000000 		.4byte	.LFB14
 2563 00ac 0C000000 		.4byte	.LFE14
 2564 00b0 00000000 		.4byte	.LFB15
 2565 00b4 0C000000 		.4byte	.LFE15
 2566 00b8 00000000 		.4byte	.LFB16
 2567 00bc 0C000000 		.4byte	.LFE16
 2568 00c0 00000000 		.4byte	.LFB17
 2569 00c4 14000000 		.4byte	.LFE17
 2570 00c8 00000000 		.4byte	.LFB18
 2571 00cc 0C000000 		.4byte	.LFE18
 2572 00d0 00000000 		.4byte	.LFB19
 2573 00d4 18000000 		.4byte	.LFE19
 2574 00d8 00000000 		.4byte	.LFB20
 2575 00dc 20000000 		.4byte	.LFE20
 2576 00e0 00000000 		.4byte	.LFB21
 2577 00e4 24000000 		.4byte	.LFE21
 2578 00e8 00000000 		.4byte	.LFB22
 2579 00ec 24000000 		.4byte	.LFE22
 2580 00f0 00000000 		.4byte	.LFB23
 2581 00f4 1C000000 		.4byte	.LFE23
 2582 00f8 00000000 		.4byte	.LFB24
 2583 00fc 24000000 		.4byte	.LFE24
 2584 0100 00000000 		.4byte	.LFB25
 2585 0104 58000000 		.4byte	.LFE25
 2586 0108 00000000 		.4byte	.LFB26
 2587 010c 02000000 		.4byte	.LFE26
 2588 0110 00000000 		.4byte	0
 2589 0114 00000000 		.4byte	0
 2590              		.section	.debug_line,"",%progbits
 2591              	.Ldebug_line0:
 2592 0000 CE020000 		.section	.debug_str,"MS",%progbits,1
 2592      02006700 
 2592      00000201 
 2592      FB0E0D00 
 2592      01010101 
 2593              	.LASF10:
 2594 0000 75696E74 		.ascii	"uint16\000"
 2594      313600
 2595              	.LASF40:
 2596 0007 55415254 		.ascii	"UART_LOG_ReadControlRegister\000"
 2596      5F4C4F47 
 2596      5F526561 
 2596      64436F6E 
 2596      74726F6C 
 2597              	.LASF57:
 2598 0024 43794578 		.ascii	"CyExitCriticalSection\000"
 2598      69744372 
 2598      69746963 
 2598      616C5365 
 2598      6374696F 
 2599              	.LASF39:
 2600 003a 74784461 		.ascii	"txDataByte\000"
 2600      74614279 
 2600      746500
 2601              	.LASF30:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 75


 2602 0045 55415254 		.ascii	"UART_LOG_GetRxBufferSize\000"
 2602      5F4C4F47 
 2602      5F476574 
 2602      52784275 
 2602      66666572 
 2603              	.LASF44:
 2604 005e 73747269 		.ascii	"string\000"
 2604      6E6700
 2605              	.LASF60:
 2606 0065 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_LOG.c\000"
 2606      72617465 
 2606      645F536F 
 2606      75726365 
 2606      5C50536F 
 2607              	.LASF7:
 2608 0087 6C6F6E67 		.ascii	"long long unsigned int\000"
 2608      206C6F6E 
 2608      6720756E 
 2608      7369676E 
 2608      65642069 
 2609              	.LASF24:
 2610 009e 55415254 		.ascii	"UART_LOG_Stop\000"
 2610      5F4C4F47 
 2610      5F53746F 
 2610      7000
 2611              	.LASF38:
 2612 00ac 55415254 		.ascii	"UART_LOG_WriteTxData\000"
 2612      5F4C4F47 
 2612      5F577269 
 2612      74655478 
 2612      44617461 
 2613              	.LASF6:
 2614 00c1 6C6F6E67 		.ascii	"long long int\000"
 2614      206C6F6E 
 2614      6720696E 
 2614      7400
 2615              	.LASF0:
 2616 00cf 7369676E 		.ascii	"signed char\000"
 2616      65642063 
 2616      68617200 
 2617              	.LASF59:
 2618 00db 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2618      43313120 
 2618      352E342E 
 2618      31203230 
 2618      31363036 
 2619 010e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2619      20726576 
 2619      6973696F 
 2619      6E203233 
 2619      37373135 
 2620 0141 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2620      66756E63 
 2620      74696F6E 
 2620      2D736563 
 2620      74696F6E 
 2621              	.LASF54:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 76


 2622 0169 74785065 		.ascii	"txPeriod\000"
 2622      72696F64 
 2622      00
 2623              	.LASF29:
 2624 0172 55415254 		.ascii	"UART_LOG_GetByte\000"
 2624      5F4C4F47 
 2624      5F476574 
 2624      42797465 
 2624      00
 2625              	.LASF4:
 2626 0183 6C6F6E67 		.ascii	"long int\000"
 2626      20696E74 
 2626      00
 2627              	.LASF18:
 2628 018c 55415254 		.ascii	"UART_LOG_ReadRxData\000"
 2628      5F4C4F47 
 2628      5F526561 
 2628      64527844 
 2628      61746100 
 2629              	.LASF9:
 2630 01a0 75696E74 		.ascii	"uint8\000"
 2630      3800
 2631              	.LASF12:
 2632 01a6 646F7562 		.ascii	"double\000"
 2632      6C6500
 2633              	.LASF64:
 2634 01ad 61646472 		.ascii	"addressMode\000"
 2634      6573734D 
 2634      6F646500 
 2635              	.LASF23:
 2636 01b9 55415254 		.ascii	"UART_LOG_Start\000"
 2636      5F4C4F47 
 2636      5F537461 
 2636      727400
 2637              	.LASF52:
 2638 01c8 7265744D 		.ascii	"retMode\000"
 2638      6F646500 
 2639              	.LASF8:
 2640 01d0 756E7369 		.ascii	"unsigned int\000"
 2640      676E6564 
 2640      20696E74 
 2640      00
 2641              	.LASF5:
 2642 01dd 6C6F6E67 		.ascii	"long unsigned int\000"
 2642      20756E73 
 2642      69676E65 
 2642      6420696E 
 2642      7400
 2643              	.LASF55:
 2644 01ef 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2644      74657243 
 2644      72697469 
 2644      63616C53 
 2644      65637469 
 2645              	.LASF63:
 2646 0206 55415254 		.ascii	"UART_LOG_SetTxAddressMode\000"
 2646      5F4C4F47 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 77


 2646      5F536574 
 2646      54784164 
 2646      64726573 
 2647              	.LASF31:
 2648 0220 73697A65 		.ascii	"size\000"
 2648      00
 2649              	.LASF3:
 2650 0225 73686F72 		.ascii	"short unsigned int\000"
 2650      7420756E 
 2650      7369676E 
 2650      65642069 
 2650      6E7400
 2651              	.LASF45:
 2652 0238 62756649 		.ascii	"bufIndex\000"
 2652      6E646578 
 2652      00
 2653              	.LASF34:
 2654 0241 696E7453 		.ascii	"intSrc\000"
 2654      726300
 2655              	.LASF32:
 2656 0248 55415254 		.ascii	"UART_LOG_ClearRxBuffer\000"
 2656      5F4C4F47 
 2656      5F436C65 
 2656      61725278 
 2656      42756666 
 2657              	.LASF53:
 2658 025f 746D7053 		.ascii	"tmpStat\000"
 2658      74617400 
 2659              	.LASF17:
 2660 0267 73697A65 		.ascii	"sizetype\000"
 2660      74797065 
 2660      00
 2661              	.LASF16:
 2662 0270 6C6F6E67 		.ascii	"long double\000"
 2662      20646F75 
 2662      626C6500 
 2663              	.LASF19:
 2664 027c 55415254 		.ascii	"UART_LOG_ReadRxStatus\000"
 2664      5F4C4F47 
 2664      5F526561 
 2664      64527853 
 2664      74617475 
 2665              	.LASF35:
 2666 0292 61646472 		.ascii	"address\000"
 2666      65737300 
 2667              	.LASF62:
 2668 029a 55415254 		.ascii	"UART_LOG_Init\000"
 2668      5F4C4F47 
 2668      5F496E69 
 2668      7400
 2669              	.LASF48:
 2670 02a8 55415254 		.ascii	"UART_LOG_PutCRLF\000"
 2670      5F4C4F47 
 2670      5F507574 
 2670      43524C46 
 2670      00
 2671              	.LASF27:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 78


 2672 02b9 72785374 		.ascii	"rxStatus\000"
 2672      61747573 
 2672      00
 2673              	.LASF11:
 2674 02c2 666C6F61 		.ascii	"float\000"
 2674      7400
 2675              	.LASF51:
 2676 02c8 55415254 		.ascii	"UART_LOG_SendBreak\000"
 2676      5F4C4F47 
 2676      5F53656E 
 2676      64427265 
 2676      616B00
 2677              	.LASF15:
 2678 02db 72656738 		.ascii	"reg8\000"
 2678      00
 2679              	.LASF1:
 2680 02e0 756E7369 		.ascii	"unsigned char\000"
 2680      676E6564 
 2680      20636861 
 2680      7200
 2681              	.LASF28:
 2682 02ee 55415254 		.ascii	"UART_LOG_GetChar\000"
 2682      5F4C4F47 
 2682      5F476574 
 2682      43686172 
 2682      00
 2683              	.LASF2:
 2684 02ff 73686F72 		.ascii	"short int\000"
 2684      7420696E 
 2684      7400
 2685              	.LASF37:
 2686 0309 55415254 		.ascii	"UART_LOG_SetTxInterruptMode\000"
 2686      5F4C4F47 
 2686      5F536574 
 2686      5478496E 
 2686      74657272 
 2687              	.LASF47:
 2688 0325 62797465 		.ascii	"byteCount\000"
 2688      436F756E 
 2688      7400
 2689              	.LASF65:
 2690 032f 55415254 		.ascii	"UART_LOG_initVar\000"
 2690      5F4C4F47 
 2690      5F696E69 
 2690      74566172 
 2690      00
 2691              	.LASF50:
 2692 0340 55415254 		.ascii	"UART_LOG_ClearTxBuffer\000"
 2692      5F4C4F47 
 2692      5F436C65 
 2692      61725478 
 2692      42756666 
 2693              	.LASF20:
 2694 0357 72784461 		.ascii	"rxData\000"
 2694      746100
 2695              	.LASF42:
 2696 035e 55415254 		.ascii	"UART_LOG_PutChar\000"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 79


 2696      5F4C4F47 
 2696      5F507574 
 2696      43686172 
 2696      00
 2697              	.LASF14:
 2698 036f 63686172 		.ascii	"char\000"
 2698      00
 2699              	.LASF49:
 2700 0374 55415254 		.ascii	"UART_LOG_GetTxBufferSize\000"
 2700      5F4C4F47 
 2700      5F476574 
 2700      54784275 
 2700      66666572 
 2701              	.LASF22:
 2702 038d 55415254 		.ascii	"UART_LOG_Enable\000"
 2702      5F4C4F47 
 2702      5F456E61 
 2702      626C6500 
 2703              	.LASF13:
 2704 039d 63686172 		.ascii	"char8\000"
 2704      3800
 2705              	.LASF56:
 2706 03a3 55415254 		.ascii	"UART_LOG_IntClock_Start\000"
 2706      5F4C4F47 
 2706      5F496E74 
 2706      436C6F63 
 2706      6B5F5374 
 2707              	.LASF26:
 2708 03bb 55415254 		.ascii	"UART_LOG_SetRxInterruptMode\000"
 2708      5F4C4F47 
 2708      5F536574 
 2708      5278496E 
 2708      74657272 
 2709              	.LASF46:
 2710 03d7 55415254 		.ascii	"UART_LOG_PutArray\000"
 2710      5F4C4F47 
 2710      5F507574 
 2710      41727261 
 2710      7900
 2711              	.LASF43:
 2712 03e9 55415254 		.ascii	"UART_LOG_PutString\000"
 2712      5F4C4F47 
 2712      5F507574 
 2712      53747269 
 2712      6E6700
 2713              	.LASF25:
 2714 03fc 656E6162 		.ascii	"enableInterrupts\000"
 2714      6C65496E 
 2714      74657272 
 2714      75707473 
 2714      00
 2715              	.LASF21:
 2716 040d 73746174 		.ascii	"status\000"
 2716      757300
 2717              	.LASF61:
 2718 0414 443A5C48 		.ascii	"D:\\H_da\\Winter Semester\\MM03 Advanced Microcontr"
 2718      5F64615C 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccgubnqn.s 			page 80


 2718      57696E74 
 2718      65722053 
 2718      656D6573 
 2719 0444 6F6C6C65 		.ascii	"oller Systems and Embedded Operating Systems\\Lectu"
 2719      72205379 
 2719      7374656D 
 2719      7320616E 
 2719      6420456D 
 2720 0476 72652050 		.ascii	"re Prof. Fromm\\workspace\\workspace_psoc\\Reaction"
 2720      726F662E 
 2720      2046726F 
 2720      6D6D5C77 
 2720      6F726B73 
 2721 04a6 47616D65 		.ascii	"Game_with erika.cydsn\000"
 2721      5F776974 
 2721      68206572 
 2721      696B612E 
 2721      63796473 
 2722              	.LASF41:
 2723 04bc 55415254 		.ascii	"UART_LOG_ReadTxStatus\000"
 2723      5F4C4F47 
 2723      5F526561 
 2723      64547853 
 2723      74617475 
 2724              	.LASF33:
 2725 04d2 55415254 		.ascii	"UART_LOG_SetRxAddress1\000"
 2725      5F4C4F47 
 2725      5F536574 
 2725      52784164 
 2725      64726573 
 2726              	.LASF36:
 2727 04e9 55415254 		.ascii	"UART_LOG_SetRxAddress2\000"
 2727      5F4C4F47 
 2727      5F536574 
 2727      52784164 
 2727      64726573 
 2728              	.LASF58:
 2729 0500 55415254 		.ascii	"UART_LOG_IntClock_Stop\000"
 2729      5F4C4F47 
 2729      5F496E74 
 2729      436C6F63 
 2729      6B5F5374 
 2730              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
