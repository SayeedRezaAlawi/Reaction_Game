ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_evset.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_oo_SetEvent,"ax",%progbits
  20              		.align	1
  21              		.global	EE_oo_SetEvent
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_oo_SetEvent, %function
  25              	EE_oo_SetEvent:
  26              	.LFB70:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_evset.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * CVS: $Id: ee_evset.c,v 1.4 2005/11/03 09:39:48 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  55:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #include "trcKernelPort.h"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif
  57:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** /* SetEvent:
  58:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    - can be called from ISR and from task level
  59:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    - if the task was waiting for one of the events -> wake up it!
  60:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    - returns (only extended state)
  61:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        E_OS_ID     if task id is invalid
  62:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        E_OS_ACCESS if the referenced task is not an extended task
  63:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        E_OS_STATE  events cannot be set because the task is in the
  64:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****                    suspended state
  65:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  66:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    Note: The implementation of this function can be a little bit
  67:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    optimized.  That is, we should check in which queue the task really
  68:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    goes, then eventually inserting it into the ready queue...
  69:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****    Note: part of this code is present also in altick.c!
  71:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** */
  72:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  74:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
  75:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #ifndef __PRIVATE_SETEVENT__
  76:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** StatusType EE_oo_SetEvent(TaskType TaskID, EventMaskType Mask)
  78:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** {
  28              		.loc 1 78 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 3


  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41              	.LBB56:
  42              	.LBB57:
  43              	.LBB58:
  44              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@file ee_cpu.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@brief CPU-dependent part of HAL. Derived from pkg/cpu/pic30/inc/ee_cpu.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** */ 
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 4


  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __INCLUDE_CORTEX_MX_EE_CPU_H__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __INCLUDE_CORTEX_MX_EE_CPU_H__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_eecfg.inc"
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_compiler_gcc.inc"
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Initial stack offset (in words): Used in multistack. */
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef CORTEX_MX_INIT_TOS_OFFSET
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define CORTEX_MX_INIT_TOS_OFFSET 10
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*************************************************************************
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Types and structures
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *************************************************************************/
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Primitive data types */
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_types.inc"
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UREG;
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32  EE_SREG;
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_FREG;
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_UREG_SIZE 4
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean type */
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TYPEBOOL
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEBOOL;
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean true define */
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_TRUE
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_TRUE ((EE_TYPEBOOL)1U)
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* boolean false define */
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef EE_FALSE
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_FALSE ((EE_TYPEBOOL)0U)
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_PTR		volatile EE_UREG *
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG_ADDR(x)	((EE_HWREG_PTR)(x))
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_HWREG(x)		(*EE_HWREG_ADDR(x))
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __GNU__
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Get current SP */
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_UINT32  __current_sp(void)
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** EE_UINT32 temp;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 5


 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __ASM ("mov %0, sp" : "=r" (temp) : );
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** return temp;
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Set a breakpoint */
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define __breakpoint(value)	__ASM ("bkpt "#value)
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* ISR Priority representation type */
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UREG EE_TYPEISR2PRIO;
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs */
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_INT32 EE_TID;
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Thread IDs - unsigned version*/
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** typedef EE_UINT32 EE_UTID;
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used by the common layer to decide whether to start a new thread */
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define TID_IS_STACKED_MARK 0x80000000
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* EE_TYPEIRQ is currently unused */
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* XXX: define EE_TIME? */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Use the "standard" implementation */
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_common_ee_hal_structs.inc"
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Application dependent data types
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef	__HAS_TYPES_H__
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include	"types.h"
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  CPU Peripherals
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CORTEX_MX__
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_nvic.inc"
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #include "ErikaOS_1_cortex_mx_ee_systick.inc"
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /******************************************************************************
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  HAL Variables
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  ******************************************************************************/
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __MULTI__
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Top-of-stack of each private stack */
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern struct EE_TOS EE_cortex_mx_system_tos[];
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** //#define	EE_std_system_tos EE_cortex_mx_system_tos
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Index of the current stack */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** extern EE_UREG EE_cortex_mx_active_tos;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 6


 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_hal_active_tos EE_cortex_mx_active_tos
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*extern	EE_UREG EE_pic30_thread_tos[];
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define	EE_std_thread_tos EE_pic30_thread_tos */
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif /* __MULTI__ */
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /*********************************************************************
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  Cortex M0 interrupt disabling/enabling
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  *********************************************************************/
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /* Used to check the value returned by EE_cortex_mx_disableIRQ */
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #define EE_cortex_mx_are_IRQs_enabled(ie) ((ie) ^ 1)
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Enable interrupts
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 180:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_enableIRQ(void)
 181:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 182:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 183:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsie i");
 184:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 185:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 186:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsie    i\n");
 187:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 188:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 189:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__enable_irq();
 190:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 191:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsie i");
 192:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 193:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 194:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 195:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 196:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 198:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Disable interrupts
 199:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 200:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_disableIRQ(void)
 201:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 202:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 203:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 204:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 205:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 206:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    cpsid    i\n");
 207:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 208:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 209:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 210:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 211:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("cpsid i");
 212:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 213:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 214:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 215:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 216:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 217:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 218:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Resume interrupts
 219:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 220:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ void  EE_cortex_mx_resumeIRQ(EE_FREG f)
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 7


 221:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 222:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 223:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__set_PRIMASK(f);
 224:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 225:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 226:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    msr    primask, r0\n");
 227:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 228:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 229:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 230:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	PRIMASK = f;
 231:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile("msr primask, %0" :: "r" (f));
 233:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 234:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__CCS__ */
 235:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__IAR__ */
 236:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** }
 237:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 
 238:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** /**
 239:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  * Suspend interrupts
 240:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc ****  */
 241:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** __INLINE__ EE_FREG  EE_cortex_mx_suspendIRQ(void)
 242:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** {
 243:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifndef __CCS__
 244:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	EE_FREG istat;
 245:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif
 246:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __IAR__
 247:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	 istat = __get_PRIMASK();
 248:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("cpsid i");
 249:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __IAR__ */
 250:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __CCS__
 251:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM ("    mrs     r0, primask\n"
 252:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    cpsid   i\n"
 253:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	       "    bx      lr\n");
 254:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __CCS__ */
 255:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #ifdef __KEIL__
 256:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	register EE_FREG PRIMASK __ASM("primask");
 257:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	istat = PRIMASK;
 258:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__disable_irq();
 259:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #else	/* __KEIL__ */
 260:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("mrs %0, primask" : "=r" (istat) );
  45              		.loc 2 260 0
  46              		.syntax unified
  47              	@ 260 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  48 0002 EFF31085 		mrs r5, primask
  49              	@ 0 "" 2
  50              	.LVL1:
 261:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** 	__ASM volatile ("cpsid i");
  51              		.loc 2 261 0
  52              	@ 261 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
  53 0006 72B6     		cpsid i
  54              	@ 0 "" 2
  55              	.LVL2:
  56              		.thumb
  57              		.syntax unified
  58              	.LBE58:
  59              	.LBE57:
  60              	.LBE56:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 8


  79:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* Error Value */
  80:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   register StatusType ev;
  81:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* Primitive Lock Procedure */
  82:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION();
  83:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  84:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     if ( EE_hal_get_IRQ_nesting_level() == 0U ) 
  86:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     {
  87:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         traceTASK_SET_EVENT(TaskID, Mask)
  88:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     }
  89:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     else
  90:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     {
  91:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         traceTASK_SET_EVENT_FROM_ISR(TaskID, Mask)
  92:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     }
  93:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif
  94:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  95:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_ORTI_set_service_in(EE_SERVICETRACE_SETEVENT);
  96:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_as_monitoring_the_stack();
  98:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #ifdef EE_SERVICE_PROTECTION__
 100:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* [OS093]: If interrupts are disabled/suspended by a Task/OsIsr and the
 101:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       Task/OsIsr calls any OS service (excluding the interrupt services)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       then the Operating System shall ignore the service AND shall return
 103:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       E_OS_DISABLEDINT if the service returns a StatusType value. */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* [OS088]: If an OS-Application makes a service call from the wrong context
 105:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       AND is currently not inside a Category 1 ISR the Operating System module
 106:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       shall not perform the requested action (the service call shall have no
 107:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       effect), and return E_OS_CALLEVEL (see [12], section 13.1) or the
 108:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       "invalid value" of  the service. (BSW11009, BSW11013) */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   /* SetEvent is callable by Task and ISR2 */
 110:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   if ( EE_as_execution_context > ISR2_Context ) {
 111:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     ev = E_OS_CALLEVEL;
 112:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   } else if ( EE_oo_check_disableint_error() ) {
 113:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     ev = E_OS_DISABLEDINT;
 114:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   } else
 115:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* EE_SERVICE_PROTECTION__ */
 116:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 117:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (defined(__RN_EVENT__)) || (defined(EE_AS_RPC__))
 118:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   if ( EE_IS_TID_REMOTE(TaskID) )
 119:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   {
 120:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #ifdef EE_AS_RPC__
 121:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Tmp Tid (introduced to meet MISRA requirements) */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_TID tmp_tid;
 123:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_os_param unmarked_tid;
 125:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_os_param as_mask;
 126:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Two steps macro assignment to meet MISRA 10.3 required rule */
 128:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     tmp_tid = EE_UNMARK_REMOTE_TID(TaskID);
 129:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     unmarked_tid.value_param = (EE_UREG)tmp_tid;
 130:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     as_mask.value_param      = Mask;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 132:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Forward the request to another CPU in synchronous way */
 133:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     ev = EE_as_rpc(OSServiceId_SetEvent, unmarked_tid, as_mask,
 134:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       EE_OS_INVALID_PARAM);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #else /* EE_AS_RPC__ */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 9


 136:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Forward the request to another CPU when the task does
 137:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        not belong to the current CPU */
 138:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     register EE_TYPERN_PARAM par;
 139:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     par.ev = Mask;
 140:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     (void)EE_rn_send((EE_SREG)EE_MARK_REMOTE_TID(TaskID),
 141:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       EE_RN_EVENT, par);
 142:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     ev = E_OK;
 143:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* EE_AS_RPC__ */
 144:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   } else {
 145:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* __RN_EVENT__ || EE_AS_RPC__ */
 146:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 147:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(EE_SERVICE_PROTECTION__))
 148:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* check if the task Id is valid */
 149:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
 150:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_ID;
 151:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else if ( EE_TASK_ACCESS_ERR(TaskID, EE_as_active_app) ) {
 152:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_ACCESS;
 153:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else
 154:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #elif defined(__OO_EXTENDED_STATUS__)
 155:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     /* Check if the TASK Id is valid */
 156:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     if ( (TaskID < 0) || (TaskID >= EE_MAX_TASK) ) {
  61              		.loc 1 156 0
  62 0008 0328     		cmp	r0, #3
  63 000a 47D8     		bhi	.L7
 157:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_ID;
 158:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else
 159:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* EE_AS_OSAPPLICATIONS__ || E_SERVICE_PROTECTION__ ||
 160:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** __OO_EXTENDED_STATUS__ */
 161:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if defined(__OO_EXTENDED_STATUS__)
 162:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     if ( EE_th_is_extended[TaskID] == EE_FALSE ) {
  64              		.loc 1 162 0
  65 000c 274A     		ldr	r2, .L17
  66 000e 52F82020 		ldr	r2, [r2, r0, lsl #2]
  67 0012 002A     		cmp	r2, #0
  68 0014 44D0     		beq	.L8
 163:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_ACCESS;
 164:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else if ( EE_th_status[TaskID] == SUSPENDED ) {
  69              		.loc 1 164 0
  70 0016 264C     		ldr	r4, .L17+4
  71 0018 54F82060 		ldr	r6, [r4, r0, lsl #2]
  72 001c 032E     		cmp	r6, #3
  73 001e 41D0     		beq	.L9
 165:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OS_STATE;
 166:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else 
 167:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* __OO_EXTENDED_STATUS__ */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     {
 169:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       /* Set the event mask only if the task is not suspended */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       EE_th_event_active[TaskID] |= Mask;
  74              		.loc 1 170 0
  75 0020 244F     		ldr	r7, .L17+8
  76 0022 57F82020 		ldr	r2, [r7, r0, lsl #2]
  77 0026 0A43     		orrs	r2, r2, r1
  78 0028 47F82020 		str	r2, [r7, r0, lsl #2]
 171:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       /* Check if the TASK was waiting for an event we just set
 173:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        *
 174:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * WARNING:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 10


 175:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * the test with status==WAITING is FUNDAMENTAL to avoid double
 176:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * insertion of the task in the ready queue!!! Example, when I call
 177:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * two times the same setevent... the first time the task must go in
 178:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        * the ready queue, the second time NOT!!!
 179:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****        */
 180:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       if ( ((EE_th_event_waitmask[TaskID] & Mask) != 0U) &&
  79              		.loc 1 180 0
  80 002c 224A     		ldr	r2, .L17+12
  81 002e 52F82020 		ldr	r2, [r2, r0, lsl #2]
  82 0032 1142     		tst	r1, r2
  83 0034 01D1     		bne	.L3
  84              	.LVL3:
  85              	.L4:
 181:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         (EE_th_status[TaskID] == WAITING) )
 182:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       {
 183:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         /* [SWS_Os_00472] The Operating System module shall start an
 184:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             OsTaskTimeFrame when a task is released successfully.
 185:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             (SRS_Os_11008) */
 186:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         /* [SWS_Os_00467] If an attempt is made to release a task before
 187:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             the end of an OsTaskTimeFrame then the Operating System module
 188:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             shall not perform the release AND shall call the
 189:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             ProtectionHook() with E_OS_PROTECTION_ARRIVAL AND the EVENT
 190:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             SHALL BE SET. */
 191:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         if ( EE_as_tp_handle_interarrival(EE_AS_TP_ID_FROM_TASK(TaskID)) ) {
 192:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           /* If yes, the task must go back into the READY state */
 193:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           EE_th_status[TaskID] = READY;
 194:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           /* Insert the task in the ready queue... */
 195:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           EE_rq_insert(TaskID);
 196:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           /* If I am at task level, check for preemption... */
 198:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           if ( EE_hal_get_IRQ_nesting_level() == 0U ) {
 199:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             /* We are inside a task */
 200:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             EE_oo_preemption_point();
 201:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           }
 202:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       }
 204:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****       ev = E_OK;
  86              		.loc 1 204 0
  87 0036 0020     		movs	r0, #0
  88 0038 35E0     		b	.L2
  89              	.LVL4:
  90              	.L3:
 180:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****         (EE_th_status[TaskID] == WAITING) )
  91              		.loc 1 180 0 discriminator 1
  92 003a 012E     		cmp	r6, #1
  93 003c FBD1     		bne	.L4
 193:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****           /* Insert the task in the ready queue... */
  94              		.loc 1 193 0
  95 003e 0226     		movs	r6, #2
  96 0040 44F82060 		str	r6, [r4, r0, lsl #2]
 195:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
  97              		.loc 1 195 0
  98 0044 FFF7FEFF 		bl	EE_rq_insert
  99              	.LVL5:
 100              	.LBB59:
 101              	.LBB60:
 102              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 11


   1:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Copyright (C) 2002-2009  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Functions used in HAL implementations, to be included by a specific
  43:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * ee_internal.h header.
  44:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Derived from pkg/cpu/pic30/inc/ee_internal.h
  45:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Author: 2009 Bernardo Dal Seno
  46:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  47:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  48:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
  49:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * PSoC Port and API Generation
  50:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Carlos Fernando Meier Martinez
  51:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Hochschule Darmstadt, Germany. 2017.
  52:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  53:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  54:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifndef PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  55:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define PKG_CPU_COMMON_INC_EE_PRIMITIVES_H
  56:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  57:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /*
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 12


  58:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  * Nested Interrupts Handling
  59:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****  */
  60:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  61:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  62:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  63:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* The following variables belong to ERIKA OS section: ee_kernel_bss */
  64:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_START_SEC_VAR_NOINIT
  65:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  66:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  67:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  68:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** extern EE_UREG EE_IRQ_nesting_level;
  69:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
  71:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #ifdef EE_SUPPORT_MEMMAP_H
  72:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #define OS_STOP_SEC_VAR_NOINIT
  73:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #include "MemMap.inc"
  74:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
  75:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** 
  76:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** /* can be called with interrupt enabled */
  77:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** __INLINE__ EE_UREG  EE_hal_get_IRQ_nesting_level(void)
  78:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc **** {
  79:Generated_Source\PSoC5/ErikaOS_1_common_ee_primitives.inc ****     return EE_IRQ_nesting_level;
 103              		.loc 3 79 0
 104 0048 1C4B     		ldr	r3, .L17+16
 105              	.LBE60:
 106              	.LBE59:
 198:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****             /* We are inside a task */
 107              		.loc 1 198 0
 108 004a 1B68     		ldr	r3, [r3]
 109 004c 002B     		cmp	r3, #0
 110 004e F2D1     		bne	.L4
 111              	.LBB61:
 112              	.LBB62:
 113              	.LBB63:
 114              	.LBB64:
 115              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 13


  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 14


  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 15


 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 16


 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
 116              		.loc 4 240 0
 117 0050 1B4B     		ldr	r3, .L17+20
 118 0052 1F68     		ldr	r7, [r3]
 119              	.LBE64:
 120              	.LBE63:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 17


 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 18


 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 19


 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 20


 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 423:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 424:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 425:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 426:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* A lookup table to speedup ready queue handling */
 427:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern const EE_INT8 EE_rq_lookup[256];
 428:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Lookup functions */
 429:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_ECC2__)
 430:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 431:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 432:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Lookup at bits 15-9 */
 433:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_INT8 x = EE_rq_lookup[(EE_rq_bitmask & 0xFF00U) >> 8];
 434:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (x == (EE_INT8)-1) {
 435:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x = EE_rq_lookup[EE_rq_bitmask];
 436:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 437:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     x += (EE_INT8)8;
 438:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 439:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return x;
 440:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 441:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_ECC2__ */
 442:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_INT8  EE_rq_get_first_not_empty_queue( void )
 443:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 444:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return EE_rq_lookup[EE_rq_bitmask];
 445:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 446:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ECC2__ */
 447:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_BCC2__ || __OO_ECC2__ */
 448:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 449:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Internal Queue management functions */
 450:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 451:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first ready task without extracting it */
 452:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_QUERYFIRST__
 453:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC1__)) || (defined(__OO_ECC1__))
 454:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_rq_queryfirst(void)
 455:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** { return EE_rq_first; }
 456:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 457:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 458:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 459:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq_queryfirst(void);
 460:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 461:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 462:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 463:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* __INLINE__ EE_TID  EE_stk_queryfirst(void) in intfunc.h */
 464:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 465:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Extract the RUNNING task from the stack, and return the new head */
 466:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_GETFIRST__
 467:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_getfirst(void)
 468:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 469:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_stkfirst = EE_th_next[EE_stkfirst]);
 470:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 471:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_GETFIRST__ */
 472:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 21


 473:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the stack data structures */
 474:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_INSERTFIRST__
 475:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_stk_insertfirst(EE_TID t)
 476:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 477:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_next[t] = EE_stkfirst;
 478:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_stkfirst = t;
 479:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 480:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 481:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 482:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* insert a task into the ready queue */
 483:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ_INSERT__
 484:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_rq_insert(EE_TID t);
 485:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 486:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 487:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* put the first ready task into the stack */
 488:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_RQ2STK_EXCHANGE__
 489:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID EE_rq2stk_exchange(void);
 490:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
 491:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 492:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __OO_NO_RESOURCES__
 493:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 494:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Method to release all resources locked by a Thread,
 495:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     used to fulfill AS requirement OS070
 496:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 497:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if ((!defined(__OO_EXTENDED_STATUS__)) && \
 498:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__PRIVATE_RELEASEALLRESOURCE__))) && \
 499:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (!defined(__OO_ISR2_RESOURCES__))
 500:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_release_all_resources(EE_TID tid)
 501:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 502:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* release the internal resource. a EE_TYPEPRIO is a bit mask with only one
 503:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      bit set to one.
 504:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      If i subtract one to this I obtain a bit mask with all
 505:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      ones before the starting one and all zeros after 
 506:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (exactly what I want to release resources!)
 507:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 508:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_sys_ceiling &= (EE_th_dispatch_prio[tid] - 1U);
 509:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 510:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 511:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_UREG EE_oo_release_all_resources(EE_TID tid);
 512:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_EXTENDED_STATUS__ && !__OO_ISR2_RESOURCES__ */
 513:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_NO_RESOURCES__ */
 514:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_release_all_resources(tid)    ((void)0)
 515:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_NO_RESOURCES__ */
 516:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 517:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREANTERMINATED__
 518:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* this the function that will be called if a Task doesn't end calling
 519:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    TerminateTask */
 520:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 521:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern void EE_thread_not_terminated( void );
 522:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_THREANTERMINATED__ */
 523:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 524:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This call terminates a thread instance. It must be called as the
 525:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    LAST function call BEFORE the `}' that ends a thread. If the
 526:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    primitive is not inserted at the end of */
 527:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_THREAD_END_INSTANCE__
 528:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_thread_end_instance(void);
 529:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 22


 530:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 531:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
 532:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Index used to give ISR2 Temporary TID value and to access at
 533:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    EE_isr2_nesting_level array */
 534:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG EE_isr2_index;
 535:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 536:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
 537:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** EE_TID  EE_oo_assign_TID_to_ISR2(void);
 538:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 539:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Get the last assigned fake ISR2 TID */
 540:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_oo_get_ISR2_TID(void) {
 541:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return (EE_isr2_index != EE_UREG_MINUS1)?
 542:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     (EE_MAX_TASK + (EE_TID)EE_isr2_index): EE_NIL;
 543:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 544:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 545:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 546:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 547:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 548:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Reset Active Events  THREAD utility method.
 549:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 550:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     When an extended task is transferred from suspended state
 551:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     into ready state all its events have to be cleared cleared
 552:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 553:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_reset_th_event_active(TaskType tnotactive)
 554:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 555:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_event_active[tnotactive] = 0U;
 556:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 557:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 558:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 559:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 560:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 561:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __MULTI__
 562:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 563:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 564:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register TaskType tmp;
 565:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* swap from ready queue to stack queue */
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     tmp = EE_rq2stk_exchange();
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 568:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_th_waswaiting[tmp] = EE_FALSE;
 570:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 571:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_call_PreTaskHook();
 572:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_stkchange(tmp);
 573:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } else {
 574:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* the next task have to be started */
 575:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_ready2stacked(tmp);
 576:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 577:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 578:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 579:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 580:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 581:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 582:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 583:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __MULTI__ */
 584:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 585:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_oo_reset_th_event_active(TaskID)    ((void) 0)
 586:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 23


 587:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* 
 588:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   This method actually do a CONTEXT SWITCH, with the highest priority TASK
 589:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 590:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_run_next_task(void)
 591:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 592:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_ready2stacked(EE_rq2stk_exchange());
 593:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 594:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_ECC1__) || defined(__OO_ECC2__) */
 595:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 596:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 597:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(__OO_BCC2__)) || (defined(__OO_ECC2__))
 598:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 599:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method.
 600:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC2/ECC2 it can be that it is ready or 
 601:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     running. in that case we have to check and queue it anyway
 602:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 603:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType TaskID)
 604:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 605:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if (EE_th_status[TaskID] == SUSPENDED) {
 606:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[TaskID] = READY;
 607:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_oo_reset_th_event_active(TaskID);
 608:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     }
 609:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 610:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else
 611:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*
 612:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Set THREAD ready utility method
 613:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     If the task is BCC1/ECC1 it can be here only because
 614:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     it had rnact=1 before the call, and so it is in suspended state
 615:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   */
 616:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_set_th_status_ready(TaskType tready)
 617:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 618:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_th_status[tready] = READY;
 619:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_reset_th_event_active(tready);
 620:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 621:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* defined(__OO_BCC2__) || defined(__OO_ECC2__) */
 622:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 623:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_task_in_ready_queue( TaskType tid )
 624:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 625:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Decrement the residual number activation */
 626:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   --EE_th_rnact[tid];
 627:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the status READY handling multiple activations */
 628:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_set_th_status_ready(tid);
 629:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* insert the task in the ready queue */
 630:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_rq_insert(tid);
 631:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 632:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 633:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Execute a preemption */
 634:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_PREEMPTION_POINTS__
 635:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 636:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   Moved preemption check implementation into an outside method because the
 637:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   behaviour is common to EE_ActivateTask, EE_oo_ForceSchedule,
 638:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_IncrementCounter, EE_oo_ReleaseResource, EE_oo_PostSem
 639:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 640:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_preemption_point(void)
 641:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 642:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_TID current, rq;
 643:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 24


 644:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* check if there is a preemption */
 645:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_stk_queryfirst();
 646:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   rq      = EE_rq_queryfirst();
 121              		.loc 4 646 0
 122 0054 FFF7FEFF 		bl	EE_rq_queryfirst
 123              	.LVL6:
 647:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 648:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_AS_OSAPPLICATIONS__)) && (defined(__EE_MEMORY_PROTECTION__))
 649:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (defined(EE_SYSCALL_NR)) && (defined(EE_MAX_SYS_SERVICEID)) \
 650:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   && (EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID)
 651:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Reaction to timing protection can be defined to terminate the
 652:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      OSApplication. If a task is inside CallTrustedFunction() and task
 653:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      rescheduling takes place within the same OSApplication,
 654:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the newly running higher priority task may cause timing protection and
 655:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      terminate the OSApplication, thus indirectly aborting the trusted
 656:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      function. To avoid this, the scheduling of other Tasks which belong to
 657:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the same OS-Application as the caller needs to be restricted, as well as
 658:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      the availability of interrupts of the same OS-Application. */
 659:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* [SWS_Os_00563]: The OperatingSystem shall not schedule any other Tasks
 660:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       which belong to the same OS-Application as the non-trusted caller of the
 661:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       service. Also interrupts of Category 2 which belong to the same
 662:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       OS-Application shall be disabled during the execution of the service. */
 663:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if (  (EE_as_active_app != EE_th_app[rq + 1]) ||
 664:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_RAM[EE_as_active_app].
 665:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           TrustedFunctionCallsCounter == 0U) ||
 666:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         (EE_as_Application_ROM[EE_as_active_app].Mode == EE_MEMPROT_TRUST_MODE)
 667:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      )
 668:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SYSCALL_NR > EE_MAX_SYS_SERVICEID */
 669:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_AS_OSAPPLICATIONS__ && __EE_MEMORY_PROTECTION__ */
 670:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 671:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( rq != EE_NIL ) {
 124              		.loc 4 671 0
 125 0058 431C     		adds	r3, r0, #1
 126 005a ECD0     		beq	.L4
 672:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* We check if the system ceiling is greater or not the first task
 673:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****          in the ready queue */
 674:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       if ( EE_sys_ceiling < EE_th_ready_prio[rq] ) {
 127              		.loc 4 674 0
 128 005c 194B     		ldr	r3, .L17+24
 129 005e 1A49     		ldr	r1, .L17+28
 130 0060 1A68     		ldr	r2, [r3]
 131 0062 51F82010 		ldr	r1, [r1, r0, lsl #2]
 132 0066 9142     		cmp	r1, r2
 133 0068 E5D9     		bls	.L4
 675:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 676:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         if ( current != EE_NIL ) {
 134              		.loc 4 676 0
 135 006a 791C     		adds	r1, r7, #1
 677:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_oo_call_PostTaskHook();
 678:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* We have to put the task in the READY status */
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           EE_th_status[current] = READY;
 680:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 681:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****              The task remains into the Stacked Queue! */
 682:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         }
 683:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 684:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Get the new internal resource */
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_sys_ceiling |= EE_th_dispatch_prio[rq];
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 25


 136              		.loc 4 685 0
 137 006c 1749     		ldr	r1, .L17+32
 679:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****           /* !!! BUT NOT IN THE READY QUEUE !!!
 138              		.loc 4 679 0
 139 006e 18BF     		it	ne
 140 0070 44F82760 		strne	r6, [r4, r7, lsl #2]
 141              		.loc 4 685 0
 142 0074 51F82010 		ldr	r1, [r1, r0, lsl #2]
 686:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 687:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         EE_th_status[rq] = RUNNING;
 143              		.loc 4 687 0
 144 0078 0026     		movs	r6, #0
 685:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****         /* Put the task in running state */
 145              		.loc 4 685 0
 146 007a 0A43     		orrs	r2, r2, r1
 147 007c 1A60     		str	r2, [r3]
 148              		.loc 4 687 0
 149 007e 44F82060 		str	r6, [r4, r0, lsl #2]
 150              	.LVL7:
 151              	.LBB65:
 152              	.LBB66:
 566:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     if ( EE_th_waswaiting[tmp] ) {
 153              		.loc 4 566 0
 154 0082 FFF7FEFF 		bl	EE_rq2stk_exchange
 155              	.LVL8:
 567:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* if the task was waiting switch the context to restart it */
 156              		.loc 4 567 0
 157 0086 124A     		ldr	r2, .L17+36
 158 0088 52F82040 		ldr	r4, [r2, r0, lsl #2]
 159 008c 1CB1     		cbz	r4, .L6
 569:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       /* Call the PreTaskHook, here no stub will do that for you */
 160              		.loc 4 569 0
 161 008e 42F82060 		str	r6, [r2, r0, lsl #2]
 162              	.LVL9:
 163              	.LBB67:
 164              	.LBB68:
 165              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 26


  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 27


  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 28


 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 166              		.loc 5 154 0
 167 0092 40F00040 		orr	r0, r0, #-2147483648
 168              	.LVL10:
 169              	.L6:
 170              	.LBE68:
 171              	.LBE67:
 172              	.LBB69:
 173              	.LBB70:
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 174              		.loc 5 167 0
 175 0096 FFF7FEFF 		bl	EE_cortex_mx_change_context
 176              	.LVL11:
 177 009a CCE7     		b	.L4
 178              	.LVL12:
 179              	.L7:
 180              	.LBE70:
 181              	.LBE69:
 182              	.LBE66:
 183              	.LBE65:
 184              	.LBE62:
 185              	.LBE61:
 157:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else
 186              		.loc 1 157 0
 187 009c 0320     		movs	r0, #3
 188              	.LVL13:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 29


 189 009e 02E0     		b	.L2
 190              	.LVL14:
 191              	.L8:
 163:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else if ( EE_th_status[TaskID] == SUSPENDED ) {
 192              		.loc 1 163 0
 193 00a0 0120     		movs	r0, #1
 194              	.LVL15:
 195 00a2 00E0     		b	.L2
 196              	.LVL16:
 197              	.L9:
 165:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     } else 
 198              		.loc 1 165 0
 199 00a4 0720     		movs	r0, #7
 200              	.LVL17:
 201              	.L2:
 202              	.LBB71:
 203              	.LBB72:
 204              	.LBB73:
 232:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc **** #endif	/* !__KEIL__ */
 205              		.loc 2 232 0
 206              		.syntax unified
 207              	@ 232 "Generated_Source\PSoC5\ErikaOS_1_cortex_mx_ee_cpu.inc" 1
 208 00a6 85F31088 		msr primask, r5
 209              	@ 0 "" 2
 210              	.LVL18:
 211              		.thumb
 212              		.syntax unified
 213              	.LBE73:
 214              	.LBE72:
 215              	.LBE71:
 205:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     }
 206:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #if (defined(__RN_EVENT__)) || (defined(EE_AS_RPC__))
 207:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   }
 208:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** #endif /* __RN_EVENT__ || EE_AS_RPC__ */
 209:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 210:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   if ( ev != E_OK ) {
 211:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_ORTI_set_lasterror(ev);
 212:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****     EE_oo_notify_error_SetEvent(TaskID, Mask, ev);
 213:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   }
 214:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 215:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_ORTI_set_service_out(EE_SERVICETRACE_SETEVENT);
 216:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   EE_OS_EXIT_CRITICAL_SECTION();
 217:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** 
 218:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c ****   return ev;
 219:Generated_Source\PSoC5/ErikaOS_1_ee_evset.c **** }
 216              		.loc 1 219 0
 217 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 218              	.L18:
 219              		.align	2
 220              	.L17:
 221 00ac 00000000 		.word	EE_th_is_extended
 222 00b0 00000000 		.word	EE_th_status
 223 00b4 00000000 		.word	EE_th_event_active
 224 00b8 00000000 		.word	EE_th_event_waitmask
 225 00bc 00000000 		.word	EE_IRQ_nesting_level
 226 00c0 00000000 		.word	EE_stkfirst
 227 00c4 00000000 		.word	EE_sys_ceiling
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 30


 228 00c8 00000000 		.word	EE_th_ready_prio
 229 00cc 00000000 		.word	EE_th_dispatch_prio
 230 00d0 00000000 		.word	EE_th_waswaiting
 231              		.cfi_endproc
 232              	.LFE70:
 233              		.size	EE_oo_SetEvent, .-EE_oo_SetEvent
 234              		.text
 235              	.Letext0:
 236              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 237              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 238              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_as_internal.inc"
 239              		.file 9 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_internal.inc"
 240              		.file 10 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 241              		.section	.debug_info,"",%progbits
 242              	.Ldebug_info0:
 243 0000 BA070000 		.4byte	0x7ba
 244 0004 0400     		.2byte	0x4
 245 0006 00000000 		.4byte	.Ldebug_abbrev0
 246 000a 04       		.byte	0x4
 247 000b 01       		.uleb128 0x1
 248 000c 29010000 		.4byte	.LASF106
 249 0010 0C       		.byte	0xc
 250 0011 94070000 		.4byte	.LASF107
 251 0015 CD060000 		.4byte	.LASF108
 252 0019 00000000 		.4byte	.Ldebug_ranges0+0
 253 001d 00000000 		.4byte	0
 254 0021 00000000 		.4byte	.Ldebug_line0
 255 0025 02       		.uleb128 0x2
 256 0026 01       		.byte	0x1
 257 0027 06       		.byte	0x6
 258 0028 1D010000 		.4byte	.LASF0
 259 002c 02       		.uleb128 0x2
 260 002d 01       		.byte	0x1
 261 002e 08       		.byte	0x8
 262 002f 2E050000 		.4byte	.LASF1
 263 0033 02       		.uleb128 0x2
 264 0034 02       		.byte	0x2
 265 0035 05       		.byte	0x5
 266 0036 63050000 		.4byte	.LASF2
 267 003a 02       		.uleb128 0x2
 268 003b 02       		.byte	0x2
 269 003c 07       		.byte	0x7
 270 003d CF020000 		.4byte	.LASF3
 271 0041 02       		.uleb128 0x2
 272 0042 04       		.byte	0x4
 273 0043 05       		.byte	0x5
 274 0044 FE010000 		.4byte	.LASF4
 275 0048 02       		.uleb128 0x2
 276 0049 04       		.byte	0x4
 277 004a 07       		.byte	0x7
 278 004b A7020000 		.4byte	.LASF5
 279 004f 02       		.uleb128 0x2
 280 0050 08       		.byte	0x8
 281 0051 05       		.byte	0x5
 282 0052 0F010000 		.4byte	.LASF6
 283 0056 02       		.uleb128 0x2
 284 0057 08       		.byte	0x8
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 31


 285 0058 07       		.byte	0x7
 286 0059 66000000 		.4byte	.LASF7
 287 005d 03       		.uleb128 0x3
 288 005e 04       		.byte	0x4
 289 005f 05       		.byte	0x5
 290 0060 696E7400 		.ascii	"int\000"
 291 0064 02       		.uleb128 0x2
 292 0065 04       		.byte	0x4
 293 0066 07       		.byte	0x7
 294 0067 8A020000 		.4byte	.LASF8
 295 006b 02       		.uleb128 0x2
 296 006c 08       		.byte	0x8
 297 006d 04       		.byte	0x4
 298 006e FD030000 		.4byte	.LASF9
 299 0072 04       		.uleb128 0x4
 300 0073 66030000 		.4byte	.LASF10
 301 0077 06       		.byte	0x6
 302 0078 3E       		.byte	0x3e
 303 0079 2C000000 		.4byte	0x2c
 304 007d 04       		.uleb128 0x4
 305 007e 97020000 		.4byte	.LASF11
 306 0082 06       		.byte	0x6
 307 0083 3F       		.byte	0x3f
 308 0084 25000000 		.4byte	0x25
 309 0088 04       		.uleb128 0x4
 310 0089 E5040000 		.4byte	.LASF12
 311 008d 06       		.byte	0x6
 312 008e 52       		.byte	0x52
 313 008f 3A000000 		.4byte	0x3a
 314 0093 04       		.uleb128 0x4
 315 0094 C0070000 		.4byte	.LASF13
 316 0098 06       		.byte	0x6
 317 0099 53       		.byte	0x53
 318 009a 5D000000 		.4byte	0x5d
 319 009e 04       		.uleb128 0x4
 320 009f 8A070000 		.4byte	.LASF14
 321 00a3 06       		.byte	0x6
 322 00a4 54       		.byte	0x54
 323 00a5 64000000 		.4byte	0x64
 324 00a9 04       		.uleb128 0x4
 325 00aa 9F020000 		.4byte	.LASF15
 326 00ae 02       		.byte	0x2
 327 00af 4D       		.byte	0x4d
 328 00b0 9E000000 		.4byte	0x9e
 329 00b4 04       		.uleb128 0x4
 330 00b5 3D080000 		.4byte	.LASF16
 331 00b9 02       		.byte	0x2
 332 00ba 4F       		.byte	0x4f
 333 00bb 9E000000 		.4byte	0x9e
 334 00bf 04       		.uleb128 0x4
 335 00c0 5A000000 		.4byte	.LASF17
 336 00c4 02       		.byte	0x2
 337 00c5 54       		.byte	0x54
 338 00c6 A9000000 		.4byte	0xa9
 339 00ca 04       		.uleb128 0x4
 340 00cb 6B020000 		.4byte	.LASF18
 341 00cf 02       		.byte	0x2
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 32


 342 00d0 78       		.byte	0x78
 343 00d1 93000000 		.4byte	0x93
 344 00d5 05       		.uleb128 0x5
 345 00d6 94030000 		.4byte	.LASF19
 346 00da 07       		.byte	0x7
 347 00db 1101     		.2byte	0x111
 348 00dd 88000000 		.4byte	0x88
 349 00e1 05       		.uleb128 0x5
 350 00e2 E9000000 		.4byte	.LASF20
 351 00e6 07       		.byte	0x7
 352 00e7 F701     		.2byte	0x1f7
 353 00e9 CA000000 		.4byte	0xca
 354 00ed 05       		.uleb128 0x5
 355 00ee B7010000 		.4byte	.LASF21
 356 00f2 07       		.byte	0x7
 357 00f3 2C02     		.2byte	0x22c
 358 00f5 A9000000 		.4byte	0xa9
 359 00f9 05       		.uleb128 0x5
 360 00fa 2E000000 		.4byte	.LASF22
 361 00fe 07       		.byte	0x7
 362 00ff 3502     		.2byte	0x235
 363 0101 A9000000 		.4byte	0xa9
 364 0105 05       		.uleb128 0x5
 365 0106 CE050000 		.4byte	.LASF23
 366 010a 07       		.byte	0x7
 367 010b 5D02     		.2byte	0x25d
 368 010d A9000000 		.4byte	0xa9
 369 0111 05       		.uleb128 0x5
 370 0112 6F030000 		.4byte	.LASF24
 371 0116 07       		.byte	0x7
 372 0117 6C02     		.2byte	0x26c
 373 0119 A9000000 		.4byte	0xa9
 374 011d 06       		.uleb128 0x6
 375 011e 0C       		.byte	0xc
 376 011f 07       		.byte	0x7
 377 0120 7202     		.2byte	0x272
 378 0122 4E010000 		.4byte	0x14e
 379 0126 07       		.uleb128 0x7
 380 0127 F2000000 		.4byte	.LASF25
 381 012b 07       		.byte	0x7
 382 012c 7302     		.2byte	0x273
 383 012e F9000000 		.4byte	0xf9
 384 0132 00       		.byte	0
 385 0133 07       		.uleb128 0x7
 386 0134 44040000 		.4byte	.LASF26
 387 0138 07       		.byte	0x7
 388 0139 7402     		.2byte	0x274
 389 013b F9000000 		.4byte	0xf9
 390 013f 04       		.byte	0x4
 391 0140 07       		.uleb128 0x7
 392 0141 51020000 		.4byte	.LASF27
 393 0145 07       		.byte	0x7
 394 0146 7502     		.2byte	0x275
 395 0148 F9000000 		.4byte	0xf9
 396 014c 08       		.byte	0x8
 397 014d 00       		.byte	0
 398 014e 05       		.uleb128 0x5
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 33


 399 014f 87050000 		.4byte	.LASF28
 400 0153 07       		.byte	0x7
 401 0154 7A02     		.2byte	0x27a
 402 0156 1D010000 		.4byte	0x11d
 403 015a 06       		.uleb128 0x6
 404 015b 08       		.byte	0x8
 405 015c 07       		.byte	0x7
 406 015d 7D02     		.2byte	0x27d
 407 015f 7E010000 		.4byte	0x17e
 408 0163 07       		.uleb128 0x7
 409 0164 72020000 		.4byte	.LASF29
 410 0168 07       		.byte	0x7
 411 0169 7E02     		.2byte	0x27e
 412 016b F9000000 		.4byte	0xf9
 413 016f 00       		.byte	0
 414 0170 07       		.uleb128 0x7
 415 0171 C8050000 		.4byte	.LASF30
 416 0175 07       		.byte	0x7
 417 0176 7F02     		.2byte	0x27f
 418 0178 05010000 		.4byte	0x105
 419 017c 04       		.byte	0x4
 420 017d 00       		.byte	0
 421 017e 05       		.uleb128 0x5
 422 017f D2010000 		.4byte	.LASF31
 423 0183 07       		.byte	0x7
 424 0184 8002     		.2byte	0x280
 425 0186 5A010000 		.4byte	0x15a
 426 018a 08       		.uleb128 0x8
 427 018b 01       		.byte	0x1
 428 018c 2C000000 		.4byte	0x2c
 429 0190 07       		.byte	0x7
 430 0191 8A02     		.2byte	0x28a
 431 0193 A4010000 		.4byte	0x1a4
 432 0197 09       		.uleb128 0x9
 433 0198 3C050000 		.4byte	.LASF32
 434 019c 00       		.byte	0
 435 019d 09       		.uleb128 0x9
 436 019e EF040000 		.4byte	.LASF33
 437 01a2 01       		.byte	0x1
 438 01a3 00       		.byte	0
 439 01a4 05       		.uleb128 0x5
 440 01a5 FA020000 		.4byte	.LASF34
 441 01a9 07       		.byte	0x7
 442 01aa 8D02     		.2byte	0x28d
 443 01ac 8A010000 		.4byte	0x18a
 444 01b0 05       		.uleb128 0x5
 445 01b1 3C030000 		.4byte	.LASF35
 446 01b5 07       		.byte	0x7
 447 01b6 9002     		.2byte	0x290
 448 01b8 A4010000 		.4byte	0x1a4
 449 01bc 06       		.uleb128 0x6
 450 01bd 0C       		.byte	0xc
 451 01be 07       		.byte	0x7
 452 01bf 9402     		.2byte	0x294
 453 01c1 EB010000 		.4byte	0x1eb
 454 01c5 0A       		.uleb128 0xa
 455 01c6 6300     		.ascii	"c\000"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 34


 456 01c8 07       		.byte	0x7
 457 01c9 9602     		.2byte	0x296
 458 01cb 11010000 		.4byte	0x111
 459 01cf 00       		.byte	0
 460 01d0 07       		.uleb128 0x7
 461 01d1 32060000 		.4byte	.LASF36
 462 01d5 07       		.byte	0x7
 463 01d6 9802     		.2byte	0x298
 464 01d8 05010000 		.4byte	0x105
 465 01dc 04       		.byte	0x4
 466 01dd 07       		.uleb128 0x7
 467 01de CA020000 		.4byte	.LASF37
 468 01e2 07       		.byte	0x7
 469 01e3 9A02     		.2byte	0x29a
 470 01e5 B0010000 		.4byte	0x1b0
 471 01e9 08       		.byte	0x8
 472 01ea 00       		.byte	0
 473 01eb 05       		.uleb128 0x5
 474 01ec CB000000 		.4byte	.LASF38
 475 01f0 07       		.byte	0x7
 476 01f1 9B02     		.2byte	0x29b
 477 01f3 BC010000 		.4byte	0x1bc
 478 01f7 06       		.uleb128 0x6
 479 01f8 10       		.byte	0x10
 480 01f9 07       		.byte	0x7
 481 01fa 9F02     		.2byte	0x29f
 482 01fc 35020000 		.4byte	0x235
 483 0200 07       		.uleb128 0x7
 484 0201 75040000 		.4byte	.LASF39
 485 0205 07       		.byte	0x7
 486 0206 A002     		.2byte	0x2a0
 487 0208 BF000000 		.4byte	0xbf
 488 020c 00       		.byte	0
 489 020d 07       		.uleb128 0x7
 490 020e DD070000 		.4byte	.LASF40
 491 0212 07       		.byte	0x7
 492 0213 A102     		.2byte	0x2a1
 493 0215 F9000000 		.4byte	0xf9
 494 0219 04       		.byte	0x4
 495 021a 07       		.uleb128 0x7
 496 021b C5000000 		.4byte	.LASF41
 497 021f 07       		.byte	0x7
 498 0220 A202     		.2byte	0x2a2
 499 0222 F9000000 		.4byte	0xf9
 500 0226 08       		.byte	0x8
 501 0227 07       		.uleb128 0x7
 502 0228 29000000 		.4byte	.LASF42
 503 022c 07       		.byte	0x7
 504 022d A302     		.2byte	0x2a3
 505 022f 05010000 		.4byte	0x105
 506 0233 0C       		.byte	0xc
 507 0234 00       		.byte	0
 508 0235 05       		.uleb128 0x5
 509 0236 A1040000 		.4byte	.LASF43
 510 023a 07       		.byte	0x7
 511 023b A402     		.2byte	0x2a4
 512 023d F7010000 		.4byte	0x1f7
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 35


 513 0241 05       		.uleb128 0x5
 514 0242 A1000000 		.4byte	.LASF44
 515 0246 07       		.byte	0x7
 516 0247 2103     		.2byte	0x321
 517 0249 2C000000 		.4byte	0x2c
 518 024d 08       		.uleb128 0x8
 519 024e 01       		.byte	0x1
 520 024f 2C000000 		.4byte	0x2c
 521 0253 07       		.byte	0x7
 522 0254 5904     		.2byte	0x459
 523 0256 9D020000 		.4byte	0x29d
 524 025a 09       		.uleb128 0x9
 525 025b 51040000 		.4byte	.LASF45
 526 025f 00       		.byte	0
 527 0260 09       		.uleb128 0x9
 528 0261 68040000 		.4byte	.LASF46
 529 0265 01       		.byte	0x1
 530 0266 09       		.uleb128 0x9
 531 0267 00000000 		.4byte	.LASF47
 532 026b 02       		.byte	0x2
 533 026c 09       		.uleb128 0x9
 534 026d B8030000 		.4byte	.LASF48
 535 0271 03       		.byte	0x3
 536 0272 09       		.uleb128 0x9
 537 0273 E6030000 		.4byte	.LASF49
 538 0277 04       		.byte	0x4
 539 0278 09       		.uleb128 0x9
 540 0279 A4030000 		.4byte	.LASF50
 541 027d 05       		.byte	0x5
 542 027e 09       		.uleb128 0x9
 543 027f E9010000 		.4byte	.LASF51
 544 0283 06       		.byte	0x6
 545 0284 09       		.uleb128 0x9
 546 0285 E0050000 		.4byte	.LASF52
 547 0289 07       		.byte	0x7
 548 028a 09       		.uleb128 0x9
 549 028b E6070000 		.4byte	.LASF53
 550 028f 08       		.byte	0x8
 551 0290 09       		.uleb128 0x9
 552 0291 19030000 		.4byte	.LASF54
 553 0295 09       		.byte	0x9
 554 0296 09       		.uleb128 0x9
 555 0297 1C040000 		.4byte	.LASF55
 556 029b 0A       		.byte	0xa
 557 029c 00       		.byte	0
 558 029d 05       		.uleb128 0x5
 559 029e 14060000 		.4byte	.LASF56
 560 02a2 07       		.byte	0x7
 561 02a3 6504     		.2byte	0x465
 562 02a5 4D020000 		.4byte	0x24d
 563 02a9 0B       		.uleb128 0xb
 564 02aa 0C080000 		.4byte	.LASF109
 565 02ae 02       		.byte	0x2
 566 02af F1       		.byte	0xf1
 567 02b0 B4000000 		.4byte	0xb4
 568 02b4 03       		.byte	0x3
 569 02b5 C5020000 		.4byte	0x2c5
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 36


 570 02b9 0C       		.uleb128 0xc
 571 02ba 5D060000 		.4byte	.LASF72
 572 02be 02       		.byte	0x2
 573 02bf F4       		.byte	0xf4
 574 02c0 B4000000 		.4byte	0xb4
 575 02c4 00       		.byte	0
 576 02c5 0D       		.uleb128 0xd
 577 02c6 17050000 		.4byte	.LASF57
 578 02ca 02       		.byte	0x2
 579 02cb DC       		.byte	0xdc
 580 02cc 03       		.byte	0x3
 581 02cd DB020000 		.4byte	0x2db
 582 02d1 0E       		.uleb128 0xe
 583 02d2 6600     		.ascii	"f\000"
 584 02d4 02       		.byte	0x2
 585 02d5 DC       		.byte	0xdc
 586 02d6 B4000000 		.4byte	0xb4
 587 02da 00       		.byte	0
 588 02db 0F       		.uleb128 0xf
 589 02dc 63060000 		.4byte	.LASF58
 590 02e0 07       		.byte	0x7
 591 02e1 9703     		.2byte	0x397
 592 02e3 03       		.byte	0x3
 593 02e4 F5020000 		.4byte	0x2f5
 594 02e8 10       		.uleb128 0x10
 595 02e9 73727600 		.ascii	"srv\000"
 596 02ed 07       		.byte	0x7
 597 02ee 9703     		.2byte	0x397
 598 02f0 72000000 		.4byte	0x72
 599 02f4 00       		.byte	0
 600 02f5 0F       		.uleb128 0xf
 601 02f6 37000000 		.4byte	.LASF59
 602 02fa 07       		.byte	0x7
 603 02fb A303     		.2byte	0x3a3
 604 02fd 03       		.byte	0x3
 605 02fe 0E030000 		.4byte	0x30e
 606 0302 10       		.uleb128 0x10
 607 0303 696400   		.ascii	"id\000"
 608 0306 07       		.byte	0x7
 609 0307 A303     		.2byte	0x3a3
 610 0309 72000000 		.4byte	0x72
 611 030d 00       		.byte	0
 612 030e 0F       		.uleb128 0xf
 613 030f 07020000 		.4byte	.LASF60
 614 0313 07       		.byte	0x7
 615 0314 A803     		.2byte	0x3a8
 616 0316 03       		.byte	0x3
 617 0317 27030000 		.4byte	0x327
 618 031b 10       		.uleb128 0x10
 619 031c 696400   		.ascii	"id\000"
 620 031f 07       		.byte	0x7
 621 0320 A803     		.2byte	0x3a8
 622 0322 72000000 		.4byte	0x72
 623 0326 00       		.byte	0
 624 0327 0F       		.uleb128 0xf
 625 0328 F4050000 		.4byte	.LASF61
 626 032c 07       		.byte	0x7
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 37


 627 032d D203     		.2byte	0x3d2
 628 032f 03       		.byte	0x3
 629 0330 41030000 		.4byte	0x341
 630 0334 10       		.uleb128 0x10
 631 0335 746D7000 		.ascii	"tmp\000"
 632 0339 07       		.byte	0x7
 633 033a D203     		.2byte	0x3d2
 634 033c CA000000 		.4byte	0xca
 635 0340 00       		.byte	0
 636 0341 0F       		.uleb128 0xf
 637 0342 9E050000 		.4byte	.LASF62
 638 0346 07       		.byte	0x7
 639 0347 8404     		.2byte	0x484
 640 0349 03       		.byte	0x3
 641 034a 5B030000 		.4byte	0x35b
 642 034e 10       		.uleb128 0x10
 643 034f 63747800 		.ascii	"ctx\000"
 644 0353 07       		.byte	0x7
 645 0354 8504     		.2byte	0x485
 646 0356 9D020000 		.4byte	0x29d
 647 035a 00       		.byte	0
 648 035b 11       		.uleb128 0x11
 649 035c BF040000 		.4byte	.LASF64
 650 0360 04       		.byte	0x4
 651 0361 8D01     		.2byte	0x18d
 652 0363 03       		.byte	0x3
 653 0364 0D       		.uleb128 0xd
 654 0365 7D000000 		.4byte	.LASF63
 655 0369 05       		.byte	0x5
 656 036a A5       		.byte	0xa5
 657 036b 03       		.byte	0x3
 658 036c 7C030000 		.4byte	0x37c
 659 0370 0E       		.uleb128 0xe
 660 0371 74696400 		.ascii	"tid\000"
 661 0375 05       		.byte	0x5
 662 0376 A5       		.byte	0xa5
 663 0377 CA000000 		.4byte	0xca
 664 037b 00       		.byte	0
 665 037c 12       		.uleb128 0x12
 666 037d 78020000 		.4byte	.LASF67
 667 0381 04       		.byte	0x4
 668 0382 EE       		.byte	0xee
 669 0383 CA000000 		.4byte	0xca
 670 0387 03       		.byte	0x3
 671 0388 11       		.uleb128 0x11
 672 0389 7A040000 		.4byte	.LASF65
 673 038d 04       		.byte	0x4
 674 038e 9A01     		.2byte	0x19a
 675 0390 03       		.byte	0x3
 676 0391 11       		.uleb128 0x11
 677 0392 29040000 		.4byte	.LASF66
 678 0396 08       		.byte	0x8
 679 0397 AB01     		.2byte	0x1ab
 680 0399 03       		.byte	0x3
 681 039a 12       		.uleb128 0x12
 682 039b 3F060000 		.4byte	.LASF68
 683 039f 09       		.byte	0x9
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 38


 684 03a0 60       		.byte	0x60
 685 03a1 B4000000 		.4byte	0xb4
 686 03a5 03       		.byte	0x3
 687 03a6 12       		.uleb128 0x12
 688 03a7 88060000 		.4byte	.LASF69
 689 03ab 03       		.byte	0x3
 690 03ac 4D       		.byte	0x4d
 691 03ad A9000000 		.4byte	0xa9
 692 03b1 03       		.byte	0x3
 693 03b2 0D       		.uleb128 0xd
 694 03b3 0D000000 		.4byte	.LASF70
 695 03b7 09       		.byte	0x9
 696 03b8 68       		.byte	0x68
 697 03b9 03       		.byte	0x3
 698 03ba C8030000 		.4byte	0x3c8
 699 03be 0E       		.uleb128 0xe
 700 03bf 6600     		.ascii	"f\000"
 701 03c1 09       		.byte	0x9
 702 03c2 68       		.byte	0x68
 703 03c3 B4000000 		.4byte	0xb4
 704 03c7 00       		.byte	0
 705 03c8 0F       		.uleb128 0xf
 706 03c9 00050000 		.4byte	.LASF71
 707 03cd 04       		.byte	0x4
 708 03ce 8002     		.2byte	0x280
 709 03d0 03       		.byte	0x3
 710 03d1 ED030000 		.4byte	0x3ed
 711 03d5 13       		.uleb128 0x13
 712 03d6 60040000 		.4byte	.LASF73
 713 03da 04       		.byte	0x4
 714 03db 8202     		.2byte	0x282
 715 03dd CA000000 		.4byte	0xca
 716 03e1 14       		.uleb128 0x14
 717 03e2 727100   		.ascii	"rq\000"
 718 03e5 04       		.byte	0x4
 719 03e6 8202     		.2byte	0x282
 720 03e8 CA000000 		.4byte	0xca
 721 03ec 00       		.byte	0
 722 03ed 0F       		.uleb128 0xf
 723 03ee C9070000 		.4byte	.LASF74
 724 03f2 04       		.byte	0x4
 725 03f3 3202     		.2byte	0x232
 726 03f5 03       		.byte	0x3
 727 03f6 07040000 		.4byte	0x407
 728 03fa 14       		.uleb128 0x14
 729 03fb 746D7000 		.ascii	"tmp\000"
 730 03ff 04       		.byte	0x4
 731 0400 3402     		.2byte	0x234
 732 0402 E1000000 		.4byte	0xe1
 733 0406 00       		.byte	0
 734 0407 0D       		.uleb128 0xd
 735 0408 77060000 		.4byte	.LASF75
 736 040c 05       		.byte	0x5
 737 040d 98       		.byte	0x98
 738 040e 03       		.byte	0x3
 739 040f 1F040000 		.4byte	0x41f
 740 0413 0E       		.uleb128 0xe
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 39


 741 0414 74696400 		.ascii	"tid\000"
 742 0418 05       		.byte	0x5
 743 0419 98       		.byte	0x98
 744 041a CA000000 		.4byte	0xca
 745 041e 00       		.byte	0
 746 041f 15       		.uleb128 0x15
 747 0420 92000000 		.4byte	.LASF110
 748 0424 01       		.byte	0x1
 749 0425 4D       		.byte	0x4d
 750 0426 41020000 		.4byte	0x241
 751 042a 00000000 		.4byte	.LFB70
 752 042e D4000000 		.4byte	.LFE70-.LFB70
 753 0432 01       		.uleb128 0x1
 754 0433 9C       		.byte	0x9c
 755 0434 B4050000 		.4byte	0x5b4
 756 0438 16       		.uleb128 0x16
 757 0439 36080000 		.4byte	.LASF76
 758 043d 01       		.byte	0x1
 759 043e 4D       		.byte	0x4d
 760 043f E1000000 		.4byte	0xe1
 761 0443 00000000 		.4byte	.LLST0
 762 0447 16       		.uleb128 0x16
 763 0448 3A060000 		.4byte	.LASF77
 764 044c 01       		.byte	0x1
 765 044d 4D       		.byte	0x4d
 766 044e ED000000 		.4byte	0xed
 767 0452 85000000 		.4byte	.LLST1
 768 0456 17       		.uleb128 0x17
 769 0457 657600   		.ascii	"ev\000"
 770 045a 01       		.byte	0x1
 771 045b 50       		.byte	0x50
 772 045c 41020000 		.4byte	0x241
 773 0460 01       		.uleb128 0x1
 774 0461 50       		.byte	0x50
 775 0462 18       		.uleb128 0x18
 776 0463 82050000 		.4byte	.LASF78
 777 0467 01       		.byte	0x1
 778 0468 52       		.byte	0x52
 779 0469 B4000000 		.4byte	0xb4
 780 046d 01       		.uleb128 0x1
 781 046e 55       		.byte	0x55
 782 046f 19       		.uleb128 0x19
 783 0470 9A030000 		.4byte	0x39a
 784 0474 02000000 		.4byte	.LBB56
 785 0478 06000000 		.4byte	.LBE56-.LBB56
 786 047c 01       		.byte	0x1
 787 047d 52       		.byte	0x52
 788 047e A6040000 		.4byte	0x4a6
 789 0482 1A       		.uleb128 0x1a
 790 0483 A9020000 		.4byte	0x2a9
 791 0487 02000000 		.4byte	.LBB57
 792 048b 06000000 		.4byte	.LBE57-.LBB57
 793 048f 09       		.byte	0x9
 794 0490 62       		.byte	0x62
 795 0491 1B       		.uleb128 0x1b
 796 0492 02000000 		.4byte	.LBB58
 797 0496 06000000 		.4byte	.LBE58-.LBB58
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 40


 798 049a 1C       		.uleb128 0x1c
 799 049b B9020000 		.4byte	0x2b9
 800 049f D8000000 		.4byte	.LLST2
 801 04a3 00       		.byte	0
 802 04a4 00       		.byte	0
 803 04a5 00       		.byte	0
 804 04a6 1D       		.uleb128 0x1d
 805 04a7 A6030000 		.4byte	0x3a6
 806 04ab 48000000 		.4byte	.LBB59
 807 04af 02000000 		.4byte	.LBE59-.LBB59
 808 04b3 01       		.byte	0x1
 809 04b4 C6       		.byte	0xc6
 810 04b5 19       		.uleb128 0x19
 811 04b6 C8030000 		.4byte	0x3c8
 812 04ba 50000000 		.4byte	.LBB61
 813 04be 4C000000 		.4byte	.LBE61-.LBB61
 814 04c2 01       		.byte	0x1
 815 04c3 C8       		.byte	0xc8
 816 04c4 6C050000 		.4byte	0x56c
 817 04c8 1B       		.uleb128 0x1b
 818 04c9 50000000 		.4byte	.LBB62
 819 04cd 4C000000 		.4byte	.LBE62-.LBB62
 820 04d1 1E       		.uleb128 0x1e
 821 04d2 D5030000 		.4byte	0x3d5
 822 04d6 1C       		.uleb128 0x1c
 823 04d7 E1030000 		.4byte	0x3e1
 824 04db EB000000 		.4byte	.LLST3
 825 04df 1F       		.uleb128 0x1f
 826 04e0 7C030000 		.4byte	0x37c
 827 04e4 50000000 		.4byte	.LBB63
 828 04e8 04000000 		.4byte	.LBE63-.LBB63
 829 04ec 04       		.byte	0x4
 830 04ed 8502     		.2byte	0x285
 831 04ef 20       		.uleb128 0x20
 832 04f0 ED030000 		.4byte	0x3ed
 833 04f4 82000000 		.4byte	.LBB65
 834 04f8 1A000000 		.4byte	.LBE65-.LBB65
 835 04fc 04       		.byte	0x4
 836 04fd BB02     		.2byte	0x2bb
 837 04ff 61050000 		.4byte	0x561
 838 0503 1B       		.uleb128 0x1b
 839 0504 82000000 		.4byte	.LBB66
 840 0508 1A000000 		.4byte	.LBE66-.LBB66
 841 050c 1C       		.uleb128 0x1c
 842 050d FA030000 		.4byte	0x3fa
 843 0511 FE000000 		.4byte	.LLST4
 844 0515 20       		.uleb128 0x20
 845 0516 07040000 		.4byte	0x407
 846 051a 92000000 		.4byte	.LBB67
 847 051e 04000000 		.4byte	.LBE67-.LBB67
 848 0522 04       		.byte	0x4
 849 0523 3C02     		.2byte	0x23c
 850 0525 33050000 		.4byte	0x533
 851 0529 21       		.uleb128 0x21
 852 052a 13040000 		.4byte	0x413
 853 052e 11010000 		.4byte	.LLST5
 854 0532 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 41


 855 0533 20       		.uleb128 0x20
 856 0534 64030000 		.4byte	0x364
 857 0538 96000000 		.4byte	.LBB69
 858 053c 06000000 		.4byte	.LBE69-.LBB69
 859 0540 04       		.byte	0x4
 860 0541 3F02     		.2byte	0x23f
 861 0543 56050000 		.4byte	0x556
 862 0547 22       		.uleb128 0x22
 863 0548 70030000 		.4byte	0x370
 864 054c 23       		.uleb128 0x23
 865 054d 9A000000 		.4byte	.LVL11
 866 0551 8E070000 		.4byte	0x78e
 867 0555 00       		.byte	0
 868 0556 23       		.uleb128 0x23
 869 0557 86000000 		.4byte	.LVL8
 870 055b 99070000 		.4byte	0x799
 871 055f 00       		.byte	0
 872 0560 00       		.byte	0
 873 0561 23       		.uleb128 0x23
 874 0562 58000000 		.4byte	.LVL6
 875 0566 A5070000 		.4byte	0x7a5
 876 056a 00       		.byte	0
 877 056b 00       		.byte	0
 878 056c 19       		.uleb128 0x19
 879 056d B2030000 		.4byte	0x3b2
 880 0571 A6000000 		.4byte	.LBB71
 881 0575 04000000 		.4byte	.LBE71-.LBB71
 882 0579 01       		.byte	0x1
 883 057a D8       		.byte	0xd8
 884 057b A2050000 		.4byte	0x5a2
 885 057f 21       		.uleb128 0x21
 886 0580 BE030000 		.4byte	0x3be
 887 0584 24010000 		.4byte	.LLST6
 888 0588 1A       		.uleb128 0x1a
 889 0589 C5020000 		.4byte	0x2c5
 890 058d A6000000 		.4byte	.LBB72
 891 0591 04000000 		.4byte	.LBE72-.LBB72
 892 0595 09       		.byte	0x9
 893 0596 6A       		.byte	0x6a
 894 0597 21       		.uleb128 0x21
 895 0598 D1020000 		.4byte	0x2d1
 896 059c 24010000 		.4byte	.LLST6
 897 05a0 00       		.byte	0
 898 05a1 00       		.byte	0
 899 05a2 24       		.uleb128 0x24
 900 05a3 48000000 		.4byte	.LVL5
 901 05a7 B1070000 		.4byte	0x7b1
 902 05ab 25       		.uleb128 0x25
 903 05ac 01       		.uleb128 0x1
 904 05ad 50       		.byte	0x50
 905 05ae 03       		.uleb128 0x3
 906 05af F3       		.byte	0xf3
 907 05b0 01       		.uleb128 0x1
 908 05b1 50       		.byte	0x50
 909 05b2 00       		.byte	0
 910 05b3 00       		.byte	0
 911 05b4 26       		.uleb128 0x26
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 42


 912 05b5 75070000 		.4byte	.LASF79
 913 05b9 03       		.byte	0x3
 914 05ba 44       		.byte	0x44
 915 05bb A9000000 		.4byte	0xa9
 916 05bf 26       		.uleb128 0x26
 917 05c0 38020000 		.4byte	.LASF80
 918 05c4 05       		.byte	0x5
 919 05c5 48       		.byte	0x48
 920 05c6 CA000000 		.4byte	0xca
 921 05ca 27       		.uleb128 0x27
 922 05cb E1050000 		.4byte	0x5e1
 923 05cf DA050000 		.4byte	0x5da
 924 05d3 28       		.uleb128 0x28
 925 05d4 DA050000 		.4byte	0x5da
 926 05d8 03       		.byte	0x3
 927 05d9 00       		.byte	0
 928 05da 02       		.uleb128 0x2
 929 05db 04       		.byte	0x4
 930 05dc 07       		.byte	0x7
 931 05dd DD030000 		.4byte	.LASF81
 932 05e1 29       		.uleb128 0x29
 933 05e2 A9000000 		.4byte	0xa9
 934 05e6 26       		.uleb128 0x26
 935 05e7 FB070000 		.4byte	.LASF82
 936 05eb 07       		.byte	0x7
 937 05ec B2       		.byte	0xb2
 938 05ed F1050000 		.4byte	0x5f1
 939 05f1 29       		.uleb128 0x29
 940 05f2 CA050000 		.4byte	0x5ca
 941 05f6 26       		.uleb128 0x26
 942 05f7 52030000 		.4byte	.LASF83
 943 05fb 07       		.byte	0x7
 944 05fc B3       		.byte	0xb3
 945 05fd 01060000 		.4byte	0x601
 946 0601 29       		.uleb128 0x29
 947 0602 CA050000 		.4byte	0x5ca
 948 0606 27       		.uleb128 0x27
 949 0607 A9000000 		.4byte	0xa9
 950 060b 16060000 		.4byte	0x616
 951 060f 28       		.uleb128 0x28
 952 0610 DA050000 		.4byte	0x5da
 953 0614 03       		.byte	0x3
 954 0615 00       		.byte	0
 955 0616 26       		.uleb128 0x26
 956 0617 2F030000 		.4byte	.LASF84
 957 061b 07       		.byte	0x7
 958 061c CA       		.byte	0xca
 959 061d 06060000 		.4byte	0x606
 960 0621 27       		.uleb128 0x27
 961 0622 CA000000 		.4byte	0xca
 962 0626 31060000 		.4byte	0x631
 963 062a 28       		.uleb128 0x28
 964 062b DA050000 		.4byte	0x5da
 965 062f 03       		.byte	0x3
 966 0630 00       		.byte	0
 967 0631 26       		.uleb128 0x26
 968 0632 45050000 		.4byte	.LASF85
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 43


 969 0636 07       		.byte	0x7
 970 0637 D2       		.byte	0xd2
 971 0638 21060000 		.4byte	0x621
 972 063c 26       		.uleb128 0x26
 973 063d A5060000 		.4byte	.LASF86
 974 0641 07       		.byte	0x7
 975 0642 DA       		.byte	0xda
 976 0643 06060000 		.4byte	0x606
 977 0647 26       		.uleb128 0x26
 978 0648 4E000000 		.4byte	.LASF87
 979 064c 07       		.byte	0x7
 980 064d E2       		.byte	0xe2
 981 064e CA000000 		.4byte	0xca
 982 0652 26       		.uleb128 0x26
 983 0653 92040000 		.4byte	.LASF88
 984 0657 07       		.byte	0x7
 985 0658 F7       		.byte	0xf7
 986 0659 A9000000 		.4byte	0xa9
 987 065d 2A       		.uleb128 0x2a
 988 065e BA050000 		.4byte	.LASF89
 989 0662 07       		.byte	0x7
 990 0663 3F01     		.2byte	0x13f
 991 0665 D5000000 		.4byte	0xd5
 992 0669 2A       		.uleb128 0x2a
 993 066a 50050000 		.4byte	.LASF90
 994 066e 07       		.byte	0x7
 995 066f 5C01     		.2byte	0x15c
 996 0671 06060000 		.4byte	0x606
 997 0675 2A       		.uleb128 0x2a
 998 0676 6D050000 		.4byte	.LASF91
 999 067a 07       		.byte	0x7
 1000 067b 6101     		.2byte	0x161
 1001 067d 06060000 		.4byte	0x606
 1002 0681 27       		.uleb128 0x27
 1003 0682 BF000000 		.4byte	0xbf
 1004 0686 91060000 		.4byte	0x691
 1005 068a 28       		.uleb128 0x28
 1006 068b DA050000 		.4byte	0x5da
 1007 068f 03       		.byte	0x3
 1008 0690 00       		.byte	0
 1009 0691 2A       		.uleb128 0x2a
 1010 0692 B9020000 		.4byte	.LASF92
 1011 0696 07       		.byte	0x7
 1012 0697 6701     		.2byte	0x167
 1013 0699 81060000 		.4byte	0x681
 1014 069d 27       		.uleb128 0x27
 1015 069e AD060000 		.4byte	0x6ad
 1016 06a2 AD060000 		.4byte	0x6ad
 1017 06a6 28       		.uleb128 0x28
 1018 06a7 DA050000 		.4byte	0x5da
 1019 06ab 03       		.byte	0x3
 1020 06ac 00       		.byte	0
 1021 06ad 29       		.uleb128 0x29
 1022 06ae BF000000 		.4byte	0xbf
 1023 06b2 2A       		.uleb128 0x2a
 1024 06b3 24080000 		.4byte	.LASF93
 1025 06b7 07       		.byte	0x7
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 44


 1026 06b8 7401     		.2byte	0x174
 1027 06ba BE060000 		.4byte	0x6be
 1028 06be 29       		.uleb128 0x29
 1029 06bf 9D060000 		.4byte	0x69d
 1030 06c3 27       		.uleb128 0x27
 1031 06c4 D3060000 		.4byte	0x6d3
 1032 06c8 D3060000 		.4byte	0x6d3
 1033 06cc 28       		.uleb128 0x28
 1034 06cd DA050000 		.4byte	0x5da
 1035 06d1 00       		.byte	0
 1036 06d2 00       		.byte	0
 1037 06d3 29       		.uleb128 0x29
 1038 06d4 4E010000 		.4byte	0x14e
 1039 06d8 2A       		.uleb128 0x2a
 1040 06d9 D6040000 		.4byte	.LASF94
 1041 06dd 07       		.byte	0x7
 1042 06de CA02     		.2byte	0x2ca
 1043 06e0 E4060000 		.4byte	0x6e4
 1044 06e4 29       		.uleb128 0x29
 1045 06e5 C3060000 		.4byte	0x6c3
 1046 06e9 27       		.uleb128 0x27
 1047 06ea F9060000 		.4byte	0x6f9
 1048 06ee F9060000 		.4byte	0x6f9
 1049 06f2 28       		.uleb128 0x28
 1050 06f3 DA050000 		.4byte	0x5da
 1051 06f7 01       		.byte	0x1
 1052 06f8 00       		.byte	0
 1053 06f9 29       		.uleb128 0x29
 1054 06fa EB010000 		.4byte	0x1eb
 1055 06fe 2A       		.uleb128 0x2a
 1056 06ff 7B030000 		.4byte	.LASF95
 1057 0703 07       		.byte	0x7
 1058 0704 DD02     		.2byte	0x2dd
 1059 0706 0A070000 		.4byte	0x70a
 1060 070a 29       		.uleb128 0x29
 1061 070b E9060000 		.4byte	0x6e9
 1062 070f 27       		.uleb128 0x27
 1063 0710 7E010000 		.4byte	0x17e
 1064 0714 1F070000 		.4byte	0x71f
 1065 0718 28       		.uleb128 0x28
 1066 0719 DA050000 		.4byte	0x5da
 1067 071d 00       		.byte	0
 1068 071e 00       		.byte	0
 1069 071f 2A       		.uleb128 0x2a
 1070 0720 23060000 		.4byte	.LASF96
 1071 0724 07       		.byte	0x7
 1072 0725 FB02     		.2byte	0x2fb
 1073 0727 0F070000 		.4byte	0x70f
 1074 072b 27       		.uleb128 0x27
 1075 072c 35020000 		.4byte	0x235
 1076 0730 3B070000 		.4byte	0x73b
 1077 0734 28       		.uleb128 0x28
 1078 0735 DA050000 		.4byte	0x5da
 1079 0739 01       		.byte	0x1
 1080 073a 00       		.byte	0
 1081 073b 2A       		.uleb128 0x2a
 1082 073c AC000000 		.4byte	.LASF97
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 45


 1083 0740 07       		.byte	0x7
 1084 0741 0403     		.2byte	0x304
 1085 0743 2B070000 		.4byte	0x72b
 1086 0747 26       		.uleb128 0x26
 1087 0748 E2020000 		.4byte	.LASF98
 1088 074c 0A       		.byte	0xa
 1089 074d 40       		.byte	0x40
 1090 074e A9000000 		.4byte	0xa9
 1091 0752 26       		.uleb128 0x26
 1092 0753 1F020000 		.4byte	.LASF99
 1093 0757 0A       		.byte	0xa
 1094 0758 47       		.byte	0x47
 1095 0759 B4000000 		.4byte	0xb4
 1096 075d 26       		.uleb128 0x26
 1097 075e 09040000 		.4byte	.LASF100
 1098 0762 0A       		.byte	0xa
 1099 0763 4A       		.byte	0x4a
 1100 0764 A9000000 		.4byte	0xa9
 1101 0768 27       		.uleb128 0x27
 1102 0769 78070000 		.4byte	0x778
 1103 076d 78070000 		.4byte	0x778
 1104 0771 28       		.uleb128 0x28
 1105 0772 DA050000 		.4byte	0x5da
 1106 0776 FF       		.byte	0xff
 1107 0777 00       		.byte	0
 1108 0778 29       		.uleb128 0x29
 1109 0779 7D000000 		.4byte	0x7d
 1110 077d 2A       		.uleb128 0x2a
 1111 077e C5010000 		.4byte	.LASF101
 1112 0782 04       		.byte	0x4
 1113 0783 AB01     		.2byte	0x1ab
 1114 0785 89070000 		.4byte	0x789
 1115 0789 29       		.uleb128 0x29
 1116 078a 68070000 		.4byte	0x768
 1117 078e 2B       		.uleb128 0x2b
 1118 078f B1060000 		.4byte	.LASF102
 1119 0793 B1060000 		.4byte	.LASF102
 1120 0797 05       		.byte	0x5
 1121 0798 4F       		.byte	0x4f
 1122 0799 2C       		.uleb128 0x2c
 1123 079a CA030000 		.4byte	.LASF103
 1124 079e CA030000 		.4byte	.LASF103
 1125 07a2 04       		.byte	0x4
 1126 07a3 E901     		.2byte	0x1e9
 1127 07a5 2C       		.uleb128 0x2c
 1128 07a6 5A020000 		.4byte	.LASF104
 1129 07aa 5A020000 		.4byte	.LASF104
 1130 07ae 04       		.byte	0x4
 1131 07af CB01     		.2byte	0x1cb
 1132 07b1 2C       		.uleb128 0x2c
 1133 07b2 02010000 		.4byte	.LASF105
 1134 07b6 02010000 		.4byte	.LASF105
 1135 07ba 04       		.byte	0x4
 1136 07bb E401     		.2byte	0x1e4
 1137 07bd 00       		.byte	0
 1138              		.section	.debug_abbrev,"",%progbits
 1139              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 46


 1140 0000 01       		.uleb128 0x1
 1141 0001 11       		.uleb128 0x11
 1142 0002 01       		.byte	0x1
 1143 0003 25       		.uleb128 0x25
 1144 0004 0E       		.uleb128 0xe
 1145 0005 13       		.uleb128 0x13
 1146 0006 0B       		.uleb128 0xb
 1147 0007 03       		.uleb128 0x3
 1148 0008 0E       		.uleb128 0xe
 1149 0009 1B       		.uleb128 0x1b
 1150 000a 0E       		.uleb128 0xe
 1151 000b 55       		.uleb128 0x55
 1152 000c 17       		.uleb128 0x17
 1153 000d 11       		.uleb128 0x11
 1154 000e 01       		.uleb128 0x1
 1155 000f 10       		.uleb128 0x10
 1156 0010 17       		.uleb128 0x17
 1157 0011 00       		.byte	0
 1158 0012 00       		.byte	0
 1159 0013 02       		.uleb128 0x2
 1160 0014 24       		.uleb128 0x24
 1161 0015 00       		.byte	0
 1162 0016 0B       		.uleb128 0xb
 1163 0017 0B       		.uleb128 0xb
 1164 0018 3E       		.uleb128 0x3e
 1165 0019 0B       		.uleb128 0xb
 1166 001a 03       		.uleb128 0x3
 1167 001b 0E       		.uleb128 0xe
 1168 001c 00       		.byte	0
 1169 001d 00       		.byte	0
 1170 001e 03       		.uleb128 0x3
 1171 001f 24       		.uleb128 0x24
 1172 0020 00       		.byte	0
 1173 0021 0B       		.uleb128 0xb
 1174 0022 0B       		.uleb128 0xb
 1175 0023 3E       		.uleb128 0x3e
 1176 0024 0B       		.uleb128 0xb
 1177 0025 03       		.uleb128 0x3
 1178 0026 08       		.uleb128 0x8
 1179 0027 00       		.byte	0
 1180 0028 00       		.byte	0
 1181 0029 04       		.uleb128 0x4
 1182 002a 16       		.uleb128 0x16
 1183 002b 00       		.byte	0
 1184 002c 03       		.uleb128 0x3
 1185 002d 0E       		.uleb128 0xe
 1186 002e 3A       		.uleb128 0x3a
 1187 002f 0B       		.uleb128 0xb
 1188 0030 3B       		.uleb128 0x3b
 1189 0031 0B       		.uleb128 0xb
 1190 0032 49       		.uleb128 0x49
 1191 0033 13       		.uleb128 0x13
 1192 0034 00       		.byte	0
 1193 0035 00       		.byte	0
 1194 0036 05       		.uleb128 0x5
 1195 0037 16       		.uleb128 0x16
 1196 0038 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 47


 1197 0039 03       		.uleb128 0x3
 1198 003a 0E       		.uleb128 0xe
 1199 003b 3A       		.uleb128 0x3a
 1200 003c 0B       		.uleb128 0xb
 1201 003d 3B       		.uleb128 0x3b
 1202 003e 05       		.uleb128 0x5
 1203 003f 49       		.uleb128 0x49
 1204 0040 13       		.uleb128 0x13
 1205 0041 00       		.byte	0
 1206 0042 00       		.byte	0
 1207 0043 06       		.uleb128 0x6
 1208 0044 13       		.uleb128 0x13
 1209 0045 01       		.byte	0x1
 1210 0046 0B       		.uleb128 0xb
 1211 0047 0B       		.uleb128 0xb
 1212 0048 3A       		.uleb128 0x3a
 1213 0049 0B       		.uleb128 0xb
 1214 004a 3B       		.uleb128 0x3b
 1215 004b 05       		.uleb128 0x5
 1216 004c 01       		.uleb128 0x1
 1217 004d 13       		.uleb128 0x13
 1218 004e 00       		.byte	0
 1219 004f 00       		.byte	0
 1220 0050 07       		.uleb128 0x7
 1221 0051 0D       		.uleb128 0xd
 1222 0052 00       		.byte	0
 1223 0053 03       		.uleb128 0x3
 1224 0054 0E       		.uleb128 0xe
 1225 0055 3A       		.uleb128 0x3a
 1226 0056 0B       		.uleb128 0xb
 1227 0057 3B       		.uleb128 0x3b
 1228 0058 05       		.uleb128 0x5
 1229 0059 49       		.uleb128 0x49
 1230 005a 13       		.uleb128 0x13
 1231 005b 38       		.uleb128 0x38
 1232 005c 0B       		.uleb128 0xb
 1233 005d 00       		.byte	0
 1234 005e 00       		.byte	0
 1235 005f 08       		.uleb128 0x8
 1236 0060 04       		.uleb128 0x4
 1237 0061 01       		.byte	0x1
 1238 0062 0B       		.uleb128 0xb
 1239 0063 0B       		.uleb128 0xb
 1240 0064 49       		.uleb128 0x49
 1241 0065 13       		.uleb128 0x13
 1242 0066 3A       		.uleb128 0x3a
 1243 0067 0B       		.uleb128 0xb
 1244 0068 3B       		.uleb128 0x3b
 1245 0069 05       		.uleb128 0x5
 1246 006a 01       		.uleb128 0x1
 1247 006b 13       		.uleb128 0x13
 1248 006c 00       		.byte	0
 1249 006d 00       		.byte	0
 1250 006e 09       		.uleb128 0x9
 1251 006f 28       		.uleb128 0x28
 1252 0070 00       		.byte	0
 1253 0071 03       		.uleb128 0x3
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 48


 1254 0072 0E       		.uleb128 0xe
 1255 0073 1C       		.uleb128 0x1c
 1256 0074 0B       		.uleb128 0xb
 1257 0075 00       		.byte	0
 1258 0076 00       		.byte	0
 1259 0077 0A       		.uleb128 0xa
 1260 0078 0D       		.uleb128 0xd
 1261 0079 00       		.byte	0
 1262 007a 03       		.uleb128 0x3
 1263 007b 08       		.uleb128 0x8
 1264 007c 3A       		.uleb128 0x3a
 1265 007d 0B       		.uleb128 0xb
 1266 007e 3B       		.uleb128 0x3b
 1267 007f 05       		.uleb128 0x5
 1268 0080 49       		.uleb128 0x49
 1269 0081 13       		.uleb128 0x13
 1270 0082 38       		.uleb128 0x38
 1271 0083 0B       		.uleb128 0xb
 1272 0084 00       		.byte	0
 1273 0085 00       		.byte	0
 1274 0086 0B       		.uleb128 0xb
 1275 0087 2E       		.uleb128 0x2e
 1276 0088 01       		.byte	0x1
 1277 0089 03       		.uleb128 0x3
 1278 008a 0E       		.uleb128 0xe
 1279 008b 3A       		.uleb128 0x3a
 1280 008c 0B       		.uleb128 0xb
 1281 008d 3B       		.uleb128 0x3b
 1282 008e 0B       		.uleb128 0xb
 1283 008f 27       		.uleb128 0x27
 1284 0090 19       		.uleb128 0x19
 1285 0091 49       		.uleb128 0x49
 1286 0092 13       		.uleb128 0x13
 1287 0093 20       		.uleb128 0x20
 1288 0094 0B       		.uleb128 0xb
 1289 0095 01       		.uleb128 0x1
 1290 0096 13       		.uleb128 0x13
 1291 0097 00       		.byte	0
 1292 0098 00       		.byte	0
 1293 0099 0C       		.uleb128 0xc
 1294 009a 34       		.uleb128 0x34
 1295 009b 00       		.byte	0
 1296 009c 03       		.uleb128 0x3
 1297 009d 0E       		.uleb128 0xe
 1298 009e 3A       		.uleb128 0x3a
 1299 009f 0B       		.uleb128 0xb
 1300 00a0 3B       		.uleb128 0x3b
 1301 00a1 0B       		.uleb128 0xb
 1302 00a2 49       		.uleb128 0x49
 1303 00a3 13       		.uleb128 0x13
 1304 00a4 00       		.byte	0
 1305 00a5 00       		.byte	0
 1306 00a6 0D       		.uleb128 0xd
 1307 00a7 2E       		.uleb128 0x2e
 1308 00a8 01       		.byte	0x1
 1309 00a9 03       		.uleb128 0x3
 1310 00aa 0E       		.uleb128 0xe
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 49


 1311 00ab 3A       		.uleb128 0x3a
 1312 00ac 0B       		.uleb128 0xb
 1313 00ad 3B       		.uleb128 0x3b
 1314 00ae 0B       		.uleb128 0xb
 1315 00af 27       		.uleb128 0x27
 1316 00b0 19       		.uleb128 0x19
 1317 00b1 20       		.uleb128 0x20
 1318 00b2 0B       		.uleb128 0xb
 1319 00b3 01       		.uleb128 0x1
 1320 00b4 13       		.uleb128 0x13
 1321 00b5 00       		.byte	0
 1322 00b6 00       		.byte	0
 1323 00b7 0E       		.uleb128 0xe
 1324 00b8 05       		.uleb128 0x5
 1325 00b9 00       		.byte	0
 1326 00ba 03       		.uleb128 0x3
 1327 00bb 08       		.uleb128 0x8
 1328 00bc 3A       		.uleb128 0x3a
 1329 00bd 0B       		.uleb128 0xb
 1330 00be 3B       		.uleb128 0x3b
 1331 00bf 0B       		.uleb128 0xb
 1332 00c0 49       		.uleb128 0x49
 1333 00c1 13       		.uleb128 0x13
 1334 00c2 00       		.byte	0
 1335 00c3 00       		.byte	0
 1336 00c4 0F       		.uleb128 0xf
 1337 00c5 2E       		.uleb128 0x2e
 1338 00c6 01       		.byte	0x1
 1339 00c7 03       		.uleb128 0x3
 1340 00c8 0E       		.uleb128 0xe
 1341 00c9 3A       		.uleb128 0x3a
 1342 00ca 0B       		.uleb128 0xb
 1343 00cb 3B       		.uleb128 0x3b
 1344 00cc 05       		.uleb128 0x5
 1345 00cd 27       		.uleb128 0x27
 1346 00ce 19       		.uleb128 0x19
 1347 00cf 20       		.uleb128 0x20
 1348 00d0 0B       		.uleb128 0xb
 1349 00d1 01       		.uleb128 0x1
 1350 00d2 13       		.uleb128 0x13
 1351 00d3 00       		.byte	0
 1352 00d4 00       		.byte	0
 1353 00d5 10       		.uleb128 0x10
 1354 00d6 05       		.uleb128 0x5
 1355 00d7 00       		.byte	0
 1356 00d8 03       		.uleb128 0x3
 1357 00d9 08       		.uleb128 0x8
 1358 00da 3A       		.uleb128 0x3a
 1359 00db 0B       		.uleb128 0xb
 1360 00dc 3B       		.uleb128 0x3b
 1361 00dd 05       		.uleb128 0x5
 1362 00de 49       		.uleb128 0x49
 1363 00df 13       		.uleb128 0x13
 1364 00e0 00       		.byte	0
 1365 00e1 00       		.byte	0
 1366 00e2 11       		.uleb128 0x11
 1367 00e3 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 50


 1368 00e4 00       		.byte	0
 1369 00e5 03       		.uleb128 0x3
 1370 00e6 0E       		.uleb128 0xe
 1371 00e7 3A       		.uleb128 0x3a
 1372 00e8 0B       		.uleb128 0xb
 1373 00e9 3B       		.uleb128 0x3b
 1374 00ea 05       		.uleb128 0x5
 1375 00eb 27       		.uleb128 0x27
 1376 00ec 19       		.uleb128 0x19
 1377 00ed 20       		.uleb128 0x20
 1378 00ee 0B       		.uleb128 0xb
 1379 00ef 00       		.byte	0
 1380 00f0 00       		.byte	0
 1381 00f1 12       		.uleb128 0x12
 1382 00f2 2E       		.uleb128 0x2e
 1383 00f3 00       		.byte	0
 1384 00f4 03       		.uleb128 0x3
 1385 00f5 0E       		.uleb128 0xe
 1386 00f6 3A       		.uleb128 0x3a
 1387 00f7 0B       		.uleb128 0xb
 1388 00f8 3B       		.uleb128 0x3b
 1389 00f9 0B       		.uleb128 0xb
 1390 00fa 27       		.uleb128 0x27
 1391 00fb 19       		.uleb128 0x19
 1392 00fc 49       		.uleb128 0x49
 1393 00fd 13       		.uleb128 0x13
 1394 00fe 20       		.uleb128 0x20
 1395 00ff 0B       		.uleb128 0xb
 1396 0100 00       		.byte	0
 1397 0101 00       		.byte	0
 1398 0102 13       		.uleb128 0x13
 1399 0103 34       		.uleb128 0x34
 1400 0104 00       		.byte	0
 1401 0105 03       		.uleb128 0x3
 1402 0106 0E       		.uleb128 0xe
 1403 0107 3A       		.uleb128 0x3a
 1404 0108 0B       		.uleb128 0xb
 1405 0109 3B       		.uleb128 0x3b
 1406 010a 05       		.uleb128 0x5
 1407 010b 49       		.uleb128 0x49
 1408 010c 13       		.uleb128 0x13
 1409 010d 00       		.byte	0
 1410 010e 00       		.byte	0
 1411 010f 14       		.uleb128 0x14
 1412 0110 34       		.uleb128 0x34
 1413 0111 00       		.byte	0
 1414 0112 03       		.uleb128 0x3
 1415 0113 08       		.uleb128 0x8
 1416 0114 3A       		.uleb128 0x3a
 1417 0115 0B       		.uleb128 0xb
 1418 0116 3B       		.uleb128 0x3b
 1419 0117 05       		.uleb128 0x5
 1420 0118 49       		.uleb128 0x49
 1421 0119 13       		.uleb128 0x13
 1422 011a 00       		.byte	0
 1423 011b 00       		.byte	0
 1424 011c 15       		.uleb128 0x15
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 51


 1425 011d 2E       		.uleb128 0x2e
 1426 011e 01       		.byte	0x1
 1427 011f 3F       		.uleb128 0x3f
 1428 0120 19       		.uleb128 0x19
 1429 0121 03       		.uleb128 0x3
 1430 0122 0E       		.uleb128 0xe
 1431 0123 3A       		.uleb128 0x3a
 1432 0124 0B       		.uleb128 0xb
 1433 0125 3B       		.uleb128 0x3b
 1434 0126 0B       		.uleb128 0xb
 1435 0127 27       		.uleb128 0x27
 1436 0128 19       		.uleb128 0x19
 1437 0129 49       		.uleb128 0x49
 1438 012a 13       		.uleb128 0x13
 1439 012b 11       		.uleb128 0x11
 1440 012c 01       		.uleb128 0x1
 1441 012d 12       		.uleb128 0x12
 1442 012e 06       		.uleb128 0x6
 1443 012f 40       		.uleb128 0x40
 1444 0130 18       		.uleb128 0x18
 1445 0131 9742     		.uleb128 0x2117
 1446 0133 19       		.uleb128 0x19
 1447 0134 01       		.uleb128 0x1
 1448 0135 13       		.uleb128 0x13
 1449 0136 00       		.byte	0
 1450 0137 00       		.byte	0
 1451 0138 16       		.uleb128 0x16
 1452 0139 05       		.uleb128 0x5
 1453 013a 00       		.byte	0
 1454 013b 03       		.uleb128 0x3
 1455 013c 0E       		.uleb128 0xe
 1456 013d 3A       		.uleb128 0x3a
 1457 013e 0B       		.uleb128 0xb
 1458 013f 3B       		.uleb128 0x3b
 1459 0140 0B       		.uleb128 0xb
 1460 0141 49       		.uleb128 0x49
 1461 0142 13       		.uleb128 0x13
 1462 0143 02       		.uleb128 0x2
 1463 0144 17       		.uleb128 0x17
 1464 0145 00       		.byte	0
 1465 0146 00       		.byte	0
 1466 0147 17       		.uleb128 0x17
 1467 0148 34       		.uleb128 0x34
 1468 0149 00       		.byte	0
 1469 014a 03       		.uleb128 0x3
 1470 014b 08       		.uleb128 0x8
 1471 014c 3A       		.uleb128 0x3a
 1472 014d 0B       		.uleb128 0xb
 1473 014e 3B       		.uleb128 0x3b
 1474 014f 0B       		.uleb128 0xb
 1475 0150 49       		.uleb128 0x49
 1476 0151 13       		.uleb128 0x13
 1477 0152 02       		.uleb128 0x2
 1478 0153 18       		.uleb128 0x18
 1479 0154 00       		.byte	0
 1480 0155 00       		.byte	0
 1481 0156 18       		.uleb128 0x18
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 52


 1482 0157 34       		.uleb128 0x34
 1483 0158 00       		.byte	0
 1484 0159 03       		.uleb128 0x3
 1485 015a 0E       		.uleb128 0xe
 1486 015b 3A       		.uleb128 0x3a
 1487 015c 0B       		.uleb128 0xb
 1488 015d 3B       		.uleb128 0x3b
 1489 015e 0B       		.uleb128 0xb
 1490 015f 49       		.uleb128 0x49
 1491 0160 13       		.uleb128 0x13
 1492 0161 02       		.uleb128 0x2
 1493 0162 18       		.uleb128 0x18
 1494 0163 00       		.byte	0
 1495 0164 00       		.byte	0
 1496 0165 19       		.uleb128 0x19
 1497 0166 1D       		.uleb128 0x1d
 1498 0167 01       		.byte	0x1
 1499 0168 31       		.uleb128 0x31
 1500 0169 13       		.uleb128 0x13
 1501 016a 11       		.uleb128 0x11
 1502 016b 01       		.uleb128 0x1
 1503 016c 12       		.uleb128 0x12
 1504 016d 06       		.uleb128 0x6
 1505 016e 58       		.uleb128 0x58
 1506 016f 0B       		.uleb128 0xb
 1507 0170 59       		.uleb128 0x59
 1508 0171 0B       		.uleb128 0xb
 1509 0172 01       		.uleb128 0x1
 1510 0173 13       		.uleb128 0x13
 1511 0174 00       		.byte	0
 1512 0175 00       		.byte	0
 1513 0176 1A       		.uleb128 0x1a
 1514 0177 1D       		.uleb128 0x1d
 1515 0178 01       		.byte	0x1
 1516 0179 31       		.uleb128 0x31
 1517 017a 13       		.uleb128 0x13
 1518 017b 11       		.uleb128 0x11
 1519 017c 01       		.uleb128 0x1
 1520 017d 12       		.uleb128 0x12
 1521 017e 06       		.uleb128 0x6
 1522 017f 58       		.uleb128 0x58
 1523 0180 0B       		.uleb128 0xb
 1524 0181 59       		.uleb128 0x59
 1525 0182 0B       		.uleb128 0xb
 1526 0183 00       		.byte	0
 1527 0184 00       		.byte	0
 1528 0185 1B       		.uleb128 0x1b
 1529 0186 0B       		.uleb128 0xb
 1530 0187 01       		.byte	0x1
 1531 0188 11       		.uleb128 0x11
 1532 0189 01       		.uleb128 0x1
 1533 018a 12       		.uleb128 0x12
 1534 018b 06       		.uleb128 0x6
 1535 018c 00       		.byte	0
 1536 018d 00       		.byte	0
 1537 018e 1C       		.uleb128 0x1c
 1538 018f 34       		.uleb128 0x34
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 53


 1539 0190 00       		.byte	0
 1540 0191 31       		.uleb128 0x31
 1541 0192 13       		.uleb128 0x13
 1542 0193 02       		.uleb128 0x2
 1543 0194 17       		.uleb128 0x17
 1544 0195 00       		.byte	0
 1545 0196 00       		.byte	0
 1546 0197 1D       		.uleb128 0x1d
 1547 0198 1D       		.uleb128 0x1d
 1548 0199 00       		.byte	0
 1549 019a 31       		.uleb128 0x31
 1550 019b 13       		.uleb128 0x13
 1551 019c 11       		.uleb128 0x11
 1552 019d 01       		.uleb128 0x1
 1553 019e 12       		.uleb128 0x12
 1554 019f 06       		.uleb128 0x6
 1555 01a0 58       		.uleb128 0x58
 1556 01a1 0B       		.uleb128 0xb
 1557 01a2 59       		.uleb128 0x59
 1558 01a3 0B       		.uleb128 0xb
 1559 01a4 00       		.byte	0
 1560 01a5 00       		.byte	0
 1561 01a6 1E       		.uleb128 0x1e
 1562 01a7 34       		.uleb128 0x34
 1563 01a8 00       		.byte	0
 1564 01a9 31       		.uleb128 0x31
 1565 01aa 13       		.uleb128 0x13
 1566 01ab 00       		.byte	0
 1567 01ac 00       		.byte	0
 1568 01ad 1F       		.uleb128 0x1f
 1569 01ae 1D       		.uleb128 0x1d
 1570 01af 00       		.byte	0
 1571 01b0 31       		.uleb128 0x31
 1572 01b1 13       		.uleb128 0x13
 1573 01b2 11       		.uleb128 0x11
 1574 01b3 01       		.uleb128 0x1
 1575 01b4 12       		.uleb128 0x12
 1576 01b5 06       		.uleb128 0x6
 1577 01b6 58       		.uleb128 0x58
 1578 01b7 0B       		.uleb128 0xb
 1579 01b8 59       		.uleb128 0x59
 1580 01b9 05       		.uleb128 0x5
 1581 01ba 00       		.byte	0
 1582 01bb 00       		.byte	0
 1583 01bc 20       		.uleb128 0x20
 1584 01bd 1D       		.uleb128 0x1d
 1585 01be 01       		.byte	0x1
 1586 01bf 31       		.uleb128 0x31
 1587 01c0 13       		.uleb128 0x13
 1588 01c1 11       		.uleb128 0x11
 1589 01c2 01       		.uleb128 0x1
 1590 01c3 12       		.uleb128 0x12
 1591 01c4 06       		.uleb128 0x6
 1592 01c5 58       		.uleb128 0x58
 1593 01c6 0B       		.uleb128 0xb
 1594 01c7 59       		.uleb128 0x59
 1595 01c8 05       		.uleb128 0x5
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 54


 1596 01c9 01       		.uleb128 0x1
 1597 01ca 13       		.uleb128 0x13
 1598 01cb 00       		.byte	0
 1599 01cc 00       		.byte	0
 1600 01cd 21       		.uleb128 0x21
 1601 01ce 05       		.uleb128 0x5
 1602 01cf 00       		.byte	0
 1603 01d0 31       		.uleb128 0x31
 1604 01d1 13       		.uleb128 0x13
 1605 01d2 02       		.uleb128 0x2
 1606 01d3 17       		.uleb128 0x17
 1607 01d4 00       		.byte	0
 1608 01d5 00       		.byte	0
 1609 01d6 22       		.uleb128 0x22
 1610 01d7 05       		.uleb128 0x5
 1611 01d8 00       		.byte	0
 1612 01d9 31       		.uleb128 0x31
 1613 01da 13       		.uleb128 0x13
 1614 01db 00       		.byte	0
 1615 01dc 00       		.byte	0
 1616 01dd 23       		.uleb128 0x23
 1617 01de 898201   		.uleb128 0x4109
 1618 01e1 00       		.byte	0
 1619 01e2 11       		.uleb128 0x11
 1620 01e3 01       		.uleb128 0x1
 1621 01e4 31       		.uleb128 0x31
 1622 01e5 13       		.uleb128 0x13
 1623 01e6 00       		.byte	0
 1624 01e7 00       		.byte	0
 1625 01e8 24       		.uleb128 0x24
 1626 01e9 898201   		.uleb128 0x4109
 1627 01ec 01       		.byte	0x1
 1628 01ed 11       		.uleb128 0x11
 1629 01ee 01       		.uleb128 0x1
 1630 01ef 31       		.uleb128 0x31
 1631 01f0 13       		.uleb128 0x13
 1632 01f1 00       		.byte	0
 1633 01f2 00       		.byte	0
 1634 01f3 25       		.uleb128 0x25
 1635 01f4 8A8201   		.uleb128 0x410a
 1636 01f7 00       		.byte	0
 1637 01f8 02       		.uleb128 0x2
 1638 01f9 18       		.uleb128 0x18
 1639 01fa 9142     		.uleb128 0x2111
 1640 01fc 18       		.uleb128 0x18
 1641 01fd 00       		.byte	0
 1642 01fe 00       		.byte	0
 1643 01ff 26       		.uleb128 0x26
 1644 0200 34       		.uleb128 0x34
 1645 0201 00       		.byte	0
 1646 0202 03       		.uleb128 0x3
 1647 0203 0E       		.uleb128 0xe
 1648 0204 3A       		.uleb128 0x3a
 1649 0205 0B       		.uleb128 0xb
 1650 0206 3B       		.uleb128 0x3b
 1651 0207 0B       		.uleb128 0xb
 1652 0208 49       		.uleb128 0x49
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 55


 1653 0209 13       		.uleb128 0x13
 1654 020a 3F       		.uleb128 0x3f
 1655 020b 19       		.uleb128 0x19
 1656 020c 3C       		.uleb128 0x3c
 1657 020d 19       		.uleb128 0x19
 1658 020e 00       		.byte	0
 1659 020f 00       		.byte	0
 1660 0210 27       		.uleb128 0x27
 1661 0211 01       		.uleb128 0x1
 1662 0212 01       		.byte	0x1
 1663 0213 49       		.uleb128 0x49
 1664 0214 13       		.uleb128 0x13
 1665 0215 01       		.uleb128 0x1
 1666 0216 13       		.uleb128 0x13
 1667 0217 00       		.byte	0
 1668 0218 00       		.byte	0
 1669 0219 28       		.uleb128 0x28
 1670 021a 21       		.uleb128 0x21
 1671 021b 00       		.byte	0
 1672 021c 49       		.uleb128 0x49
 1673 021d 13       		.uleb128 0x13
 1674 021e 2F       		.uleb128 0x2f
 1675 021f 0B       		.uleb128 0xb
 1676 0220 00       		.byte	0
 1677 0221 00       		.byte	0
 1678 0222 29       		.uleb128 0x29
 1679 0223 26       		.uleb128 0x26
 1680 0224 00       		.byte	0
 1681 0225 49       		.uleb128 0x49
 1682 0226 13       		.uleb128 0x13
 1683 0227 00       		.byte	0
 1684 0228 00       		.byte	0
 1685 0229 2A       		.uleb128 0x2a
 1686 022a 34       		.uleb128 0x34
 1687 022b 00       		.byte	0
 1688 022c 03       		.uleb128 0x3
 1689 022d 0E       		.uleb128 0xe
 1690 022e 3A       		.uleb128 0x3a
 1691 022f 0B       		.uleb128 0xb
 1692 0230 3B       		.uleb128 0x3b
 1693 0231 05       		.uleb128 0x5
 1694 0232 49       		.uleb128 0x49
 1695 0233 13       		.uleb128 0x13
 1696 0234 3F       		.uleb128 0x3f
 1697 0235 19       		.uleb128 0x19
 1698 0236 3C       		.uleb128 0x3c
 1699 0237 19       		.uleb128 0x19
 1700 0238 00       		.byte	0
 1701 0239 00       		.byte	0
 1702 023a 2B       		.uleb128 0x2b
 1703 023b 2E       		.uleb128 0x2e
 1704 023c 00       		.byte	0
 1705 023d 3F       		.uleb128 0x3f
 1706 023e 19       		.uleb128 0x19
 1707 023f 3C       		.uleb128 0x3c
 1708 0240 19       		.uleb128 0x19
 1709 0241 6E       		.uleb128 0x6e
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 56


 1710 0242 0E       		.uleb128 0xe
 1711 0243 03       		.uleb128 0x3
 1712 0244 0E       		.uleb128 0xe
 1713 0245 3A       		.uleb128 0x3a
 1714 0246 0B       		.uleb128 0xb
 1715 0247 3B       		.uleb128 0x3b
 1716 0248 0B       		.uleb128 0xb
 1717 0249 00       		.byte	0
 1718 024a 00       		.byte	0
 1719 024b 2C       		.uleb128 0x2c
 1720 024c 2E       		.uleb128 0x2e
 1721 024d 00       		.byte	0
 1722 024e 3F       		.uleb128 0x3f
 1723 024f 19       		.uleb128 0x19
 1724 0250 3C       		.uleb128 0x3c
 1725 0251 19       		.uleb128 0x19
 1726 0252 6E       		.uleb128 0x6e
 1727 0253 0E       		.uleb128 0xe
 1728 0254 03       		.uleb128 0x3
 1729 0255 0E       		.uleb128 0xe
 1730 0256 3A       		.uleb128 0x3a
 1731 0257 0B       		.uleb128 0xb
 1732 0258 3B       		.uleb128 0x3b
 1733 0259 05       		.uleb128 0x5
 1734 025a 00       		.byte	0
 1735 025b 00       		.byte	0
 1736 025c 00       		.byte	0
 1737              		.section	.debug_loc,"",%progbits
 1738              	.Ldebug_loc0:
 1739              	.LLST0:
 1740 0000 00000000 		.4byte	.LVL0
 1741 0004 36000000 		.4byte	.LVL3
 1742 0008 0100     		.2byte	0x1
 1743 000a 50       		.byte	0x50
 1744 000b 36000000 		.4byte	.LVL3
 1745 000f 3A000000 		.4byte	.LVL4
 1746 0013 0400     		.2byte	0x4
 1747 0015 F3       		.byte	0xf3
 1748 0016 01       		.uleb128 0x1
 1749 0017 50       		.byte	0x50
 1750 0018 9F       		.byte	0x9f
 1751 0019 3A000000 		.4byte	.LVL4
 1752 001d 47000000 		.4byte	.LVL5-1
 1753 0021 0100     		.2byte	0x1
 1754 0023 50       		.byte	0x50
 1755 0024 47000000 		.4byte	.LVL5-1
 1756 0028 9C000000 		.4byte	.LVL12
 1757 002c 0400     		.2byte	0x4
 1758 002e F3       		.byte	0xf3
 1759 002f 01       		.uleb128 0x1
 1760 0030 50       		.byte	0x50
 1761 0031 9F       		.byte	0x9f
 1762 0032 9C000000 		.4byte	.LVL12
 1763 0036 9E000000 		.4byte	.LVL13
 1764 003a 0100     		.2byte	0x1
 1765 003c 50       		.byte	0x50
 1766 003d 9E000000 		.4byte	.LVL13
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 57


 1767 0041 A0000000 		.4byte	.LVL14
 1768 0045 0400     		.2byte	0x4
 1769 0047 F3       		.byte	0xf3
 1770 0048 01       		.uleb128 0x1
 1771 0049 50       		.byte	0x50
 1772 004a 9F       		.byte	0x9f
 1773 004b A0000000 		.4byte	.LVL14
 1774 004f A2000000 		.4byte	.LVL15
 1775 0053 0100     		.2byte	0x1
 1776 0055 50       		.byte	0x50
 1777 0056 A2000000 		.4byte	.LVL15
 1778 005a A4000000 		.4byte	.LVL16
 1779 005e 0400     		.2byte	0x4
 1780 0060 F3       		.byte	0xf3
 1781 0061 01       		.uleb128 0x1
 1782 0062 50       		.byte	0x50
 1783 0063 9F       		.byte	0x9f
 1784 0064 A4000000 		.4byte	.LVL16
 1785 0068 A6000000 		.4byte	.LVL17
 1786 006c 0100     		.2byte	0x1
 1787 006e 50       		.byte	0x50
 1788 006f A6000000 		.4byte	.LVL17
 1789 0073 D4000000 		.4byte	.LFE70
 1790 0077 0400     		.2byte	0x4
 1791 0079 F3       		.byte	0xf3
 1792 007a 01       		.uleb128 0x1
 1793 007b 50       		.byte	0x50
 1794 007c 9F       		.byte	0x9f
 1795 007d 00000000 		.4byte	0
 1796 0081 00000000 		.4byte	0
 1797              	.LLST1:
 1798 0085 00000000 		.4byte	.LVL0
 1799 0089 36000000 		.4byte	.LVL3
 1800 008d 0100     		.2byte	0x1
 1801 008f 51       		.byte	0x51
 1802 0090 36000000 		.4byte	.LVL3
 1803 0094 3A000000 		.4byte	.LVL4
 1804 0098 0400     		.2byte	0x4
 1805 009a F3       		.byte	0xf3
 1806 009b 01       		.uleb128 0x1
 1807 009c 51       		.byte	0x51
 1808 009d 9F       		.byte	0x9f
 1809 009e 3A000000 		.4byte	.LVL4
 1810 00a2 47000000 		.4byte	.LVL5-1
 1811 00a6 0100     		.2byte	0x1
 1812 00a8 51       		.byte	0x51
 1813 00a9 47000000 		.4byte	.LVL5-1
 1814 00ad 9C000000 		.4byte	.LVL12
 1815 00b1 0400     		.2byte	0x4
 1816 00b3 F3       		.byte	0xf3
 1817 00b4 01       		.uleb128 0x1
 1818 00b5 51       		.byte	0x51
 1819 00b6 9F       		.byte	0x9f
 1820 00b7 9C000000 		.4byte	.LVL12
 1821 00bb A6000000 		.4byte	.LVL17
 1822 00bf 0100     		.2byte	0x1
 1823 00c1 51       		.byte	0x51
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 58


 1824 00c2 A6000000 		.4byte	.LVL17
 1825 00c6 D4000000 		.4byte	.LFE70
 1826 00ca 0400     		.2byte	0x4
 1827 00cc F3       		.byte	0xf3
 1828 00cd 01       		.uleb128 0x1
 1829 00ce 51       		.byte	0x51
 1830 00cf 9F       		.byte	0x9f
 1831 00d0 00000000 		.4byte	0
 1832 00d4 00000000 		.4byte	0
 1833              	.LLST2:
 1834 00d8 06000000 		.4byte	.LVL1
 1835 00dc 08000000 		.4byte	.LVL2
 1836 00e0 0100     		.2byte	0x1
 1837 00e2 55       		.byte	0x55
 1838 00e3 00000000 		.4byte	0
 1839 00e7 00000000 		.4byte	0
 1840              	.LLST3:
 1841 00eb 58000000 		.4byte	.LVL6
 1842 00ef 85000000 		.4byte	.LVL8-1
 1843 00f3 0100     		.2byte	0x1
 1844 00f5 50       		.byte	0x50
 1845 00f6 00000000 		.4byte	0
 1846 00fa 00000000 		.4byte	0
 1847              	.LLST4:
 1848 00fe 86000000 		.4byte	.LVL8
 1849 0102 96000000 		.4byte	.LVL10
 1850 0106 0100     		.2byte	0x1
 1851 0108 50       		.byte	0x50
 1852 0109 00000000 		.4byte	0
 1853 010d 00000000 		.4byte	0
 1854              	.LLST5:
 1855 0111 92000000 		.4byte	.LVL9
 1856 0115 96000000 		.4byte	.LVL10
 1857 0119 0100     		.2byte	0x1
 1858 011b 50       		.byte	0x50
 1859 011c 00000000 		.4byte	0
 1860 0120 00000000 		.4byte	0
 1861              	.LLST6:
 1862 0124 A6000000 		.4byte	.LVL17
 1863 0128 AA000000 		.4byte	.LVL18
 1864 012c 0100     		.2byte	0x1
 1865 012e 55       		.byte	0x55
 1866 012f 00000000 		.4byte	0
 1867 0133 00000000 		.4byte	0
 1868              		.section	.debug_aranges,"",%progbits
 1869 0000 1C000000 		.4byte	0x1c
 1870 0004 0200     		.2byte	0x2
 1871 0006 00000000 		.4byte	.Ldebug_info0
 1872 000a 04       		.byte	0x4
 1873 000b 00       		.byte	0
 1874 000c 0000     		.2byte	0
 1875 000e 0000     		.2byte	0
 1876 0010 00000000 		.4byte	.LFB70
 1877 0014 D4000000 		.4byte	.LFE70-.LFB70
 1878 0018 00000000 		.4byte	0
 1879 001c 00000000 		.4byte	0
 1880              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 59


 1881              	.Ldebug_ranges0:
 1882 0000 00000000 		.4byte	.LFB70
 1883 0004 D4000000 		.4byte	.LFE70
 1884 0008 00000000 		.4byte	0
 1885 000c 00000000 		.4byte	0
 1886              		.section	.debug_line,"",%progbits
 1887              	.Ldebug_line0:
 1888 0000 F1010000 		.section	.debug_str,"MS",%progbits,1
 1888      02007501 
 1888      00000201 
 1888      FB0E0D00 
 1888      01010101 
 1889              	.LASF47:
 1890 0000 49535232 		.ascii	"ISR2_Context\000"
 1890      5F436F6E 
 1890      74657874 
 1890      00
 1891              	.LASF70:
 1892 000d 45455F68 		.ascii	"EE_hal_end_nested_primitive\000"
 1892      616C5F65 
 1892      6E645F6E 
 1892      65737465 
 1892      645F7072 
 1893              	.LASF42:
 1894 0029 6E657874 		.ascii	"next\000"
 1894      00
 1895              	.LASF22:
 1896 002e 5469636B 		.ascii	"TickType\000"
 1896      54797065 
 1896      00
 1897              	.LASF59:
 1898 0037 45455F4F 		.ascii	"EE_ORTI_set_service_in\000"
 1898      5254495F 
 1898      7365745F 
 1898      73657276 
 1898      6963655F 
 1899              	.LASF87:
 1900 004e 45455F73 		.ascii	"EE_stkfirst\000"
 1900      746B6669 
 1900      72737400 
 1901              	.LASF17:
 1902 005a 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1902      59504542 
 1902      4F4F4C00 
 1903              	.LASF7:
 1904 0066 6C6F6E67 		.ascii	"long long unsigned int\000"
 1904      206C6F6E 
 1904      6720756E 
 1904      7369676E 
 1904      65642069 
 1905              	.LASF63:
 1906 007d 45455F68 		.ascii	"EE_hal_ready2stacked\000"
 1906      616C5F72 
 1906      65616479 
 1906      32737461 
 1906      636B6564 
 1907              	.LASF110:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 60


 1908 0092 45455F6F 		.ascii	"EE_oo_SetEvent\000"
 1908      6F5F5365 
 1908      74457665 
 1908      6E7400
 1909              	.LASF44:
 1910 00a1 53746174 		.ascii	"StatusType\000"
 1910      75735479 
 1910      706500
 1911              	.LASF97:
 1912 00ac 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1912      6F5F636F 
 1912      756E7465 
 1912      725F6F62 
 1912      6A656374 
 1913              	.LASF41:
 1914 00c5 64656C74 		.ascii	"delta\000"
 1914      6100
 1915              	.LASF38:
 1916 00cb 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1916      6F5F636F 
 1916      756E7465 
 1916      725F6F62 
 1916      6A656374 
 1917              	.LASF20:
 1918 00e9 5461736B 		.ascii	"TaskType\000"
 1918      54797065 
 1918      00
 1919              	.LASF25:
 1920 00f2 6D617861 		.ascii	"maxallowedvalue\000"
 1920      6C6C6F77 
 1920      65647661 
 1920      6C756500 
 1921              	.LASF105:
 1922 0102 45455F72 		.ascii	"EE_rq_insert\000"
 1922      715F696E 
 1922      73657274 
 1922      00
 1923              	.LASF6:
 1924 010f 6C6F6E67 		.ascii	"long long int\000"
 1924      206C6F6E 
 1924      6720696E 
 1924      7400
 1925              	.LASF0:
 1926 011d 7369676E 		.ascii	"signed char\000"
 1926      65642063 
 1926      68617200 
 1927              	.LASF106:
 1928 0129 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1928      43313120 
 1928      352E342E 
 1928      31203230 
 1928      31363036 
 1929 015c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1929      20726576 
 1929      6973696F 
 1929      6E203233 
 1929      37373135 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 61


 1930 018f 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1930      66756E63 
 1930      74696F6E 
 1930      2D736563 
 1930      74696F6E 
 1931              	.LASF21:
 1932 01b7 4576656E 		.ascii	"EventMaskType\000"
 1932      744D6173 
 1932      6B547970 
 1932      6500
 1933              	.LASF101:
 1934 01c5 45455F72 		.ascii	"EE_rq_lookup\000"
 1934      715F6C6F 
 1934      6F6B7570 
 1934      00
 1935              	.LASF31:
 1936 01d2 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1936      6F5F636F 
 1936      756E7465 
 1936      725F5241 
 1936      4D5F7479 
 1937              	.LASF51:
 1938 01e9 506F7374 		.ascii	"PostTaskHook_Context\000"
 1938      5461736B 
 1938      486F6F6B 
 1938      5F436F6E 
 1938      74657874 
 1939              	.LASF4:
 1940 01fe 6C6F6E67 		.ascii	"long int\000"
 1940      20696E74 
 1940      00
 1941              	.LASF60:
 1942 0207 45455F4F 		.ascii	"EE_ORTI_set_service_out\000"
 1942      5254495F 
 1942      7365745F 
 1942      73657276 
 1942      6963655F 
 1943              	.LASF99:
 1944 021f 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1944      6F5F4952 
 1944      515F7375 
 1944      7370656E 
 1944      645F7374 
 1945              	.LASF80:
 1946 0238 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1946      74645F65 
 1946      6E646379 
 1946      636C655F 
 1946      6E657874 
 1947              	.LASF27:
 1948 0251 6D696E63 		.ascii	"mincycle\000"
 1948      79636C65 
 1948      00
 1949              	.LASF104:
 1950 025a 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1950      715F7175 
 1950      65727966 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 62


 1950      69727374 
 1950      00
 1951              	.LASF18:
 1952 026b 45455F54 		.ascii	"EE_TID\000"
 1952      494400
 1953              	.LASF29:
 1954 0272 76616C75 		.ascii	"value\000"
 1954      6500
 1955              	.LASF67:
 1956 0278 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1956      746B5F71 
 1956      75657279 
 1956      66697273 
 1956      7400
 1957              	.LASF8:
 1958 028a 756E7369 		.ascii	"unsigned int\000"
 1958      676E6564 
 1958      20696E74 
 1958      00
 1959              	.LASF11:
 1960 0297 45455F49 		.ascii	"EE_INT8\000"
 1960      4E543800 
 1961              	.LASF15:
 1962 029f 45455F55 		.ascii	"EE_UREG\000"
 1962      52454700 
 1963              	.LASF5:
 1964 02a7 6C6F6E67 		.ascii	"long unsigned int\000"
 1964      20756E73 
 1964      69676E65 
 1964      6420696E 
 1964      7400
 1965              	.LASF92:
 1966 02b9 45455F74 		.ascii	"EE_th_waswaiting\000"
 1966      685F7761 
 1966      73776169 
 1966      74696E67 
 1966      00
 1967              	.LASF37:
 1968 02ca 6B696E64 		.ascii	"kind\000"
 1968      00
 1969              	.LASF3:
 1970 02cf 73686F72 		.ascii	"short unsigned int\000"
 1970      7420756E 
 1970      7369676E 
 1970      65642069 
 1970      6E7400
 1971              	.LASF98:
 1972 02e2 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1972      6F5F4952 
 1972      515F6469 
 1972      7361626C 
 1972      655F636F 
 1973              	.LASF34:
 1974 02fa 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1974      6F5F636F 
 1974      756E7465 
 1974      725F6F62 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 63


 1974      6A656374 
 1975              	.LASF54:
 1976 0319 416C6172 		.ascii	"AlarmCallback_Context\000"
 1976      6D43616C 
 1976      6C626163 
 1976      6B5F436F 
 1976      6E746578 
 1977              	.LASF84:
 1978 032f 45455F74 		.ascii	"EE_th_status\000"
 1978      685F7374 
 1978      61747573 
 1978      00
 1979              	.LASF35:
 1980 033c 436F756E 		.ascii	"CounterObjectKindType\000"
 1980      7465724F 
 1980      626A6563 
 1980      744B696E 
 1980      64547970 
 1981              	.LASF83:
 1982 0352 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1982      685F6469 
 1982      73706174 
 1982      63685F70 
 1982      72696F00 
 1983              	.LASF10:
 1984 0366 45455F55 		.ascii	"EE_UINT8\000"
 1984      494E5438 
 1984      00
 1985              	.LASF24:
 1986 036f 436F756E 		.ascii	"CounterType\000"
 1986      74657254 
 1986      79706500 
 1987              	.LASF95:
 1988 037b 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1988      6F5F636F 
 1988      756E7465 
 1988      725F6F62 
 1988      6A656374 
 1989              	.LASF19:
 1990 0394 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
 1990      5950455F 
 1990      52515F4D 
 1990      41534B00 
 1991              	.LASF50:
 1992 03a4 50726554 		.ascii	"PreTaskHook_Context\000"
 1992      61736B48 
 1992      6F6F6B5F 
 1992      436F6E74 
 1992      65787400 
 1993              	.LASF48:
 1994 03b8 4572726F 		.ascii	"ErrorHook_Context\000"
 1994      72486F6F 
 1994      6B5F436F 
 1994      6E746578 
 1994      7400
 1995              	.LASF103:
 1996 03ca 45455F72 		.ascii	"EE_rq2stk_exchange\000"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 64


 1996      71327374 
 1996      6B5F6578 
 1996      6368616E 
 1996      676500
 1997              	.LASF81:
 1998 03dd 73697A65 		.ascii	"sizetype\000"
 1998      74797065 
 1998      00
 1999              	.LASF49:
 2000 03e6 50726F74 		.ascii	"ProtectionHook_Context\000"
 2000      65637469 
 2000      6F6E486F 
 2000      6F6B5F43 
 2000      6F6E7465 
 2001              	.LASF9:
 2002 03fd 6C6F6E67 		.ascii	"long double\000"
 2002      20646F75 
 2002      626C6500 
 2003              	.LASF100:
 2004 0409 45455F41 		.ascii	"EE_ApplicationMode\000"
 2004      70706C69 
 2004      63617469 
 2004      6F6E4D6F 
 2004      646500
 2005              	.LASF55:
 2006 041c 49646C65 		.ascii	"Idle_Context\000"
 2006      5F436F6E 
 2006      74657874 
 2006      00
 2007              	.LASF66:
 2008 0429 45455F61 		.ascii	"EE_as_monitoring_the_stack\000"
 2008      735F6D6F 
 2008      6E69746F 
 2008      72696E67 
 2008      5F746865 
 2009              	.LASF26:
 2010 0444 7469636B 		.ascii	"ticksperbase\000"
 2010      73706572 
 2010      62617365 
 2010      00
 2011              	.LASF45:
 2012 0451 4B65726E 		.ascii	"Kernel_Context\000"
 2012      656C5F43 
 2012      6F6E7465 
 2012      787400
 2013              	.LASF73:
 2014 0460 63757272 		.ascii	"current\000"
 2014      656E7400 
 2015              	.LASF46:
 2016 0468 5441534B 		.ascii	"TASK_Context\000"
 2016      5F436F6E 
 2016      74657874 
 2016      00
 2017              	.LASF39:
 2018 0475 75736564 		.ascii	"used\000"
 2018      00
 2019              	.LASF65:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 65


 2020 047a 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 2020      6F5F6361 
 2020      6C6C5F50 
 2020      6F737454 
 2020      61736B48 
 2021              	.LASF88:
 2022 0492 45455F73 		.ascii	"EE_sys_ceiling\000"
 2022      79735F63 
 2022      65696C69 
 2022      6E6700
 2023              	.LASF43:
 2024 04a1 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 2024      6F5F636F 
 2024      756E7465 
 2024      725F6F62 
 2024      6A656374 
 2025              	.LASF64:
 2026 04bf 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 2026      6F5F6361 
 2026      6C6C5F50 
 2026      72655461 
 2026      736B486F 
 2027              	.LASF94:
 2028 04d6 45455F63 		.ascii	"EE_counter_ROM\000"
 2028      6F756E74 
 2028      65725F52 
 2028      4F4D00
 2029              	.LASF12:
 2030 04e5 45455F55 		.ascii	"EE_UINT16\000"
 2030      494E5431 
 2030      3600
 2031              	.LASF33:
 2032 04ef 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 2032      43484544 
 2032      554C4554 
 2032      41424C45 
 2032      00
 2033              	.LASF71:
 2034 0500 45455F6F 		.ascii	"EE_oo_preemption_point\000"
 2034      6F5F7072 
 2034      65656D70 
 2034      74696F6E 
 2034      5F706F69 
 2035              	.LASF57:
 2036 0517 45455F63 		.ascii	"EE_cortex_mx_resumeIRQ\000"
 2036      6F727465 
 2036      785F6D78 
 2036      5F726573 
 2036      756D6549 
 2037              	.LASF1:
 2038 052e 756E7369 		.ascii	"unsigned char\000"
 2038      676E6564 
 2038      20636861 
 2038      7200
 2039              	.LASF32:
 2040 053c 45455F41 		.ascii	"EE_ALARM\000"
 2040      4C41524D 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 66


 2040      00
 2041              	.LASF85:
 2042 0545 45455F74 		.ascii	"EE_th_next\000"
 2042      685F6E65 
 2042      787400
 2043              	.LASF90:
 2044 0550 45455F74 		.ascii	"EE_th_event_active\000"
 2044      685F6576 
 2044      656E745F 
 2044      61637469 
 2044      766500
 2045              	.LASF2:
 2046 0563 73686F72 		.ascii	"short int\000"
 2046      7420696E 
 2046      7400
 2047              	.LASF91:
 2048 056d 45455F74 		.ascii	"EE_th_event_waitmask\000"
 2048      685F6576 
 2048      656E745F 
 2048      77616974 
 2048      6D61736B 
 2049              	.LASF78:
 2050 0582 666C6167 		.ascii	"flag\000"
 2050      00
 2051              	.LASF28:
 2052 0587 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 2052      6F5F636F 
 2052      756E7465 
 2052      725F524F 
 2052      4D5F7479 
 2053              	.LASF62:
 2054 059e 45455F61 		.ascii	"EE_as_set_execution_context\000"
 2054      735F7365 
 2054      745F6578 
 2054      65637574 
 2054      696F6E5F 
 2055              	.LASF89:
 2056 05ba 45455F72 		.ascii	"EE_rq_bitmask\000"
 2056      715F6269 
 2056      746D6173 
 2056      6B00
 2057              	.LASF30:
 2058 05c8 66697273 		.ascii	"first\000"
 2058      7400
 2059              	.LASF23:
 2060 05ce 436F756E 		.ascii	"CounterObjectType\000"
 2060      7465724F 
 2060      626A6563 
 2060      74547970 
 2060      6500
 2061              	.LASF52:
 2062 05e0 53746172 		.ascii	"StartupHook_Context\000"
 2062      74757048 
 2062      6F6F6B5F 
 2062      436F6E74 
 2062      65787400 
 2063              	.LASF61:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 67


 2064 05f4 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 2064      5254495F 
 2064      7365745F 
 2064      74685F65 
 2064      715F6469 
 2065              	.LASF56:
 2066 0614 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 2066      59504543 
 2066      4F4E5445 
 2066      585400
 2067              	.LASF96:
 2068 0623 45455F63 		.ascii	"EE_counter_RAM\000"
 2068      6F756E74 
 2068      65725F52 
 2068      414D00
 2069              	.LASF36:
 2070 0632 73706563 		.ascii	"spec_id\000"
 2070      5F696400 
 2071              	.LASF77:
 2072 063a 4D61736B 		.ascii	"Mask\000"
 2072      00
 2073              	.LASF68:
 2074 063f 45455F68 		.ascii	"EE_hal_begin_nested_primitive\000"
 2074      616C5F62 
 2074      6567696E 
 2074      5F6E6573 
 2074      7465645F 
 2075              	.LASF72:
 2076 065d 69737461 		.ascii	"istat\000"
 2076      7400
 2077              	.LASF58:
 2078 0663 45455F4F 		.ascii	"EE_ORTI_set_service\000"
 2078      5254495F 
 2078      7365745F 
 2078      73657276 
 2078      69636500 
 2079              	.LASF75:
 2080 0677 45455F68 		.ascii	"EE_hal_stkchange\000"
 2080      616C5F73 
 2080      746B6368 
 2080      616E6765 
 2080      00
 2081              	.LASF69:
 2082 0688 45455F68 		.ascii	"EE_hal_get_IRQ_nesting_level\000"
 2082      616C5F67 
 2082      65745F49 
 2082      52515F6E 
 2082      65737469 
 2083              	.LASF86:
 2084 06a5 45455F74 		.ascii	"EE_th_rnact\000"
 2084      685F726E 
 2084      61637400 
 2085              	.LASF102:
 2086 06b1 45455F63 		.ascii	"EE_cortex_mx_change_context\000"
 2086      6F727465 
 2086      785F6D78 
 2086      5F636861 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 68


 2086      6E67655F 
 2087              	.LASF108:
 2088 06cd 443A5C48 		.ascii	"D:\\H_da\\Winter Semester\\MM03 Advanced Microcontr"
 2088      5F64615C 
 2088      57696E74 
 2088      65722053 
 2088      656D6573 
 2089 06fd 6F6C6C65 		.ascii	"oller Systems and Embedded Operating Systems\\Lectu"
 2089      72205379 
 2089      7374656D 
 2089      7320616E 
 2089      6420456D 
 2090 072f 72652050 		.ascii	"re Prof. Fromm\\workspace\\workspace_psoc\\Reaction"
 2090      726F662E 
 2090      2046726F 
 2090      6D6D5C77 
 2090      6F726B73 
 2091 075f 47616D65 		.ascii	"Game_with erika.cydsn\000"
 2091      5F776974 
 2091      68206572 
 2091      696B612E 
 2091      63796473 
 2092              	.LASF79:
 2093 0775 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 2093      52515F6E 
 2093      65737469 
 2093      6E675F6C 
 2093      6576656C 
 2094              	.LASF14:
 2095 078a 45455F55 		.ascii	"EE_UINT32\000"
 2095      494E5433 
 2095      3200
 2096              	.LASF107:
 2097 0794 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_evset.c\000"
 2097      72617465 
 2097      645F536F 
 2097      75726365 
 2097      5C50536F 
 2098              	.LASF13:
 2099 07c0 45455F49 		.ascii	"EE_INT32\000"
 2099      4E543332 
 2099      00
 2100              	.LASF74:
 2101 07c9 45455F6F 		.ascii	"EE_oo_run_next_task\000"
 2101      6F5F7275 
 2101      6E5F6E65 
 2101      78745F74 
 2101      61736B00 
 2102              	.LASF40:
 2103 07dd 636E7463 		.ascii	"cntcycle\000"
 2103      79636C65 
 2103      00
 2104              	.LASF53:
 2105 07e6 53687574 		.ascii	"ShutdownHook_Context\000"
 2105      646F776E 
 2105      486F6F6B 
 2105      5F436F6E 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cclcnSKf.s 			page 69


 2105      74657874 
 2106              	.LASF82:
 2107 07fb 45455F74 		.ascii	"EE_th_ready_prio\000"
 2107      685F7265 
 2107      6164795F 
 2107      7072696F 
 2107      00
 2108              	.LASF109:
 2109 080c 45455F63 		.ascii	"EE_cortex_mx_suspendIRQ\000"
 2109      6F727465 
 2109      785F6D78 
 2109      5F737573 
 2109      70656E64 
 2110              	.LASF93:
 2111 0824 45455F74 		.ascii	"EE_th_is_extended\000"
 2111      685F6973 
 2111      5F657874 
 2111      656E6465 
 2111      6400
 2112              	.LASF76:
 2113 0836 5461736B 		.ascii	"TaskID\000"
 2113      494400
 2114              	.LASF16:
 2115 083d 45455F46 		.ascii	"EE_FREG\000"
 2115      52454700 
 2116              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
