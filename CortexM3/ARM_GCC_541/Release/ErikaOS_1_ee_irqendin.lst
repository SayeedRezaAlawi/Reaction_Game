ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ErikaOS_1_ee_irqendin.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EE_IRQ_end_instance,"ax",%progbits
  20              		.align	1
  21              		.global	EE_IRQ_end_instance
  22              		.thumb
  23              		.thumb_func
  24              		.type	EE_IRQ_end_instance, %function
  25              	EE_IRQ_end_instance:
  26              	.LFB72:
  27              		.file 1 "Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ERIKA Enterprise is distributed in the hope that it will be
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 2


  31:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Author: 2002-2004 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * CVS: $Id: ee_irqendin.c,v 1.2 2006/01/24 10:21:14 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_tracing.h"
  52:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  53:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "ErikaOS_1_ee_internal.inc"
  54:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  56:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #include "trcKernelPort.h"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
  58:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ISR2_RESOURCES__)) || (defined(EE_AS_USER_SPINLOCKS__))
  59:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Index used to give ISR2 Temporary TID value and to access at
  60:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    EE_isr2_nesting_level array */
  61:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_UREG EE_isr2_index = EE_UREG_MINUS1;
  62:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  63:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* Assign a fake TID to an ISR2 to eventually handle resources clean-up */
  64:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** EE_TID EE_oo_assign_TID_to_ISR2( void ) {
  65:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  66:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  67:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index == EE_UREG_MINUS1 ) {
  68:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_index = 0U;
  69:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[0] = actual_nesting;
  70:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else if ( EE_isr2_nesting_level[EE_isr2_index] < actual_nesting ) {
  71:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     ++EE_isr2_index;
  72:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_isr2_nesting_level[EE_isr2_index] = actual_nesting;
  73:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
  74:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Nothing to do added just for MISRA 2004 Required Rule 14.10 */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
  76:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   return (EE_MAX_TASK + (EE_TID)EE_isr2_index);
  78:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
  79:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  80:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* [OS369]: If a Category 2 OsIsr calls GetResource() and ends (returns)
  81:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     without calling the corresponding ReleaseResource(), the Operating System
  82:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     shall perform the ReleaseResource() call and shall call the ErrorHook()
  83:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     (if configured) with the status E_OS_RESOURCE. */
  84:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void );
  85:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_release_all_items( void ) {
  86:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Check if the index is valid -> at least one ISR2 got a resource */
  87:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_isr2_index != EE_UREG_MINUS1 ) {
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 3


  88:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* N.B This method MUST be called at the end of IRQ post-stub but BEFORE
  89:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****        decrementing nesting. */
  90:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_UREG const actual_nesting = EE_hal_get_IRQ_nesting_level();
  91:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  92:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Check if this is the right level where do clean-up */
  93:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( EE_isr2_nesting_level[EE_isr2_index] == actual_nesting ) {
  94:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_TID current_isr2_tid = (EE_TID)EE_isr2_index + EE_MAX_TASK;
  95:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef __OO_ISR2_RESOURCES__
  96:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* OS369 */
  97:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_oo_release_all_resources(current_isr2_tid) != EE_UREG_MINUS1 ) {
  98:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_RESOURCE);
  99:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_RESOURCE);
 100:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 101:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ */
 102:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifdef EE_AS_USER_SPINLOCKS__
 103:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Force Spinlock Release */
 104:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       if ( EE_as_release_all_spinlocks(current_isr2_tid) !=
 105:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         INVALID_SPINLOCK )
 106:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       {
 107:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_ORTI_set_lasterror(E_OS_SPINLOCK);
 108:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         EE_oo_notify_error_service(OSId_ISR2Body, E_OS_SPINLOCK);
 109:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       }
 110:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* EE_AS_USER_SPINLOCKS__ */
 111:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Decrement ISR2 index (from 0U to EE_UREG_MINUS1 is handled by
 113:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          unsigned wraparound) */
 114:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       --EE_isr2_index;
 115:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 116:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 117:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 118:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 119:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void );
 120:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** __INLINE__ void  EE_IRQ_release_all_items( void ) {}
 121:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ISR2_RESOURCES__ || EE_AS_USER_SPINLOCKS__ */
 122:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 123:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #ifndef __PRIVATE_IRQ_END_INSTANCE__
 124:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 125:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void );
 126:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (defined(__OO_ECC1__)) || (defined(__OO_ECC2__))
 128:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 129:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
 130:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID tnext;
 131:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   tnext = EE_rq2stk_exchange();
 132:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_th_waswaiting[tnext] ) {
 133:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_waswaiting[tnext] = EE_FALSE;
 134:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
 135:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceMOVED_TASK_TO_READY_STATE(EE_stk_queryfirst());
 136:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   traceTASK_SWITCHED_IN(EE_stk_queryfirst(), EE_th_ready_prio[EE_stk_queryfirst()]);
 137:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif
 138:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_call_PreTaskHook();
 139:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(tnext);
 140:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 141:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_ready(tnext);
 142:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 143:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 144:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #else /* __OO_ECC1__ || __OO_ECC2__ */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 4


 145:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** static void EE_IRQ_run_next_task( void )
 146:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   EE_hal_IRQ_ready(EE_rq2stk_exchange());
 148:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 149:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #endif /* __OO_ECC1__ || __OO_ECC2__ */
 150:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 151:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 152:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ handler.
 153:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    If the HAL allow IRQ nesting the C_end_instance should work as follows:
 154:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - it must implement the preemption test only if it is the last IRQ on the
 155:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      stack
 156:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    - if there are other interrupts on the stack the IRQ end_instance should do
 157:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      nothing
 158:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 159:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_instance( void )
 160:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** {
  28              		.loc 1 160 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
 161:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   register EE_TID rqfirst, current;
 162:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 163:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   rqfirst = EE_rq_queryfirst();
  38              		.loc 1 163 0
  39 0002 FFF7FEFF 		bl	EE_rq_queryfirst
  40              	.LVL0:
  41              	.LBB36:
  42              	.LBB37:
  43              		.file 2 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_internal.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Copyright (C) 2002-2008  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * terms of your choice, provided that you also meet, for each linked
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 5


  23:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  42:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Author: 2002 Paolo Gai
  43:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * CVS: $Id: ee_internal.h,v 1.6 2006/12/03 22:07:50 pj Exp $
  44:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  45:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  46:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
  47:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * PSoC Port and API Generation
  48:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Carlos Fernando Meier Martinez
  49:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Hochschule Darmstadt, Germany. 2017.
  50:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
  51:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  52:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  53:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define PKG_KERNEL_OO_INC_EE_OO_INTERNAL_H
  54:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_common.inc"
  56:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_intfunc.inc"
  57:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "ErikaOS_1_ee_oo_irq.inc"
  58:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  59:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "trcKernelPort.h" 
  60:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif
  61:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
  62:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                    New Error Handling Internal Utilities
  63:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
  64:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  65:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Utilities Macros */
  66:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM(param_name)   EE_os_param param_name
  67:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_VALUE(param_name, param_value)  \
  68:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).value_param = (param_value))
  69:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_PARAM_REF(param_name, param_field, param_ref) \
  71:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ((param_name).param_field = (param_ref))
  72:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  73:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
  74:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Parameters Data Structure Utilities Macros from user space */
  75:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()  EE_oo_ErrorHook_parameters error_parameters
  76:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  77:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  \
  78:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_ErrorHook_parameters error_parameters = { param1_in, param2_in, \
  79:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     param3_in }
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 6


  80:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  81:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value) \
  82:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.value_param = param1_value)
  83:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value) \
  84:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.value_param = param2_value)
  85:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value) \
  86:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.value_param = param3_value)
  87:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  88:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)  \
  89:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param1.param_field = (param_ref))
  90:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)  \
  91:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param2.param_field = (param_ref))
  92:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)  \
  93:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (error_parameters.param3.param_field = (param_ref))
  94:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
  95:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS()                                    ((void)0)
  96:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  97:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_INIT(param1_in,param2_in,param3_in)  ((void)0)
  98:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
  99:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_VALUE(param1_value)           ((void)0)
 100:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_VALUE(param2_value)           ((void)0)
 101:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_VALUE(param3_value)           ((void)0)
 102:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM1_REF(param_field,param_ref)    ((void)0)
 104:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM2_REF(param_field,param_ref)    ((void)0)
 105:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ERROR_PARAMETERS_PARAM3_REF(param_field,param_ref)    ((void)0)
 106:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 107:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 108:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Error Handling */
 109:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_ERRORHOOK__
 110:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef  __OO_ERRORHOOK_NOMACROS__
 111:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 112:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_fill_error_data( OSServiceIdType
 113:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   ServiceID, EE_os_param param1, EE_os_param param2, EE_os_param param3 )
 114:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 115:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register EE_oo_ErrorHook_parameters * const
 116:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     p_errorhook_parameter = EE_oo_get_errorhook_data();
 117:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   (*EE_oo_get_errorhook_service_id()) = ServiceID;
 118:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param1 = param1;
 119:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param2 = param2;
 120:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   p_errorhook_parameter->param3 = param3;
 121:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 122:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__OO_ERRORHOOK_NOMACROS__ */
 123:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 124:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_fill_error_data(ServiceID,param1,param2,param3) ((void)0)
 125:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_ERRORHOOK_NOMACROS__ */
 126:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error( OSServiceIdType ServiceID,
 128:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_os_param param1, EE_os_param param2, EE_os_param param3,
 129:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 130:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 131:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 132:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_ErrorHook_nested_flag == 0U )
 133:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   {
 134:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_fill_error_data(ServiceID, param1, param2, param3);
 135:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 1U;
 136:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_call_ErrorHook(Error);
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 7


 137:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_ErrorHook_nested_flag = 0U;
 138:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 139:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 140:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 141:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
 142:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us(
 143:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   OSServiceIdType ServiceID, const EE_oo_ErrorHook_parameters * const
 144:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     error_parameters_ref, StatusType Error )
 145:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 146:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( error_parameters_ref != NULL ) {
 147:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     register EE_FREG const flag = EE_hal_begin_nested_primitive();
 148:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_os_notify_error(ServiceID, error_parameters_ref->param1,
 149:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       error_parameters_ref->param2, error_parameters_ref->param3, Error);
 150:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);
 151:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 152:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 153:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 154:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* If MemMap.h support is enabled (i.e. because memory protection): use it */
 155:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 156:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* The following code belong to ERIKA API section ee_api_text */
 157:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_START_SEC_CODE
 158:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 159:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 160:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 161:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_os_notify_error_from_us( OSServiceIdType ServiceID,
 162:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   const EE_oo_ErrorHook_parameters * const error_parameters_ref,
 163:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error );
 164:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef EE_SUPPORT_MEMMAP_H
 166:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define API_STOP_SEC_CODE
 167:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #include "MemMap.inc"
 168:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_SUPPORT_MEMMAP_H */
 169:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 170:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_ERRORHOOK__ */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 172:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 173:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error(k,j,x,y,z) EE_os_notify_error_impl(z)
 174:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 175:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_impl(StatusType Error)
 176:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 177:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 178:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 179:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Macro used for remapping to prevent compiler warnings on unused parameters */
 181:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_os_notify_error_from_us(x,y,z) EE_os_notify_error_from_us_impl(z)
 182:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 183:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_os_notify_error_from_us_impl(
 184:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   StatusType Error )
 185:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 186:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_ORTI_set_lasterror(Error);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 188:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_ERRORHOOK__ */
 189:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 190:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*******************************************************************************
 191:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *                  Kernel Critical Section Utility Macros
 192:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ******************************************************************************/
 193:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __EE_MEMORY_PROTECTION__
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 8


 194:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 195:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()  register EE_FREG flag
 196:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 197:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()          \
 198:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                          \
 199:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     flag = EE_hal_begin_nested_primitive();     \
 200:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets(); \
 201:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 202:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 203:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 204:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_DECLARE_CRITICAL_SECTION();                 \
 205:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_OS_ENTER_CRITICAL_SECTION()
 206:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 207:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()             \
 208:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 209:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_update_budgets_and_restart(); \
 210:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_end_nested_primitive(flag);            \
 211:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 212:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 213:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()          \
 214:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   do {                                            \
 215:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_hal_disableIRQ();                          \
 216:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_as_tp_active_pause_and_update_budgets();   \
 217:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } while ( 0 )
 218:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* !__EE_MEMORY_PROTECTION__ */
 220:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* TP in any case have to be handled in Service Implementation. Syscall
 221:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    mechanism can be implement in C language and, in that case, a function call
 222:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    cannot be done in syscall handler. */
 223:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_CRITICAL_SECTION()            ((void)0)
 224:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_ENTER_CRITICAL_SECTION()              \
 225:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 226:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_DECLARE_AND_ENTER_CRITICAL_SECTION()  \
 227:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 228:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_EXIT_CRITICAL_SECTION()               \
 229:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_update_budgets_and_restart()
 230:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define EE_OS_FOREVER_CRITICAL_SECTION()			\
 231:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_tp_active_pause_and_update_budgets()
 232:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__EE_MEMORY_PROTECTION__ */
 233:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 234:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* return the first stacked task (the running task) without extracting it 
 235:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    we suppose that this function can be called ALSO at interrupt ENABLED!!!
 236:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (see WaitEvent.c) */
 237:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifndef __PRIVATE_STK_QUERYFIRST__
 238:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TID  EE_stk_queryfirst(void)
 239:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 240:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     return EE_stkfirst;  
  44              		.loc 2 240 0
  45 0006 154B     		ldr	r3, .L13
  46              	.LBE37:
  47              	.LBE36:
 164:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   current = EE_stk_queryfirst();
 165:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 166:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( (rqfirst != EE_NIL) && (EE_sys_ceiling < EE_th_ready_prio[rqfirst]) ) {
  48              		.loc 1 166 0
  49 0008 461C     		adds	r6, r0, #1
  50              	.LBB39:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 9


  51              	.LBB38:
  52              		.loc 2 240 0
  53 000a 1B68     		ldr	r3, [r3]
  54 000c 144C     		ldr	r4, .L13+4
  55              	.LBE38:
  56              	.LBE39:
  57              		.loc 1 166 0
  58 000e 20D0     		beq	.L2
  59              		.loc 1 166 0 is_stmt 0 discriminator 1
  60 0010 144A     		ldr	r2, .L13+8
  61 0012 154D     		ldr	r5, .L13+12
  62 0014 1168     		ldr	r1, [r2]
  63 0016 55F82050 		ldr	r5, [r5, r0, lsl #2]
  64 001a 8D42     		cmp	r5, r1
  65 001c 19D9     		bls	.L2
 167:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* We have to schedule a READY thread */
 168:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 169:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current != EE_NIL ) {
  66              		.loc 1 169 0 is_stmt 1
  67 001e 5D1C     		adds	r5, r3, #1
  68 0020 124E     		ldr	r6, .L13+16
 170:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* There is a post task hook only if a TASK that was RUNNING */
 171:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_oo_call_PostTaskHook();
 172:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* The RUNNING TASK is now preempted-> READY status + still in stacked
 173:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****          queue */
 174:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_th_status[current] = READY;
  69              		.loc 1 174 0
  70 0022 1CBF     		itt	ne
  71 0024 0225     		movne	r5, #2
  72 0026 46F82350 		strne	r5, [r6, r3, lsl #2]
 175:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 176:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 177:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Another TASK is put into the RUNNING state */
 178:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_status[rqfirst] = RUNNING;
 179:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 180:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_sys_ceiling |= EE_th_dispatch_prio[rqfirst];
  73              		.loc 1 180 0
  74 002a 114B     		ldr	r3, .L13+20
 178:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  75              		.loc 1 178 0
  76 002c 0025     		movs	r5, #0
  77              		.loc 1 180 0
  78 002e 53F82030 		ldr	r3, [r3, r0, lsl #2]
 178:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
  79              		.loc 1 178 0
  80 0032 46F82050 		str	r5, [r6, r0, lsl #2]
  81              		.loc 1 180 0
  82 0036 1943     		orrs	r1, r1, r3
  83 0038 1160     		str	r1, [r2]
  84              	.LVL1:
  85              	.LBB40:
  86              	.LBB41:
 131:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_th_waswaiting[tnext] ) {
  87              		.loc 1 131 0
  88 003a FFF7FEFF 		bl	EE_rq2stk_exchange
  89              	.LVL2:
 132:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_th_waswaiting[tnext] = EE_FALSE;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 10


  90              		.loc 1 132 0
  91 003e 0D4B     		ldr	r3, .L13+24
  92 0040 53F82020 		ldr	r2, [r3, r0, lsl #2]
  93 0044 1AB1     		cbz	r2, .L4
 133:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** #if (__OO_configUSE_TRACE_FACILITY == 1)
  94              		.loc 1 133 0
  95 0046 43F82050 		str	r5, [r3, r0, lsl #2]
  96              	.LVL3:
  97              	.LBB42:
  98              	.LBB43:
  99              		.file 3 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_context.inc"
   1:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* ###*B*###
   2:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise - a tiny RTOS for small microcontrollers
   3:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   4:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Copyright (C) 2002-2011  Evidence Srl
   5:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   6:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * This file is part of ERIKA Enterprise.
   7:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
   8:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is free software; you can redistribute it
   9:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * and/or modify it under the terms of the GNU General Public License
  10:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 as published by the Free Software Foundation, 
  11:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * (with a special exception described below).
  12:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  13:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Linking this code statically or dynamically with other modules is
  14:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * making a combined work based on this code.  Thus, the terms and
  15:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * conditions of the GNU General Public License cover the whole
  16:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * combination.
  17:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  18:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * As a special exception, the copyright holders of this library give you
  19:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * permission to link this code with independent modules to produce an
  20:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * executable, regardless of the license terms of these independent
  21:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * modules, and to copy and distribute the resulting executable under
  22:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * terms of your choice, provided that you also meet, for each linked
  23:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * independent module, the terms and conditions of the license of that
  24:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * module.  An independent module is a module which is not derived from
  25:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or based on this library.  If you modify this code, you may extend
  26:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * this exception to your version of the code, but you are not
  27:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * obligated to do so.  If you do not wish to do so, delete this
  28:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * exception statement from your version.
  29:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  30:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ERIKA Enterprise is distributed in the hope that it will be
  31:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * useful, but WITHOUT ANY WARRANTY; without even the implied warranty
  32:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  33:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * GNU General Public License version 2 for more details.
  34:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  35:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * You should have received a copy of the GNU General Public License
  36:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version 2 along with ERIKA Enterprise; if not, write to the
  37:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
  38:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Boston, MA 02110-1301 USA.
  39:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * ###*E*### */
  40:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  41:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /** 
  42:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@file ee_internal.h
  43:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@brief Derived from cpu/common/inc/ee_internal.h
  44:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Gianluca Franchino
  45:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@author Giuseppe Serano
  46:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 	@date 2011
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 11


  47:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */  
  48:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     
  49:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  50:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * PSoC Port and API Generation
  51:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Carlos Fernando Meier Martinez
  52:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Hochschule Darmstadt, Germany. 2017.
  53:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  54:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  55:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifndef __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  56:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define __INCLUDE_CPU_CORTEX_MX_EE_CONTEXT__
  57:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  58:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
  59:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Instructions
  60:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *
  61:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * The monostack part is complete (obviously, the functions to disable/enable
  62:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  interrupts are not included here).  For the multistack part you have to
  63:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  provide two additional things:
  64:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  1. An assembly implementation of EE_std_change_context_multi(); see below.
  65:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  2. A #define directive for EE_hal_active_tos, which is just an alias for the
  66:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  actual architecture-dependent variable.  This variable contains the index of
  67:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  *  the current stack.
  68:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
  69:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  70:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* After a task terminates, the scheduler puts the id of the new task to launch
  71:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * or switch to in this variable.  If the is stacked, its id is marked so. */
  72:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern EE_TID EE_std_endcycle_next_tid;
  73:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  74:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The multistack version must be implemented in ASM; no standard
  75:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * implementation, sorry.  This is the only function that performs context
  76:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * switching.  The multistack version doesn't jump to the task body if its TID
  77:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * has been maked as stacked.  This is used to switch to a task that has been
  78:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * suspend by a previous call to EE_std_change_contex(). */
  79:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** void EE_cortex_mx_change_context(EE_TID tid);
  80:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Pseudo code for EE_std_change_context_multi():
  81:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****      begin:
  82:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       tos_index = EE_std_thread_tos[tid+1];
  83:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if is_not_the_current_stack(tos_index) {
  84:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           save_caller_saved_registers();
  85:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           switch_stacks(tos_index);
  86:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           restore_caller_saved_registers();
  87:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  88:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       if (is_not_marked_stacked(tid)) {
  89:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           tid = EE_std_run_task_code(tid);
  90:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****           goto begin;
  91:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       }
  92:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
  93:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice that the "goto begin" is actually a recursive call to
  94:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       EE_std_change_context_multi(), but in this way there is no stack growing.
  95:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       
  96:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       Please notice also that 'tid' must NOT be saved onto the stack before
  97:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switching stacks, otherwise when switching from another stack back to the
  98:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       current one, you would overwrite its value.
  99:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 100:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       For processors where the return address is saved in a register, that
 101:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       register must be saved in the stack too.
 102:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 103:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****       switch_stacks() should also update EE_hal_active_tos.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 12


 104:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** */
 105:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 106:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Call a the body of a task */
 107:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #if defined(__OO_BCC1__) || defined(__OO_BCC2__) || \
 108:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  defined(__OO_ECC1__) || defined(__OO_ECC2__)
 109:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  EE_oo_thread_stub()
 110:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #else
 111:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_call_task_body(tid)  (((void (*)(void))EE_hal_thread_body[tid])())
 112:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif
 113:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 114:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 115:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task, possibly switching to a different stack, clean up the task
 116:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * after it ends, and call the scheduler (and switch to other tasks/stacks)
 117:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * until there are no more tasks to switch to.  In the multistack version, also
 118:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * change the current stack before returning if the scheduler asks for it. */
 119:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __DECLARE_INLINE__ void EE_hal_ready2stacked(EE_TID tid);
 120:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 121:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 122:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* Launch a new task on the current stack, clean up the task after it ends, and
 123:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * call the scheduler.  Return the next task to launch, which is "marked as
 124:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * stacked" if there is no new task to launch. */
 125:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** EE_TID EE_std_run_task_code(EE_TID tid);
 126:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 127:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 128:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /*
 129:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * Inline implementations
 130:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  */
 131:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 132:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 133:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MONO__
 134:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 135:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* With monostack, we need only the information that the task is stacked.  We
 136:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * don't need to know which task it is, as there is no new stack to switch
 137:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * to. */
 138:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((EE_TID)-1)
 139:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 140:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_need_context_change(tid) ((tid) >= 0)
 141:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 142:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MONO__ */
 143:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 144:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 145:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #ifdef __MULTI__
 146:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 147:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* TID_IS_STACKED_MARK must set the most significative bit */
 148:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #define EE_std_mark_tid_stacked(tid) ((tid) | (EE_TID)TID_IS_STACKED_MARK)
 149:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 150:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** extern int EE_std_need_context_change(EE_TID tid);
 151:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 152:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_stkchange(EE_TID tid)
 153:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 154:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(EE_std_mark_tid_stacked(tid));
 155:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 156:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 157:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** #endif /* __MULTI__ */
 158:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 159:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 160:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** /* The functions below should work for both the monostack and multistack
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 13


 161:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * versions of the kernel, thanks to the macros defined above.  In the mono
 162:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****  * version, all the stack-related stuff is ignored. */
 163:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 164:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 165:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_ready2stacked(EE_TID tid)
 166:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 167:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_cortex_mx_change_context(tid);
 168:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 169:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 170:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 171:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_ready(EE_TID tid)
 172:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = tid;
 174:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 175:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 176:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** 
 177:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** __INLINE__ void  EE_hal_endcycle_stacked(EE_TID tid)
 178:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** {
 179:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc ****     EE_std_endcycle_next_tid = EE_std_mark_tid_stacked(tid);
 100              		.loc 3 179 0
 101 004a 40F00040 		orr	r0, r0, #-2147483648
 102              	.LVL4:
 103              	.L4:
 104              	.LBE43:
 105              	.LBE42:
 106              	.LBB44:
 107              	.LBB45:
 173:Generated_Source\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc **** }
 108              		.loc 3 173 0
 109 004e 2060     		str	r0, [r4]
 110 0050 70BD     		pop	{r4, r5, r6, pc}
 111              	.LVL5:
 112              	.L2:
 113              	.LBE45:
 114              	.LBE44:
 115              	.LBE41:
 116              	.LBE40:
 117              	.LBB46:
 118              	.LBB47:
 119              		.loc 3 179 0
 120 0052 43F00043 		orr	r3, r3, #-2147483648
 121              	.LVL6:
 122 0056 2360     		str	r3, [r4]
 123 0058 70BD     		pop	{r4, r5, r6, pc}
 124              	.L14:
 125 005a 00BF     		.align	2
 126              	.L13:
 127 005c 00000000 		.word	EE_stkfirst
 128 0060 00000000 		.word	EE_std_endcycle_next_tid
 129 0064 00000000 		.word	EE_sys_ceiling
 130 0068 00000000 		.word	EE_th_ready_prio
 131 006c 00000000 		.word	EE_th_status
 132 0070 00000000 		.word	EE_th_dispatch_prio
 133 0074 00000000 		.word	EE_th_waswaiting
 134              	.LBE47:
 135              	.LBE46:
 136              		.cfi_endproc
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 14


 137              	.LFE72:
 138              		.size	EE_IRQ_end_instance, .-EE_IRQ_end_instance
 139              		.section	.text.EE_IRQ_end_post_stub,"ax",%progbits
 140              		.align	1
 141              		.global	EE_IRQ_end_post_stub
 142              		.thumb
 143              		.thumb_func
 144              		.type	EE_IRQ_end_post_stub, %function
 145              	EE_IRQ_end_post_stub:
 146              	.LFB73:
 181:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 182:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_th_eq_dispatch_prio(rqfirst);
 183:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 184:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* "Press TP start for the first time" for this new activation or realese
 185:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****         from wait of the TASK */
 186:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_as_tp_active_start_on_TASK_stacking(rqfirst);
 187:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the next running TASK, it doesn't directly RUN it */
 188:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_IRQ_run_next_task();
 189:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   } else {
 190:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     if ( current == EE_NIL ) {
 191:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to the Idle loop */
 192:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( Idle_Context );
 193:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_start_idle();
 194:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     } else {
 195:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* We are switching back to a preempted TASK */
 196:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_set_execution_context( TASK_Context );
 197:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       /* Enable the Task Timing Protection Set */
 198:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       EE_as_tp_active_set_from_TASK(current);
 199:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     }
 200:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Set the Context Switch up, it doesn't directly switch */
 201:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_hal_IRQ_stacked(current);
 202:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   }
 203:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** }
 204:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 205:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** /* This primitive shall be atomic.
 206:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive shall be inserted as the last function in an IRQ post-stub.
 207:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    This primitive do needed clean-up as resetting kernel interrupt nested
 208:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    counter and release gotten resources if application forget to do that as
 209:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****    specified by Autosar standard.
 210:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** */
 211:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** void EE_IRQ_end_post_stub( void ) {
 147              		.loc 1 211 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LBB48:
 153              	.LBB49:
 241:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 242:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __PRIVATE_STK_QUERYFIRST__ */
 243:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 244:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* This function notifies a tick to a hardware counter.
 245:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    That is, the counter is
 246:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    incremented by 1.  It must be called into an ISR2 or into a
 247:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task notify that the event linked to the counter occurred.
 248:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 249:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function will also implement the notification of expired alarms
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 15


 250:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    (calling an alarm callback, setting an event, or activating a
 251:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    task).
 252:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 253:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    The function can be considered atomic, and NO RESCHEDULING will
 254:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    take place after the execution of this function. To implement the
 255:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    rescheduling at task level, you can use the Schedule() or the
 256:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    ForceSchedule() functions just after this notification.
 257:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 258:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    see also internal.h
 259:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** */
 260:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (!defined(__OO_NO_ALARMS__)) || (defined(EE_AS_SCHEDULETABLES__))
 261:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 262:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** StatusType EE_oo_IncrementCounterHardware(CounterType CounterID);
 263:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void       EE_oo_IncrementCounterImplementation(CounterType CounterID);
 264:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 265:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* kernel internal API */
 266:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #define IncrementCounterHardware EE_oo_IncrementCounterHardware
 267:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 268:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Helper function (0 as increment means next tick)*/
 269:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** void EE_oo_counter_object_insert( CounterObjectType ObjectID, TickType
 270:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   increment );
 271:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 272:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined (EE_COUNTER_OBJECTS_ROM_SIZE)
 273:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if (EE_COUNTER_OBJECTS_ROM_SIZE > 0)
 274:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 275:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_abs_counter_object_insertion( CounterObjectType ObjectID,
 276:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType absstart, TickType abscycle ) 
 277:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 278:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* These are used to evaluate alarm time handling wrap around */
 279:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           alarm_time;
 280:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register TickType           start_rel;
 281:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType const  cnt = EE_oo_counter_object_ROM[ObjectID].c;
 282:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 283:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 284:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 285:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = abscycle;
 286:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 287:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Handling wrap around for alarm time */
 288:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   start_rel = absstart - EE_counter_RAM[cnt].value;
 289:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 290:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /*  When will be here start value will be already checked against counter
 291:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       max allowed value */
 292:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( start_rel == 0U ) {
 293:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel == 0U -> the alarm should start now or next time that counter
 294:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        has this value. Has been chosen the second option */
 295:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue;
 296:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else if ( start_rel < EE_TYPETICK_HALF_VALUE ) {
 297:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Normal behavior */
 298:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = start_rel - 1U;
 299:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 300:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* start_rel is "negative" in this case (unsigned wrap around do the
 301:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****        work) */
 302:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     alarm_time = EE_counter_ROM[cnt].maxallowedvalue + start_rel;
 303:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 304:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 305:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set alarm with a relative amount of time (alarm_time already is a "0 as
 306:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      next tick" value)*/
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 16


 307:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, alarm_time);
 308:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 309:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 310:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void 
 311:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_handle_rel_counter_object_insertion( CounterObjectType ObjectID,
 312:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     TickType increment, TickType relcycle )
 313:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 314:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 315:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* first, use the alarm and set the cycle */
 316:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_TRUE;
 317:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].cntcycle = relcycle;
 318:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 319:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* then, insert the task into the delta queue with an increment equal
 320:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      (increment - 1U) increment equal to 0 means next tick */
 321:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_insert(ObjectID, (increment - 1U));
 322:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 323:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 324:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* cancellation */
 325:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_handle_counter_object_cancellation(
 326:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   CounterObjectType ObjectID )
 327:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 328:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterObjectType current, previous;
 329:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   register CounterType       ct      = EE_oo_counter_object_ROM[ObjectID].c;
 330:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 331:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* to compute the relative value in ticks, we have to follow the counter
 332:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****      delay chain */
 333:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   current = EE_counter_RAM[ct].first;
 334:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 335:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( current == ObjectID ) {
 336:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is the first one in the delta queue */
 337:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_counter_RAM[ct].first = EE_oo_counter_object_RAM[ObjectID].next;
 338:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   } else {
 339:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* the alarm is not the first one in the delta queue */
 340:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* Find it */
 341:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     do {
 342:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       previous = current;
 343:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       current = EE_oo_counter_object_RAM[current].next;
 344:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     } while ( current != ObjectID );
 345:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     /* remove it from the queue */
 346:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[previous].next =
 347:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].next;
 348:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 349:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Adjust delta value */
 350:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   if ( EE_oo_counter_object_RAM[ObjectID].next != INVALID_COUNTER_OBJECT ) {
 351:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     EE_oo_counter_object_RAM[EE_oo_counter_object_RAM[ObjectID].next].delta +=
 352:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_counter_object_RAM[ObjectID].delta;
 353:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   }
 354:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 355:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_oo_counter_object_RAM[ObjectID].used = EE_FALSE;
 356:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 357:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE */
 358:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* EE_COUNTER_OBJECTS_ROM_SIZE > 0 */
 359:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* !__OO_NO_ALARMS__ || EE_AS_SCHEDULETABLES__ */
 360:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 361:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*************************************************************************
 362:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  HAL extensions
 363:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  *************************************************************************/
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 17


 364:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 365:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  /* these are the functions that have been inserted to support tha OO layer
 366:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     under the EE HAL.
 367:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     
 368:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - all the functions for interrupt handling (13.3)
 369:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_begin_nested_primitive
 370:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_hal_end_nested_primitive 
 371:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       (for primitives that can be called both into a task and into an ISR2
 372:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_task(EE_TID t)
 373:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_hal_terminate_savestk(EE_TID t)
 374:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****       EE_oo_preemption_point() execute task preemption if is needed
 375:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - EE_oo_shutdown() if not redefined it does for(;;);
 376:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     - All the alarm constants listed in 13.6.4
 377:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 378:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 379:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 380:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /***************************************************************************
 381:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  * Internal data structures and functions
 382:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  ***************************************************************************/
 383:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 384:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /*
 385:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****     Call Hooks utilities
 386:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****  */
 387:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 388:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #ifdef __OO_HAS_PRETASKHOOK__
 389:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 390:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 391:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PreTaskHook_Context );
 392:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 393:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 394:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 395:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 396:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_PRETASKHOOK__ */
 397:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PreTaskHook(void)
 398:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 399:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   /* Set the execution context on TASK */
 400:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( TASK_Context );
 401:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 402:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_PRETASKHOOK__ */
 403:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 404:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #if defined(__OO_HAS_POSTTASKHOOK__)
 405:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void)
 406:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 407:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   EE_as_set_execution_context( PostTaskHook_Context );
 408:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** }
 409:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #else /* __OO_HAS_POSTTASKHOOK__ */
 410:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ void  EE_oo_call_PostTaskHook(void) {}
 411:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** #endif /* __OO_HAS_POSTTASKHOOK__ */
 412:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 413:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 414:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* StartOS Flag defined inside ee_startos.c to check that the system has correctly started */
 415:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** extern EE_UREG volatile EE_oo_started;
 416:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 417:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** 
 418:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** /* Used to check if we are in disable interrupt error. It return
 419:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****    'signed register type' because usually it is native integer type. */
 420:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** __INLINE__ EE_TYPEBOOL  EE_oo_check_disableint_error(void)
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 18


 421:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc **** {
 422:Generated_Source\PSoC5/ErikaOS_1_ee_oo_internal.inc ****   return ( EE_oo_IRQ_disable_count != 0U );
 154              		.loc 2 422 0
 155 0000 024B     		ldr	r3, .L20
 156              	.LBE49:
 157              	.LBE48:
 212:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* [OS368]: If a Category 2 OsIsr calls DisableAllInterupts()/
 213:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       SuspendAllInterrupts()/SuspendOSInterrupts() and ends (returns)
 214:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       without calling the corresponding EnableAllInterrupts()/
 215:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       ResumeAllInterrupts() / ResumeOSInterrupts(),
 216:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the Operating System shall perform the missing service and shall call
 217:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****       the ErrorHook() (if configured) with the status E_OS_DISABLEDINT. */
 218:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c **** 
 219:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   /* Only check and reset ISR flags an counters because ISR re-enabling is done
 220:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****      in CPU layer */
 221:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   if ( EE_oo_check_disableint_error() )
 158              		.loc 1 221 0
 159 0002 1A68     		ldr	r2, [r3]
 160 0004 0AB1     		cbz	r2, .L15
 222:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****   {
 223:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_ORTI_set_lasterror(E_OS_DISABLEDINT);
 224:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_notify_error_service(OSId_ISR2Body, E_OS_DISABLEDINT);
 225:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     /* Reset ISRs counter */
 226:Generated_Source\PSoC5/ErikaOS_1_ee_irqendin.c ****     EE_oo_IRQ_disable_count = 0U;
 161              		.loc 1 226 0
 162 0006 0022     		movs	r2, #0
 163 0008 1A60     		str	r2, [r3]
 164              	.L15:
 165 000a 7047     		bx	lr
 166              	.L21:
 167              		.align	2
 168              	.L20:
 169 000c 00000000 		.word	EE_oo_IRQ_disable_count
 170              		.cfi_endproc
 171              	.LFE73:
 172              		.size	EE_IRQ_end_post_stub, .-EE_IRQ_end_post_stub
 173              		.text
 174              	.Letext0:
 175              		.file 4 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_types.inc"
 176              		.file 5 "Generated_Source\\PSoC5\\ErikaOS_1_cortex_mx_ee_cpu.inc"
 177              		.file 6 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_common.inc"
 178              		.file 7 "Generated_Source\\PSoC5\\ErikaOS_1_common_ee_primitives.inc"
 179              		.file 8 "Generated_Source\\PSoC5\\ErikaOS_1_ee_oo_intfunc.inc"
 180              		.section	.debug_info,"",%progbits
 181              	.Ldebug_info0:
 182 0000 DA050000 		.4byte	0x5da
 183 0004 0400     		.2byte	0x4
 184 0006 00000000 		.4byte	.Ldebug_abbrev0
 185 000a 04       		.byte	0x4
 186 000b 01       		.uleb128 0x1
 187 000c B5040000 		.4byte	.LASF90
 188 0010 0C       		.byte	0xc
 189 0011 F6030000 		.4byte	.LASF91
 190 0015 74010000 		.4byte	.LASF92
 191 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 192 001d 00000000 		.4byte	0
 193 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 19


 194 0025 02       		.uleb128 0x2
 195 0026 01       		.byte	0x1
 196 0027 06       		.byte	0x6
 197 0028 4C040000 		.4byte	.LASF0
 198 002c 02       		.uleb128 0x2
 199 002d 01       		.byte	0x1
 200 002e 08       		.byte	0x8
 201 002f 25040000 		.4byte	.LASF1
 202 0033 02       		.uleb128 0x2
 203 0034 02       		.byte	0x2
 204 0035 05       		.byte	0x5
 205 0036 A9000000 		.4byte	.LASF2
 206 003a 02       		.uleb128 0x2
 207 003b 02       		.byte	0x2
 208 003c 07       		.byte	0x7
 209 003d 68050000 		.4byte	.LASF3
 210 0041 02       		.uleb128 0x2
 211 0042 04       		.byte	0x4
 212 0043 05       		.byte	0x5
 213 0044 17030000 		.4byte	.LASF4
 214 0048 02       		.uleb128 0x2
 215 0049 04       		.byte	0x4
 216 004a 07       		.byte	0x7
 217 004b 10060000 		.4byte	.LASF5
 218 004f 02       		.uleb128 0x2
 219 0050 08       		.byte	0x8
 220 0051 05       		.byte	0x5
 221 0052 E0020000 		.4byte	.LASF6
 222 0056 02       		.uleb128 0x2
 223 0057 08       		.byte	0x8
 224 0058 07       		.byte	0x7
 225 0059 58040000 		.4byte	.LASF7
 226 005d 03       		.uleb128 0x3
 227 005e 04       		.byte	0x4
 228 005f 05       		.byte	0x5
 229 0060 696E7400 		.ascii	"int\000"
 230 0064 02       		.uleb128 0x2
 231 0065 04       		.byte	0x4
 232 0066 07       		.byte	0x7
 233 0067 87040000 		.4byte	.LASF8
 234 006b 02       		.uleb128 0x2
 235 006c 08       		.byte	0x8
 236 006d 04       		.byte	0x4
 237 006e DB030000 		.4byte	.LASF9
 238 0072 04       		.uleb128 0x4
 239 0073 EE020000 		.4byte	.LASF10
 240 0077 04       		.byte	0x4
 241 0078 3F       		.byte	0x3f
 242 0079 25000000 		.4byte	0x25
 243 007d 04       		.uleb128 0x4
 244 007e AE050000 		.4byte	.LASF11
 245 0082 04       		.byte	0x4
 246 0083 52       		.byte	0x52
 247 0084 3A000000 		.4byte	0x3a
 248 0088 04       		.uleb128 0x4
 249 0089 69020000 		.4byte	.LASF12
 250 008d 04       		.byte	0x4
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 20


 251 008e 53       		.byte	0x53
 252 008f 5D000000 		.4byte	0x5d
 253 0093 04       		.uleb128 0x4
 254 0094 00010000 		.4byte	.LASF13
 255 0098 04       		.byte	0x4
 256 0099 54       		.byte	0x54
 257 009a 64000000 		.4byte	0x64
 258 009e 04       		.uleb128 0x4
 259 009f 22000000 		.4byte	.LASF14
 260 00a3 05       		.byte	0x5
 261 00a4 4D       		.byte	0x4d
 262 00a5 93000000 		.4byte	0x93
 263 00a9 04       		.uleb128 0x4
 264 00aa D3000000 		.4byte	.LASF15
 265 00ae 05       		.byte	0x5
 266 00af 4F       		.byte	0x4f
 267 00b0 93000000 		.4byte	0x93
 268 00b4 04       		.uleb128 0x4
 269 00b5 22060000 		.4byte	.LASF16
 270 00b9 05       		.byte	0x5
 271 00ba 54       		.byte	0x54
 272 00bb 9E000000 		.4byte	0x9e
 273 00bf 04       		.uleb128 0x4
 274 00c0 3D010000 		.4byte	.LASF17
 275 00c4 05       		.byte	0x5
 276 00c5 78       		.byte	0x78
 277 00c6 88000000 		.4byte	0x88
 278 00ca 05       		.uleb128 0x5
 279 00cb F6020000 		.4byte	.LASF18
 280 00cf 06       		.byte	0x6
 281 00d0 1101     		.2byte	0x111
 282 00d2 7D000000 		.4byte	0x7d
 283 00d6 05       		.uleb128 0x5
 284 00d7 81030000 		.4byte	.LASF19
 285 00db 06       		.byte	0x6
 286 00dc 3502     		.2byte	0x235
 287 00de 9E000000 		.4byte	0x9e
 288 00e2 05       		.uleb128 0x5
 289 00e3 99030000 		.4byte	.LASF20
 290 00e7 06       		.byte	0x6
 291 00e8 5D02     		.2byte	0x25d
 292 00ea 9E000000 		.4byte	0x9e
 293 00ee 05       		.uleb128 0x5
 294 00ef 91060000 		.4byte	.LASF21
 295 00f3 06       		.byte	0x6
 296 00f4 6C02     		.2byte	0x26c
 297 00f6 9E000000 		.4byte	0x9e
 298 00fa 06       		.uleb128 0x6
 299 00fb 0C       		.byte	0xc
 300 00fc 06       		.byte	0x6
 301 00fd 7202     		.2byte	0x272
 302 00ff 2B010000 		.4byte	0x12b
 303 0103 07       		.uleb128 0x7
 304 0104 20030000 		.4byte	.LASF22
 305 0108 06       		.byte	0x6
 306 0109 7302     		.2byte	0x273
 307 010b D6000000 		.4byte	0xd6
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 21


 308 010f 00       		.byte	0
 309 0110 07       		.uleb128 0x7
 310 0111 5F000000 		.4byte	.LASF23
 311 0115 06       		.byte	0x6
 312 0116 7402     		.2byte	0x274
 313 0118 D6000000 		.4byte	0xd6
 314 011c 04       		.byte	0x4
 315 011d 07       		.uleb128 0x7
 316 011e 58010000 		.4byte	.LASF24
 317 0122 06       		.byte	0x6
 318 0123 7502     		.2byte	0x275
 319 0125 D6000000 		.4byte	0xd6
 320 0129 08       		.byte	0x8
 321 012a 00       		.byte	0
 322 012b 05       		.uleb128 0x5
 323 012c 4E030000 		.4byte	.LASF25
 324 0130 06       		.byte	0x6
 325 0131 7A02     		.2byte	0x27a
 326 0133 FA000000 		.4byte	0xfa
 327 0137 06       		.uleb128 0x6
 328 0138 08       		.byte	0x8
 329 0139 06       		.byte	0x6
 330 013a 7D02     		.2byte	0x27d
 331 013c 5B010000 		.4byte	0x15b
 332 0140 07       		.uleb128 0x7
 333 0141 61010000 		.4byte	.LASF26
 334 0145 06       		.byte	0x6
 335 0146 7E02     		.2byte	0x27e
 336 0148 D6000000 		.4byte	0xd6
 337 014c 00       		.byte	0
 338 014d 07       		.uleb128 0x7
 339 014e 1C070000 		.4byte	.LASF27
 340 0152 06       		.byte	0x6
 341 0153 7F02     		.2byte	0x27f
 342 0155 E2000000 		.4byte	0xe2
 343 0159 04       		.byte	0x4
 344 015a 00       		.byte	0
 345 015b 05       		.uleb128 0x5
 346 015c A4020000 		.4byte	.LASF28
 347 0160 06       		.byte	0x6
 348 0161 8002     		.2byte	0x280
 349 0163 37010000 		.4byte	0x137
 350 0167 08       		.uleb128 0x8
 351 0168 01       		.byte	0x1
 352 0169 2C000000 		.4byte	0x2c
 353 016d 06       		.byte	0x6
 354 016e 8A02     		.2byte	0x28a
 355 0170 81010000 		.4byte	0x181
 356 0174 09       		.uleb128 0x9
 357 0175 65060000 		.4byte	.LASF29
 358 0179 00       		.byte	0
 359 017a 09       		.uleb128 0x9
 360 017b 06030000 		.4byte	.LASF30
 361 017f 01       		.byte	0x1
 362 0180 00       		.byte	0
 363 0181 05       		.uleb128 0x5
 364 0182 35020000 		.4byte	.LASF31
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 22


 365 0186 06       		.byte	0x6
 366 0187 8D02     		.2byte	0x28d
 367 0189 67010000 		.4byte	0x167
 368 018d 05       		.uleb128 0x5
 369 018e EA000000 		.4byte	.LASF32
 370 0192 06       		.byte	0x6
 371 0193 9002     		.2byte	0x290
 372 0195 81010000 		.4byte	0x181
 373 0199 06       		.uleb128 0x6
 374 019a 0C       		.byte	0xc
 375 019b 06       		.byte	0x6
 376 019c 9402     		.2byte	0x294
 377 019e C8010000 		.4byte	0x1c8
 378 01a2 0A       		.uleb128 0xa
 379 01a3 6300     		.ascii	"c\000"
 380 01a5 06       		.byte	0x6
 381 01a6 9602     		.2byte	0x296
 382 01a8 EE000000 		.4byte	0xee
 383 01ac 00       		.byte	0
 384 01ad 07       		.uleb128 0x7
 385 01ae CB000000 		.4byte	.LASF33
 386 01b2 06       		.byte	0x6
 387 01b3 9802     		.2byte	0x298
 388 01b5 E2000000 		.4byte	0xe2
 389 01b9 04       		.byte	0x4
 390 01ba 07       		.uleb128 0x7
 391 01bb 00000000 		.4byte	.LASF34
 392 01bf 06       		.byte	0x6
 393 01c0 9A02     		.2byte	0x29a
 394 01c2 8D010000 		.4byte	0x18d
 395 01c6 08       		.byte	0x8
 396 01c7 00       		.byte	0
 397 01c8 05       		.uleb128 0x5
 398 01c9 90050000 		.4byte	.LASF35
 399 01cd 06       		.byte	0x6
 400 01ce 9B02     		.2byte	0x29b
 401 01d0 99010000 		.4byte	0x199
 402 01d4 06       		.uleb128 0x6
 403 01d5 10       		.byte	0x10
 404 01d6 06       		.byte	0x6
 405 01d7 9F02     		.2byte	0x29f
 406 01d9 12020000 		.4byte	0x212
 407 01dd 07       		.uleb128 0x7
 408 01de 83060000 		.4byte	.LASF36
 409 01e2 06       		.byte	0x6
 410 01e3 A002     		.2byte	0x2a0
 411 01e5 B4000000 		.4byte	0xb4
 412 01e9 00       		.byte	0
 413 01ea 07       		.uleb128 0x7
 414 01eb D5060000 		.4byte	.LASF37
 415 01ef 06       		.byte	0x6
 416 01f0 A102     		.2byte	0x2a1
 417 01f2 D6000000 		.4byte	0xd6
 418 01f6 04       		.byte	0x4
 419 01f7 07       		.uleb128 0x7
 420 01f8 C5000000 		.4byte	.LASF38
 421 01fc 06       		.byte	0x6
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 23


 422 01fd A202     		.2byte	0x2a2
 423 01ff D6000000 		.4byte	0xd6
 424 0203 08       		.byte	0x8
 425 0204 07       		.uleb128 0x7
 426 0205 0A070000 		.4byte	.LASF39
 427 0209 06       		.byte	0x6
 428 020a A302     		.2byte	0x2a3
 429 020c E2000000 		.4byte	0xe2
 430 0210 0C       		.byte	0xc
 431 0211 00       		.byte	0
 432 0212 05       		.uleb128 0x5
 433 0213 30030000 		.4byte	.LASF40
 434 0217 06       		.byte	0x6
 435 0218 A402     		.2byte	0x2a4
 436 021a D4010000 		.4byte	0x1d4
 437 021e 08       		.uleb128 0x8
 438 021f 01       		.byte	0x1
 439 0220 2C000000 		.4byte	0x2c
 440 0224 06       		.byte	0x6
 441 0225 5904     		.2byte	0x459
 442 0227 6E020000 		.4byte	0x26e
 443 022b 09       		.uleb128 0x9
 444 022c 05000000 		.4byte	.LASF41
 445 0230 00       		.byte	0
 446 0231 09       		.uleb128 0x9
 447 0232 5B050000 		.4byte	.LASF42
 448 0236 01       		.byte	0x1
 449 0237 09       		.uleb128 0x9
 450 0238 30010000 		.4byte	.LASF43
 451 023c 02       		.byte	0x2
 452 023d 09       		.uleb128 0x9
 453 023e B3000000 		.4byte	.LASF44
 454 0242 03       		.byte	0x3
 455 0243 09       		.uleb128 0x9
 456 0244 3A060000 		.4byte	.LASF45
 457 0248 04       		.byte	0x4
 458 0249 09       		.uleb128 0x9
 459 024a 51060000 		.4byte	.LASF46
 460 024e 05       		.byte	0x5
 461 024f 09       		.uleb128 0x9
 462 0250 6E060000 		.4byte	.LASF47
 463 0254 06       		.byte	0x6
 464 0255 09       		.uleb128 0x9
 465 0256 F6060000 		.4byte	.LASF48
 466 025a 07       		.byte	0x7
 467 025b 09       		.uleb128 0x9
 468 025c 7B050000 		.4byte	.LASF49
 469 0260 08       		.byte	0x8
 470 0261 09       		.uleb128 0x9
 471 0262 B8050000 		.4byte	.LASF50
 472 0266 09       		.byte	0x9
 473 0267 09       		.uleb128 0x9
 474 0268 BB020000 		.4byte	.LASF51
 475 026c 0A       		.byte	0xa
 476 026d 00       		.byte	0
 477 026e 05       		.uleb128 0x5
 478 026f DB000000 		.4byte	.LASF52
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 24


 479 0273 06       		.byte	0x6
 480 0274 6504     		.2byte	0x465
 481 0276 1E020000 		.4byte	0x21e
 482 027a 0B       		.uleb128 0xb
 483 027b CE050000 		.4byte	.LASF53
 484 027f 06       		.byte	0x6
 485 0280 D203     		.2byte	0x3d2
 486 0282 03       		.byte	0x3
 487 0283 94020000 		.4byte	0x294
 488 0287 0C       		.uleb128 0xc
 489 0288 746D7000 		.ascii	"tmp\000"
 490 028c 06       		.byte	0x6
 491 028d D203     		.2byte	0x3d2
 492 028f BF000000 		.4byte	0xbf
 493 0293 00       		.byte	0
 494 0294 0B       		.uleb128 0xb
 495 0295 65030000 		.4byte	.LASF54
 496 0299 06       		.byte	0x6
 497 029a 8404     		.2byte	0x484
 498 029c 03       		.byte	0x3
 499 029d AE020000 		.4byte	0x2ae
 500 02a1 0C       		.uleb128 0xc
 501 02a2 63747800 		.ascii	"ctx\000"
 502 02a6 06       		.byte	0x6
 503 02a7 8504     		.2byte	0x485
 504 02a9 6E020000 		.4byte	0x26e
 505 02ad 00       		.byte	0
 506 02ae 0D       		.uleb128 0xd
 507 02af C8020000 		.4byte	.LASF55
 508 02b3 03       		.byte	0x3
 509 02b4 B1       		.byte	0xb1
 510 02b5 03       		.byte	0x3
 511 02b6 C6020000 		.4byte	0x2c6
 512 02ba 0E       		.uleb128 0xe
 513 02bb 74696400 		.ascii	"tid\000"
 514 02bf 03       		.byte	0x3
 515 02c0 B1       		.byte	0xb1
 516 02c1 BF000000 		.4byte	0xbf
 517 02c5 00       		.byte	0
 518 02c6 0F       		.uleb128 0xf
 519 02c7 48000000 		.4byte	.LASF57
 520 02cb 02       		.byte	0x2
 521 02cc 8D01     		.2byte	0x18d
 522 02ce 03       		.byte	0x3
 523 02cf 0D       		.uleb128 0xd
 524 02d0 2A000000 		.4byte	.LASF56
 525 02d4 03       		.byte	0x3
 526 02d5 AB       		.byte	0xab
 527 02d6 03       		.byte	0x3
 528 02d7 E7020000 		.4byte	0x2e7
 529 02db 0E       		.uleb128 0xe
 530 02dc 74696400 		.ascii	"tid\000"
 531 02e0 03       		.byte	0x3
 532 02e1 AB       		.byte	0xab
 533 02e2 BF000000 		.4byte	0xbf
 534 02e6 00       		.byte	0
 535 02e7 10       		.uleb128 0x10
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 25


 536 02e8 75040000 		.4byte	.LASF59
 537 02ec 02       		.byte	0x2
 538 02ed EE       		.byte	0xee
 539 02ee BF000000 		.4byte	0xbf
 540 02f2 03       		.byte	0x3
 541 02f3 0F       		.uleb128 0xf
 542 02f4 43050000 		.4byte	.LASF58
 543 02f8 02       		.byte	0x2
 544 02f9 9A01     		.2byte	0x19a
 545 02fb 03       		.byte	0x3
 546 02fc 11       		.uleb128 0x11
 547 02fd BE030000 		.4byte	.LASF60
 548 0301 02       		.byte	0x2
 549 0302 A401     		.2byte	0x1a4
 550 0304 B4000000 		.4byte	0xb4
 551 0308 03       		.byte	0x3
 552 0309 12       		.uleb128 0x12
 553 030a 6C000000 		.4byte	.LASF61
 554 030e 01       		.byte	0x1
 555 030f 78       		.byte	0x78
 556 0310 03       		.byte	0x3
 557 0311 0D       		.uleb128 0xd
 558 0312 94040000 		.4byte	.LASF62
 559 0316 01       		.byte	0x1
 560 0317 80       		.byte	0x80
 561 0318 01       		.byte	0x1
 562 0319 29030000 		.4byte	0x329
 563 031d 13       		.uleb128 0x13
 564 031e 6F040000 		.4byte	.LASF63
 565 0322 01       		.byte	0x1
 566 0323 82       		.byte	0x82
 567 0324 BF000000 		.4byte	0xbf
 568 0328 00       		.byte	0
 569 0329 14       		.uleb128 0x14
 570 032a 44010000 		.4byte	.LASF65
 571 032e 01       		.byte	0x1
 572 032f 9F       		.byte	0x9f
 573 0330 00000000 		.4byte	.LFB72
 574 0334 78000000 		.4byte	.LFE72-.LFB72
 575 0338 01       		.uleb128 0x1
 576 0339 9C       		.byte	0x9c
 577 033a F8030000 		.4byte	0x3f8
 578 033e 15       		.uleb128 0x15
 579 033f 40000000 		.4byte	.LASF93
 580 0343 01       		.byte	0x1
 581 0344 A1       		.byte	0xa1
 582 0345 BF000000 		.4byte	0xbf
 583 0349 00000000 		.4byte	.LLST0
 584 034d 13       		.uleb128 0x13
 585 034e 9D060000 		.4byte	.LASF64
 586 0352 01       		.byte	0x1
 587 0353 A1       		.byte	0xa1
 588 0354 BF000000 		.4byte	0xbf
 589 0358 16       		.uleb128 0x16
 590 0359 E7020000 		.4byte	0x2e7
 591 035d 06000000 		.4byte	.LBB36
 592 0361 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 26


 593 0365 01       		.byte	0x1
 594 0366 A4       		.byte	0xa4
 595 0367 17       		.uleb128 0x17
 596 0368 11030000 		.4byte	0x311
 597 036c 3A000000 		.4byte	.LBB40
 598 0370 18000000 		.4byte	.LBE40-.LBB40
 599 0374 01       		.byte	0x1
 600 0375 BC       		.byte	0xbc
 601 0376 D1030000 		.4byte	0x3d1
 602 037a 18       		.uleb128 0x18
 603 037b 3A000000 		.4byte	.LBB41
 604 037f 18000000 		.4byte	.LBE41-.LBB41
 605 0383 19       		.uleb128 0x19
 606 0384 1D030000 		.4byte	0x31d
 607 0388 1E000000 		.4byte	.LLST1
 608 038c 17       		.uleb128 0x17
 609 038d AE020000 		.4byte	0x2ae
 610 0391 4A000000 		.4byte	.LBB42
 611 0395 04000000 		.4byte	.LBE42-.LBB42
 612 0399 01       		.byte	0x1
 613 039a 8B       		.byte	0x8b
 614 039b A9030000 		.4byte	0x3a9
 615 039f 1A       		.uleb128 0x1a
 616 03a0 BA020000 		.4byte	0x2ba
 617 03a4 31000000 		.4byte	.LLST2
 618 03a8 00       		.byte	0
 619 03a9 17       		.uleb128 0x17
 620 03aa CF020000 		.4byte	0x2cf
 621 03ae 4E000000 		.4byte	.LBB44
 622 03b2 04000000 		.4byte	.LBE44-.LBB44
 623 03b6 01       		.byte	0x1
 624 03b7 8D       		.byte	0x8d
 625 03b8 C6030000 		.4byte	0x3c6
 626 03bc 1A       		.uleb128 0x1a
 627 03bd DB020000 		.4byte	0x2db
 628 03c1 44000000 		.4byte	.LLST3
 629 03c5 00       		.byte	0
 630 03c6 1B       		.uleb128 0x1b
 631 03c7 3E000000 		.4byte	.LVL2
 632 03cb C5050000 		.4byte	0x5c5
 633 03cf 00       		.byte	0
 634 03d0 00       		.byte	0
 635 03d1 17       		.uleb128 0x17
 636 03d2 AE020000 		.4byte	0x2ae
 637 03d6 52000000 		.4byte	.LBB46
 638 03da 26000000 		.4byte	.LBE46-.LBB46
 639 03de 01       		.byte	0x1
 640 03df C9       		.byte	0xc9
 641 03e0 EE030000 		.4byte	0x3ee
 642 03e4 1A       		.uleb128 0x1a
 643 03e5 BA020000 		.4byte	0x2ba
 644 03e9 57000000 		.4byte	.LLST4
 645 03ed 00       		.byte	0
 646 03ee 1B       		.uleb128 0x1b
 647 03ef 06000000 		.4byte	.LVL0
 648 03f3 D1050000 		.4byte	0x5d1
 649 03f7 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 27


 650 03f8 14       		.uleb128 0x14
 651 03f9 0A010000 		.4byte	.LASF66
 652 03fd 01       		.byte	0x1
 653 03fe D3       		.byte	0xd3
 654 03ff 00000000 		.4byte	.LFB73
 655 0403 10000000 		.4byte	.LFE73-.LFB73
 656 0407 01       		.uleb128 0x1
 657 0408 9C       		.byte	0x9c
 658 0409 1D040000 		.4byte	0x41d
 659 040d 1C       		.uleb128 0x1c
 660 040e FC020000 		.4byte	0x2fc
 661 0412 00000000 		.4byte	.LBB48
 662 0416 02000000 		.4byte	.LBE48-.LBB48
 663 041a 01       		.byte	0x1
 664 041b DD       		.byte	0xdd
 665 041c 00       		.byte	0
 666 041d 1D       		.uleb128 0x1d
 667 041e 54020000 		.4byte	.LASF67
 668 0422 07       		.byte	0x7
 669 0423 44       		.byte	0x44
 670 0424 9E000000 		.4byte	0x9e
 671 0428 1D       		.uleb128 0x1d
 672 0429 72020000 		.4byte	.LASF68
 673 042d 03       		.byte	0x3
 674 042e 48       		.byte	0x48
 675 042f BF000000 		.4byte	0xbf
 676 0433 1E       		.uleb128 0x1e
 677 0434 4A040000 		.4byte	0x44a
 678 0438 43040000 		.4byte	0x443
 679 043c 1F       		.uleb128 0x1f
 680 043d 43040000 		.4byte	0x443
 681 0441 03       		.byte	0x3
 682 0442 00       		.byte	0
 683 0443 02       		.uleb128 0x2
 684 0444 04       		.byte	0x4
 685 0445 07       		.byte	0x7
 686 0446 88060000 		.4byte	.LASF69
 687 044a 20       		.uleb128 0x20
 688 044b 9E000000 		.4byte	0x9e
 689 044f 1D       		.uleb128 0x1d
 690 0450 1F010000 		.4byte	.LASF70
 691 0454 06       		.byte	0x6
 692 0455 B2       		.byte	0xb2
 693 0456 5A040000 		.4byte	0x45a
 694 045a 20       		.uleb128 0x20
 695 045b 33040000 		.4byte	0x433
 696 045f 1D       		.uleb128 0x1d
 697 0460 A5060000 		.4byte	.LASF71
 698 0464 06       		.byte	0x6
 699 0465 B3       		.byte	0xb3
 700 0466 6A040000 		.4byte	0x46a
 701 046a 20       		.uleb128 0x20
 702 046b 33040000 		.4byte	0x433
 703 046f 1E       		.uleb128 0x1e
 704 0470 9E000000 		.4byte	0x9e
 705 0474 7F040000 		.4byte	0x47f
 706 0478 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 28


 707 0479 43040000 		.4byte	0x443
 708 047d 03       		.byte	0x3
 709 047e 00       		.byte	0
 710 047f 1D       		.uleb128 0x1d
 711 0480 67010000 		.4byte	.LASF72
 712 0484 06       		.byte	0x6
 713 0485 CA       		.byte	0xca
 714 0486 6F040000 		.4byte	0x46f
 715 048a 1E       		.uleb128 0x1e
 716 048b BF000000 		.4byte	0xbf
 717 048f 9A040000 		.4byte	0x49a
 718 0493 1F       		.uleb128 0x1f
 719 0494 43040000 		.4byte	0x443
 720 0498 03       		.byte	0x3
 721 0499 00       		.byte	0
 722 049a 1D       		.uleb128 0x1d
 723 049b B9060000 		.4byte	.LASF73
 724 049f 06       		.byte	0x6
 725 04a0 D2       		.byte	0xd2
 726 04a1 8A040000 		.4byte	0x48a
 727 04a5 1D       		.uleb128 0x1d
 728 04a6 A9040000 		.4byte	.LASF74
 729 04aa 06       		.byte	0x6
 730 04ab DA       		.byte	0xda
 731 04ac 6F040000 		.4byte	0x46f
 732 04b0 1D       		.uleb128 0x1d
 733 04b1 2E060000 		.4byte	.LASF75
 734 04b5 06       		.byte	0x6
 735 04b6 E2       		.byte	0xe2
 736 04b7 BF000000 		.4byte	0xbf
 737 04bb 1D       		.uleb128 0x1d
 738 04bc 8A030000 		.4byte	.LASF76
 739 04c0 06       		.byte	0x6
 740 04c1 F7       		.byte	0xf7
 741 04c2 9E000000 		.4byte	0x9e
 742 04c6 21       		.uleb128 0x21
 743 04c7 14000000 		.4byte	.LASF77
 744 04cb 06       		.byte	0x6
 745 04cc 3F01     		.2byte	0x13f
 746 04ce CA000000 		.4byte	0xca
 747 04d2 21       		.uleb128 0x21
 748 04d3 85000000 		.4byte	.LASF78
 749 04d7 06       		.byte	0x6
 750 04d8 5C01     		.2byte	0x15c
 751 04da 6F040000 		.4byte	0x46f
 752 04de 1E       		.uleb128 0x1e
 753 04df B4000000 		.4byte	0xb4
 754 04e3 EE040000 		.4byte	0x4ee
 755 04e7 1F       		.uleb128 0x1f
 756 04e8 43040000 		.4byte	0x443
 757 04ec 03       		.byte	0x3
 758 04ed 00       		.byte	0
 759 04ee 21       		.uleb128 0x21
 760 04ef 98000000 		.4byte	.LASF79
 761 04f3 06       		.byte	0x6
 762 04f4 6701     		.2byte	0x167
 763 04f6 DE040000 		.4byte	0x4de
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 29


 764 04fa 1E       		.uleb128 0x1e
 765 04fb 0A050000 		.4byte	0x50a
 766 04ff 0A050000 		.4byte	0x50a
 767 0503 1F       		.uleb128 0x1f
 768 0504 43040000 		.4byte	0x443
 769 0508 00       		.byte	0
 770 0509 00       		.byte	0
 771 050a 20       		.uleb128 0x20
 772 050b 2B010000 		.4byte	0x12b
 773 050f 21       		.uleb128 0x21
 774 0510 E7030000 		.4byte	.LASF80
 775 0514 06       		.byte	0x6
 776 0515 CA02     		.2byte	0x2ca
 777 0517 1B050000 		.4byte	0x51b
 778 051b 20       		.uleb128 0x20
 779 051c FA040000 		.4byte	0x4fa
 780 0520 1E       		.uleb128 0x1e
 781 0521 30050000 		.4byte	0x530
 782 0525 30050000 		.4byte	0x530
 783 0529 1F       		.uleb128 0x1f
 784 052a 43040000 		.4byte	0x443
 785 052e 01       		.byte	0x1
 786 052f 00       		.byte	0
 787 0530 20       		.uleb128 0x20
 788 0531 C8010000 		.4byte	0x1c8
 789 0535 21       		.uleb128 0x21
 790 0536 1C020000 		.4byte	.LASF81
 791 053a 06       		.byte	0x6
 792 053b DD02     		.2byte	0x2dd
 793 053d 41050000 		.4byte	0x541
 794 0541 20       		.uleb128 0x20
 795 0542 20050000 		.4byte	0x520
 796 0546 1E       		.uleb128 0x1e
 797 0547 5B010000 		.4byte	0x15b
 798 054b 56050000 		.4byte	0x556
 799 054f 1F       		.uleb128 0x1f
 800 0550 43040000 		.4byte	0x443
 801 0554 00       		.byte	0
 802 0555 00       		.byte	0
 803 0556 21       		.uleb128 0x21
 804 0557 EE050000 		.4byte	.LASF82
 805 055b 06       		.byte	0x6
 806 055c FB02     		.2byte	0x2fb
 807 055e 46050000 		.4byte	0x546
 808 0562 1E       		.uleb128 0x1e
 809 0563 12020000 		.4byte	0x212
 810 0567 72050000 		.4byte	0x572
 811 056b 1F       		.uleb128 0x1f
 812 056c 43040000 		.4byte	0x443
 813 0570 01       		.byte	0x1
 814 0571 00       		.byte	0
 815 0572 21       		.uleb128 0x21
 816 0573 33040000 		.4byte	.LASF83
 817 0577 06       		.byte	0x6
 818 0578 0403     		.2byte	0x304
 819 057a 62050000 		.4byte	0x562
 820 057e 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 30


 821 057f DE060000 		.4byte	.LASF84
 822 0583 08       		.byte	0x8
 823 0584 40       		.byte	0x40
 824 0585 9E000000 		.4byte	0x9e
 825 0589 1D       		.uleb128 0x1d
 826 058a 8B020000 		.4byte	.LASF85
 827 058e 08       		.byte	0x8
 828 058f 47       		.byte	0x47
 829 0590 A9000000 		.4byte	0xa9
 830 0594 1D       		.uleb128 0x1d
 831 0595 FD050000 		.4byte	.LASF86
 832 0599 08       		.byte	0x8
 833 059a 4A       		.byte	0x4a
 834 059b 9E000000 		.4byte	0x9e
 835 059f 1E       		.uleb128 0x1e
 836 05a0 AF050000 		.4byte	0x5af
 837 05a4 AF050000 		.4byte	0x5af
 838 05a8 1F       		.uleb128 0x1f
 839 05a9 43040000 		.4byte	0x443
 840 05ad FF       		.byte	0xff
 841 05ae 00       		.byte	0
 842 05af 20       		.uleb128 0x20
 843 05b0 72000000 		.4byte	0x72
 844 05b4 21       		.uleb128 0x21
 845 05b5 0F070000 		.4byte	.LASF87
 846 05b9 02       		.byte	0x2
 847 05ba AB01     		.2byte	0x1ab
 848 05bc C0050000 		.4byte	0x5c0
 849 05c0 20       		.uleb128 0x20
 850 05c1 9F050000 		.4byte	0x59f
 851 05c5 22       		.uleb128 0x22
 852 05c6 AB030000 		.4byte	.LASF88
 853 05ca AB030000 		.4byte	.LASF88
 854 05ce 02       		.byte	0x2
 855 05cf E901     		.2byte	0x1e9
 856 05d1 22       		.uleb128 0x22
 857 05d2 C4060000 		.4byte	.LASF89
 858 05d6 C4060000 		.4byte	.LASF89
 859 05da 02       		.byte	0x2
 860 05db CB01     		.2byte	0x1cb
 861 05dd 00       		.byte	0
 862              		.section	.debug_abbrev,"",%progbits
 863              	.Ldebug_abbrev0:
 864 0000 01       		.uleb128 0x1
 865 0001 11       		.uleb128 0x11
 866 0002 01       		.byte	0x1
 867 0003 25       		.uleb128 0x25
 868 0004 0E       		.uleb128 0xe
 869 0005 13       		.uleb128 0x13
 870 0006 0B       		.uleb128 0xb
 871 0007 03       		.uleb128 0x3
 872 0008 0E       		.uleb128 0xe
 873 0009 1B       		.uleb128 0x1b
 874 000a 0E       		.uleb128 0xe
 875 000b 55       		.uleb128 0x55
 876 000c 17       		.uleb128 0x17
 877 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 31


 878 000e 01       		.uleb128 0x1
 879 000f 10       		.uleb128 0x10
 880 0010 17       		.uleb128 0x17
 881 0011 00       		.byte	0
 882 0012 00       		.byte	0
 883 0013 02       		.uleb128 0x2
 884 0014 24       		.uleb128 0x24
 885 0015 00       		.byte	0
 886 0016 0B       		.uleb128 0xb
 887 0017 0B       		.uleb128 0xb
 888 0018 3E       		.uleb128 0x3e
 889 0019 0B       		.uleb128 0xb
 890 001a 03       		.uleb128 0x3
 891 001b 0E       		.uleb128 0xe
 892 001c 00       		.byte	0
 893 001d 00       		.byte	0
 894 001e 03       		.uleb128 0x3
 895 001f 24       		.uleb128 0x24
 896 0020 00       		.byte	0
 897 0021 0B       		.uleb128 0xb
 898 0022 0B       		.uleb128 0xb
 899 0023 3E       		.uleb128 0x3e
 900 0024 0B       		.uleb128 0xb
 901 0025 03       		.uleb128 0x3
 902 0026 08       		.uleb128 0x8
 903 0027 00       		.byte	0
 904 0028 00       		.byte	0
 905 0029 04       		.uleb128 0x4
 906 002a 16       		.uleb128 0x16
 907 002b 00       		.byte	0
 908 002c 03       		.uleb128 0x3
 909 002d 0E       		.uleb128 0xe
 910 002e 3A       		.uleb128 0x3a
 911 002f 0B       		.uleb128 0xb
 912 0030 3B       		.uleb128 0x3b
 913 0031 0B       		.uleb128 0xb
 914 0032 49       		.uleb128 0x49
 915 0033 13       		.uleb128 0x13
 916 0034 00       		.byte	0
 917 0035 00       		.byte	0
 918 0036 05       		.uleb128 0x5
 919 0037 16       		.uleb128 0x16
 920 0038 00       		.byte	0
 921 0039 03       		.uleb128 0x3
 922 003a 0E       		.uleb128 0xe
 923 003b 3A       		.uleb128 0x3a
 924 003c 0B       		.uleb128 0xb
 925 003d 3B       		.uleb128 0x3b
 926 003e 05       		.uleb128 0x5
 927 003f 49       		.uleb128 0x49
 928 0040 13       		.uleb128 0x13
 929 0041 00       		.byte	0
 930 0042 00       		.byte	0
 931 0043 06       		.uleb128 0x6
 932 0044 13       		.uleb128 0x13
 933 0045 01       		.byte	0x1
 934 0046 0B       		.uleb128 0xb
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 32


 935 0047 0B       		.uleb128 0xb
 936 0048 3A       		.uleb128 0x3a
 937 0049 0B       		.uleb128 0xb
 938 004a 3B       		.uleb128 0x3b
 939 004b 05       		.uleb128 0x5
 940 004c 01       		.uleb128 0x1
 941 004d 13       		.uleb128 0x13
 942 004e 00       		.byte	0
 943 004f 00       		.byte	0
 944 0050 07       		.uleb128 0x7
 945 0051 0D       		.uleb128 0xd
 946 0052 00       		.byte	0
 947 0053 03       		.uleb128 0x3
 948 0054 0E       		.uleb128 0xe
 949 0055 3A       		.uleb128 0x3a
 950 0056 0B       		.uleb128 0xb
 951 0057 3B       		.uleb128 0x3b
 952 0058 05       		.uleb128 0x5
 953 0059 49       		.uleb128 0x49
 954 005a 13       		.uleb128 0x13
 955 005b 38       		.uleb128 0x38
 956 005c 0B       		.uleb128 0xb
 957 005d 00       		.byte	0
 958 005e 00       		.byte	0
 959 005f 08       		.uleb128 0x8
 960 0060 04       		.uleb128 0x4
 961 0061 01       		.byte	0x1
 962 0062 0B       		.uleb128 0xb
 963 0063 0B       		.uleb128 0xb
 964 0064 49       		.uleb128 0x49
 965 0065 13       		.uleb128 0x13
 966 0066 3A       		.uleb128 0x3a
 967 0067 0B       		.uleb128 0xb
 968 0068 3B       		.uleb128 0x3b
 969 0069 05       		.uleb128 0x5
 970 006a 01       		.uleb128 0x1
 971 006b 13       		.uleb128 0x13
 972 006c 00       		.byte	0
 973 006d 00       		.byte	0
 974 006e 09       		.uleb128 0x9
 975 006f 28       		.uleb128 0x28
 976 0070 00       		.byte	0
 977 0071 03       		.uleb128 0x3
 978 0072 0E       		.uleb128 0xe
 979 0073 1C       		.uleb128 0x1c
 980 0074 0B       		.uleb128 0xb
 981 0075 00       		.byte	0
 982 0076 00       		.byte	0
 983 0077 0A       		.uleb128 0xa
 984 0078 0D       		.uleb128 0xd
 985 0079 00       		.byte	0
 986 007a 03       		.uleb128 0x3
 987 007b 08       		.uleb128 0x8
 988 007c 3A       		.uleb128 0x3a
 989 007d 0B       		.uleb128 0xb
 990 007e 3B       		.uleb128 0x3b
 991 007f 05       		.uleb128 0x5
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 33


 992 0080 49       		.uleb128 0x49
 993 0081 13       		.uleb128 0x13
 994 0082 38       		.uleb128 0x38
 995 0083 0B       		.uleb128 0xb
 996 0084 00       		.byte	0
 997 0085 00       		.byte	0
 998 0086 0B       		.uleb128 0xb
 999 0087 2E       		.uleb128 0x2e
 1000 0088 01       		.byte	0x1
 1001 0089 03       		.uleb128 0x3
 1002 008a 0E       		.uleb128 0xe
 1003 008b 3A       		.uleb128 0x3a
 1004 008c 0B       		.uleb128 0xb
 1005 008d 3B       		.uleb128 0x3b
 1006 008e 05       		.uleb128 0x5
 1007 008f 27       		.uleb128 0x27
 1008 0090 19       		.uleb128 0x19
 1009 0091 20       		.uleb128 0x20
 1010 0092 0B       		.uleb128 0xb
 1011 0093 01       		.uleb128 0x1
 1012 0094 13       		.uleb128 0x13
 1013 0095 00       		.byte	0
 1014 0096 00       		.byte	0
 1015 0097 0C       		.uleb128 0xc
 1016 0098 05       		.uleb128 0x5
 1017 0099 00       		.byte	0
 1018 009a 03       		.uleb128 0x3
 1019 009b 08       		.uleb128 0x8
 1020 009c 3A       		.uleb128 0x3a
 1021 009d 0B       		.uleb128 0xb
 1022 009e 3B       		.uleb128 0x3b
 1023 009f 05       		.uleb128 0x5
 1024 00a0 49       		.uleb128 0x49
 1025 00a1 13       		.uleb128 0x13
 1026 00a2 00       		.byte	0
 1027 00a3 00       		.byte	0
 1028 00a4 0D       		.uleb128 0xd
 1029 00a5 2E       		.uleb128 0x2e
 1030 00a6 01       		.byte	0x1
 1031 00a7 03       		.uleb128 0x3
 1032 00a8 0E       		.uleb128 0xe
 1033 00a9 3A       		.uleb128 0x3a
 1034 00aa 0B       		.uleb128 0xb
 1035 00ab 3B       		.uleb128 0x3b
 1036 00ac 0B       		.uleb128 0xb
 1037 00ad 27       		.uleb128 0x27
 1038 00ae 19       		.uleb128 0x19
 1039 00af 20       		.uleb128 0x20
 1040 00b0 0B       		.uleb128 0xb
 1041 00b1 01       		.uleb128 0x1
 1042 00b2 13       		.uleb128 0x13
 1043 00b3 00       		.byte	0
 1044 00b4 00       		.byte	0
 1045 00b5 0E       		.uleb128 0xe
 1046 00b6 05       		.uleb128 0x5
 1047 00b7 00       		.byte	0
 1048 00b8 03       		.uleb128 0x3
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 34


 1049 00b9 08       		.uleb128 0x8
 1050 00ba 3A       		.uleb128 0x3a
 1051 00bb 0B       		.uleb128 0xb
 1052 00bc 3B       		.uleb128 0x3b
 1053 00bd 0B       		.uleb128 0xb
 1054 00be 49       		.uleb128 0x49
 1055 00bf 13       		.uleb128 0x13
 1056 00c0 00       		.byte	0
 1057 00c1 00       		.byte	0
 1058 00c2 0F       		.uleb128 0xf
 1059 00c3 2E       		.uleb128 0x2e
 1060 00c4 00       		.byte	0
 1061 00c5 03       		.uleb128 0x3
 1062 00c6 0E       		.uleb128 0xe
 1063 00c7 3A       		.uleb128 0x3a
 1064 00c8 0B       		.uleb128 0xb
 1065 00c9 3B       		.uleb128 0x3b
 1066 00ca 05       		.uleb128 0x5
 1067 00cb 27       		.uleb128 0x27
 1068 00cc 19       		.uleb128 0x19
 1069 00cd 20       		.uleb128 0x20
 1070 00ce 0B       		.uleb128 0xb
 1071 00cf 00       		.byte	0
 1072 00d0 00       		.byte	0
 1073 00d1 10       		.uleb128 0x10
 1074 00d2 2E       		.uleb128 0x2e
 1075 00d3 00       		.byte	0
 1076 00d4 03       		.uleb128 0x3
 1077 00d5 0E       		.uleb128 0xe
 1078 00d6 3A       		.uleb128 0x3a
 1079 00d7 0B       		.uleb128 0xb
 1080 00d8 3B       		.uleb128 0x3b
 1081 00d9 0B       		.uleb128 0xb
 1082 00da 27       		.uleb128 0x27
 1083 00db 19       		.uleb128 0x19
 1084 00dc 49       		.uleb128 0x49
 1085 00dd 13       		.uleb128 0x13
 1086 00de 20       		.uleb128 0x20
 1087 00df 0B       		.uleb128 0xb
 1088 00e0 00       		.byte	0
 1089 00e1 00       		.byte	0
 1090 00e2 11       		.uleb128 0x11
 1091 00e3 2E       		.uleb128 0x2e
 1092 00e4 00       		.byte	0
 1093 00e5 03       		.uleb128 0x3
 1094 00e6 0E       		.uleb128 0xe
 1095 00e7 3A       		.uleb128 0x3a
 1096 00e8 0B       		.uleb128 0xb
 1097 00e9 3B       		.uleb128 0x3b
 1098 00ea 05       		.uleb128 0x5
 1099 00eb 27       		.uleb128 0x27
 1100 00ec 19       		.uleb128 0x19
 1101 00ed 49       		.uleb128 0x49
 1102 00ee 13       		.uleb128 0x13
 1103 00ef 20       		.uleb128 0x20
 1104 00f0 0B       		.uleb128 0xb
 1105 00f1 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 35


 1106 00f2 00       		.byte	0
 1107 00f3 12       		.uleb128 0x12
 1108 00f4 2E       		.uleb128 0x2e
 1109 00f5 00       		.byte	0
 1110 00f6 03       		.uleb128 0x3
 1111 00f7 0E       		.uleb128 0xe
 1112 00f8 3A       		.uleb128 0x3a
 1113 00f9 0B       		.uleb128 0xb
 1114 00fa 3B       		.uleb128 0x3b
 1115 00fb 0B       		.uleb128 0xb
 1116 00fc 27       		.uleb128 0x27
 1117 00fd 19       		.uleb128 0x19
 1118 00fe 20       		.uleb128 0x20
 1119 00ff 0B       		.uleb128 0xb
 1120 0100 00       		.byte	0
 1121 0101 00       		.byte	0
 1122 0102 13       		.uleb128 0x13
 1123 0103 34       		.uleb128 0x34
 1124 0104 00       		.byte	0
 1125 0105 03       		.uleb128 0x3
 1126 0106 0E       		.uleb128 0xe
 1127 0107 3A       		.uleb128 0x3a
 1128 0108 0B       		.uleb128 0xb
 1129 0109 3B       		.uleb128 0x3b
 1130 010a 0B       		.uleb128 0xb
 1131 010b 49       		.uleb128 0x49
 1132 010c 13       		.uleb128 0x13
 1133 010d 00       		.byte	0
 1134 010e 00       		.byte	0
 1135 010f 14       		.uleb128 0x14
 1136 0110 2E       		.uleb128 0x2e
 1137 0111 01       		.byte	0x1
 1138 0112 3F       		.uleb128 0x3f
 1139 0113 19       		.uleb128 0x19
 1140 0114 03       		.uleb128 0x3
 1141 0115 0E       		.uleb128 0xe
 1142 0116 3A       		.uleb128 0x3a
 1143 0117 0B       		.uleb128 0xb
 1144 0118 3B       		.uleb128 0x3b
 1145 0119 0B       		.uleb128 0xb
 1146 011a 27       		.uleb128 0x27
 1147 011b 19       		.uleb128 0x19
 1148 011c 11       		.uleb128 0x11
 1149 011d 01       		.uleb128 0x1
 1150 011e 12       		.uleb128 0x12
 1151 011f 06       		.uleb128 0x6
 1152 0120 40       		.uleb128 0x40
 1153 0121 18       		.uleb128 0x18
 1154 0122 9742     		.uleb128 0x2117
 1155 0124 19       		.uleb128 0x19
 1156 0125 01       		.uleb128 0x1
 1157 0126 13       		.uleb128 0x13
 1158 0127 00       		.byte	0
 1159 0128 00       		.byte	0
 1160 0129 15       		.uleb128 0x15
 1161 012a 34       		.uleb128 0x34
 1162 012b 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 36


 1163 012c 03       		.uleb128 0x3
 1164 012d 0E       		.uleb128 0xe
 1165 012e 3A       		.uleb128 0x3a
 1166 012f 0B       		.uleb128 0xb
 1167 0130 3B       		.uleb128 0x3b
 1168 0131 0B       		.uleb128 0xb
 1169 0132 49       		.uleb128 0x49
 1170 0133 13       		.uleb128 0x13
 1171 0134 02       		.uleb128 0x2
 1172 0135 17       		.uleb128 0x17
 1173 0136 00       		.byte	0
 1174 0137 00       		.byte	0
 1175 0138 16       		.uleb128 0x16
 1176 0139 1D       		.uleb128 0x1d
 1177 013a 00       		.byte	0
 1178 013b 31       		.uleb128 0x31
 1179 013c 13       		.uleb128 0x13
 1180 013d 52       		.uleb128 0x52
 1181 013e 01       		.uleb128 0x1
 1182 013f 55       		.uleb128 0x55
 1183 0140 17       		.uleb128 0x17
 1184 0141 58       		.uleb128 0x58
 1185 0142 0B       		.uleb128 0xb
 1186 0143 59       		.uleb128 0x59
 1187 0144 0B       		.uleb128 0xb
 1188 0145 00       		.byte	0
 1189 0146 00       		.byte	0
 1190 0147 17       		.uleb128 0x17
 1191 0148 1D       		.uleb128 0x1d
 1192 0149 01       		.byte	0x1
 1193 014a 31       		.uleb128 0x31
 1194 014b 13       		.uleb128 0x13
 1195 014c 11       		.uleb128 0x11
 1196 014d 01       		.uleb128 0x1
 1197 014e 12       		.uleb128 0x12
 1198 014f 06       		.uleb128 0x6
 1199 0150 58       		.uleb128 0x58
 1200 0151 0B       		.uleb128 0xb
 1201 0152 59       		.uleb128 0x59
 1202 0153 0B       		.uleb128 0xb
 1203 0154 01       		.uleb128 0x1
 1204 0155 13       		.uleb128 0x13
 1205 0156 00       		.byte	0
 1206 0157 00       		.byte	0
 1207 0158 18       		.uleb128 0x18
 1208 0159 0B       		.uleb128 0xb
 1209 015a 01       		.byte	0x1
 1210 015b 11       		.uleb128 0x11
 1211 015c 01       		.uleb128 0x1
 1212 015d 12       		.uleb128 0x12
 1213 015e 06       		.uleb128 0x6
 1214 015f 00       		.byte	0
 1215 0160 00       		.byte	0
 1216 0161 19       		.uleb128 0x19
 1217 0162 34       		.uleb128 0x34
 1218 0163 00       		.byte	0
 1219 0164 31       		.uleb128 0x31
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 37


 1220 0165 13       		.uleb128 0x13
 1221 0166 02       		.uleb128 0x2
 1222 0167 17       		.uleb128 0x17
 1223 0168 00       		.byte	0
 1224 0169 00       		.byte	0
 1225 016a 1A       		.uleb128 0x1a
 1226 016b 05       		.uleb128 0x5
 1227 016c 00       		.byte	0
 1228 016d 31       		.uleb128 0x31
 1229 016e 13       		.uleb128 0x13
 1230 016f 02       		.uleb128 0x2
 1231 0170 17       		.uleb128 0x17
 1232 0171 00       		.byte	0
 1233 0172 00       		.byte	0
 1234 0173 1B       		.uleb128 0x1b
 1235 0174 898201   		.uleb128 0x4109
 1236 0177 00       		.byte	0
 1237 0178 11       		.uleb128 0x11
 1238 0179 01       		.uleb128 0x1
 1239 017a 31       		.uleb128 0x31
 1240 017b 13       		.uleb128 0x13
 1241 017c 00       		.byte	0
 1242 017d 00       		.byte	0
 1243 017e 1C       		.uleb128 0x1c
 1244 017f 1D       		.uleb128 0x1d
 1245 0180 00       		.byte	0
 1246 0181 31       		.uleb128 0x31
 1247 0182 13       		.uleb128 0x13
 1248 0183 11       		.uleb128 0x11
 1249 0184 01       		.uleb128 0x1
 1250 0185 12       		.uleb128 0x12
 1251 0186 06       		.uleb128 0x6
 1252 0187 58       		.uleb128 0x58
 1253 0188 0B       		.uleb128 0xb
 1254 0189 59       		.uleb128 0x59
 1255 018a 0B       		.uleb128 0xb
 1256 018b 00       		.byte	0
 1257 018c 00       		.byte	0
 1258 018d 1D       		.uleb128 0x1d
 1259 018e 34       		.uleb128 0x34
 1260 018f 00       		.byte	0
 1261 0190 03       		.uleb128 0x3
 1262 0191 0E       		.uleb128 0xe
 1263 0192 3A       		.uleb128 0x3a
 1264 0193 0B       		.uleb128 0xb
 1265 0194 3B       		.uleb128 0x3b
 1266 0195 0B       		.uleb128 0xb
 1267 0196 49       		.uleb128 0x49
 1268 0197 13       		.uleb128 0x13
 1269 0198 3F       		.uleb128 0x3f
 1270 0199 19       		.uleb128 0x19
 1271 019a 3C       		.uleb128 0x3c
 1272 019b 19       		.uleb128 0x19
 1273 019c 00       		.byte	0
 1274 019d 00       		.byte	0
 1275 019e 1E       		.uleb128 0x1e
 1276 019f 01       		.uleb128 0x1
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 38


 1277 01a0 01       		.byte	0x1
 1278 01a1 49       		.uleb128 0x49
 1279 01a2 13       		.uleb128 0x13
 1280 01a3 01       		.uleb128 0x1
 1281 01a4 13       		.uleb128 0x13
 1282 01a5 00       		.byte	0
 1283 01a6 00       		.byte	0
 1284 01a7 1F       		.uleb128 0x1f
 1285 01a8 21       		.uleb128 0x21
 1286 01a9 00       		.byte	0
 1287 01aa 49       		.uleb128 0x49
 1288 01ab 13       		.uleb128 0x13
 1289 01ac 2F       		.uleb128 0x2f
 1290 01ad 0B       		.uleb128 0xb
 1291 01ae 00       		.byte	0
 1292 01af 00       		.byte	0
 1293 01b0 20       		.uleb128 0x20
 1294 01b1 26       		.uleb128 0x26
 1295 01b2 00       		.byte	0
 1296 01b3 49       		.uleb128 0x49
 1297 01b4 13       		.uleb128 0x13
 1298 01b5 00       		.byte	0
 1299 01b6 00       		.byte	0
 1300 01b7 21       		.uleb128 0x21
 1301 01b8 34       		.uleb128 0x34
 1302 01b9 00       		.byte	0
 1303 01ba 03       		.uleb128 0x3
 1304 01bb 0E       		.uleb128 0xe
 1305 01bc 3A       		.uleb128 0x3a
 1306 01bd 0B       		.uleb128 0xb
 1307 01be 3B       		.uleb128 0x3b
 1308 01bf 05       		.uleb128 0x5
 1309 01c0 49       		.uleb128 0x49
 1310 01c1 13       		.uleb128 0x13
 1311 01c2 3F       		.uleb128 0x3f
 1312 01c3 19       		.uleb128 0x19
 1313 01c4 3C       		.uleb128 0x3c
 1314 01c5 19       		.uleb128 0x19
 1315 01c6 00       		.byte	0
 1316 01c7 00       		.byte	0
 1317 01c8 22       		.uleb128 0x22
 1318 01c9 2E       		.uleb128 0x2e
 1319 01ca 00       		.byte	0
 1320 01cb 3F       		.uleb128 0x3f
 1321 01cc 19       		.uleb128 0x19
 1322 01cd 3C       		.uleb128 0x3c
 1323 01ce 19       		.uleb128 0x19
 1324 01cf 6E       		.uleb128 0x6e
 1325 01d0 0E       		.uleb128 0xe
 1326 01d1 03       		.uleb128 0x3
 1327 01d2 0E       		.uleb128 0xe
 1328 01d3 3A       		.uleb128 0x3a
 1329 01d4 0B       		.uleb128 0xb
 1330 01d5 3B       		.uleb128 0x3b
 1331 01d6 05       		.uleb128 0x5
 1332 01d7 00       		.byte	0
 1333 01d8 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 39


 1334 01d9 00       		.byte	0
 1335              		.section	.debug_loc,"",%progbits
 1336              	.Ldebug_loc0:
 1337              	.LLST0:
 1338 0000 06000000 		.4byte	.LVL0
 1339 0004 3D000000 		.4byte	.LVL2-1
 1340 0008 0100     		.2byte	0x1
 1341 000a 50       		.byte	0x50
 1342 000b 52000000 		.4byte	.LVL5
 1343 000f 78000000 		.4byte	.LFE72
 1344 0013 0100     		.2byte	0x1
 1345 0015 50       		.byte	0x50
 1346 0016 00000000 		.4byte	0
 1347 001a 00000000 		.4byte	0
 1348              	.LLST1:
 1349 001e 3E000000 		.4byte	.LVL2
 1350 0022 4E000000 		.4byte	.LVL4
 1351 0026 0100     		.2byte	0x1
 1352 0028 50       		.byte	0x50
 1353 0029 00000000 		.4byte	0
 1354 002d 00000000 		.4byte	0
 1355              	.LLST2:
 1356 0031 4A000000 		.4byte	.LVL3
 1357 0035 4E000000 		.4byte	.LVL4
 1358 0039 0100     		.2byte	0x1
 1359 003b 50       		.byte	0x50
 1360 003c 00000000 		.4byte	0
 1361 0040 00000000 		.4byte	0
 1362              	.LLST3:
 1363 0044 4E000000 		.4byte	.LVL4
 1364 0048 52000000 		.4byte	.LVL5
 1365 004c 0100     		.2byte	0x1
 1366 004e 50       		.byte	0x50
 1367 004f 00000000 		.4byte	0
 1368 0053 00000000 		.4byte	0
 1369              	.LLST4:
 1370 0057 52000000 		.4byte	.LVL5
 1371 005b 56000000 		.4byte	.LVL6
 1372 005f 0100     		.2byte	0x1
 1373 0061 53       		.byte	0x53
 1374 0062 00000000 		.4byte	0
 1375 0066 00000000 		.4byte	0
 1376              		.section	.debug_aranges,"",%progbits
 1377 0000 24000000 		.4byte	0x24
 1378 0004 0200     		.2byte	0x2
 1379 0006 00000000 		.4byte	.Ldebug_info0
 1380 000a 04       		.byte	0x4
 1381 000b 00       		.byte	0
 1382 000c 0000     		.2byte	0
 1383 000e 0000     		.2byte	0
 1384 0010 00000000 		.4byte	.LFB72
 1385 0014 78000000 		.4byte	.LFE72-.LFB72
 1386 0018 00000000 		.4byte	.LFB73
 1387 001c 10000000 		.4byte	.LFE73-.LFB73
 1388 0020 00000000 		.4byte	0
 1389 0024 00000000 		.4byte	0
 1390              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 40


 1391              	.Ldebug_ranges0:
 1392 0000 06000000 		.4byte	.LBB36
 1393 0004 08000000 		.4byte	.LBE36
 1394 0008 0A000000 		.4byte	.LBB39
 1395 000c 0E000000 		.4byte	.LBE39
 1396 0010 00000000 		.4byte	0
 1397 0014 00000000 		.4byte	0
 1398 0018 00000000 		.4byte	.LFB72
 1399 001c 78000000 		.4byte	.LFE72
 1400 0020 00000000 		.4byte	.LFB73
 1401 0024 10000000 		.4byte	.LFE73
 1402 0028 00000000 		.4byte	0
 1403 002c 00000000 		.4byte	0
 1404              		.section	.debug_line,"",%progbits
 1405              	.Ldebug_line0:
 1406 0000 99010000 		.section	.debug_str,"MS",%progbits,1
 1406      02003101 
 1406      00000201 
 1406      FB0E0D00 
 1406      01010101 
 1407              	.LASF34:
 1408 0000 6B696E64 		.ascii	"kind\000"
 1408      00
 1409              	.LASF41:
 1410 0005 4B65726E 		.ascii	"Kernel_Context\000"
 1410      656C5F43 
 1410      6F6E7465 
 1410      787400
 1411              	.LASF77:
 1412 0014 45455F72 		.ascii	"EE_rq_bitmask\000"
 1412      715F6269 
 1412      746D6173 
 1412      6B00
 1413              	.LASF14:
 1414 0022 45455F55 		.ascii	"EE_UREG\000"
 1414      52454700 
 1415              	.LASF56:
 1416 002a 45455F68 		.ascii	"EE_hal_endcycle_ready\000"
 1416      616C5F65 
 1416      6E646379 
 1416      636C655F 
 1416      72656164 
 1417              	.LASF93:
 1418 0040 72716669 		.ascii	"rqfirst\000"
 1418      72737400 
 1419              	.LASF57:
 1420 0048 45455F6F 		.ascii	"EE_oo_call_PreTaskHook\000"
 1420      6F5F6361 
 1420      6C6C5F50 
 1420      72655461 
 1420      736B486F 
 1421              	.LASF23:
 1422 005f 7469636B 		.ascii	"ticksperbase\000"
 1422      73706572 
 1422      62617365 
 1422      00
 1423              	.LASF61:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 41


 1424 006c 45455F49 		.ascii	"EE_IRQ_release_all_items\000"
 1424      52515F72 
 1424      656C6561 
 1424      73655F61 
 1424      6C6C5F69 
 1425              	.LASF78:
 1426 0085 45455F74 		.ascii	"EE_th_event_active\000"
 1426      685F6576 
 1426      656E745F 
 1426      61637469 
 1426      766500
 1427              	.LASF79:
 1428 0098 45455F74 		.ascii	"EE_th_waswaiting\000"
 1428      685F7761 
 1428      73776169 
 1428      74696E67 
 1428      00
 1429              	.LASF2:
 1430 00a9 73686F72 		.ascii	"short int\000"
 1430      7420696E 
 1430      7400
 1431              	.LASF44:
 1432 00b3 4572726F 		.ascii	"ErrorHook_Context\000"
 1432      72486F6F 
 1432      6B5F436F 
 1432      6E746578 
 1432      7400
 1433              	.LASF38:
 1434 00c5 64656C74 		.ascii	"delta\000"
 1434      6100
 1435              	.LASF33:
 1436 00cb 73706563 		.ascii	"spec_id\000"
 1436      5F696400 
 1437              	.LASF15:
 1438 00d3 45455F46 		.ascii	"EE_FREG\000"
 1438      52454700 
 1439              	.LASF52:
 1440 00db 45455F54 		.ascii	"EE_TYPECONTEXT\000"
 1440      59504543 
 1440      4F4E5445 
 1440      585400
 1441              	.LASF32:
 1442 00ea 436F756E 		.ascii	"CounterObjectKindType\000"
 1442      7465724F 
 1442      626A6563 
 1442      744B696E 
 1442      64547970 
 1443              	.LASF13:
 1444 0100 45455F55 		.ascii	"EE_UINT32\000"
 1444      494E5433 
 1444      3200
 1445              	.LASF66:
 1446 010a 45455F49 		.ascii	"EE_IRQ_end_post_stub\000"
 1446      52515F65 
 1446      6E645F70 
 1446      6F73745F 
 1446      73747562 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 42


 1447              	.LASF70:
 1448 011f 45455F74 		.ascii	"EE_th_ready_prio\000"
 1448      685F7265 
 1448      6164795F 
 1448      7072696F 
 1448      00
 1449              	.LASF43:
 1450 0130 49535232 		.ascii	"ISR2_Context\000"
 1450      5F436F6E 
 1450      74657874 
 1450      00
 1451              	.LASF17:
 1452 013d 45455F54 		.ascii	"EE_TID\000"
 1452      494400
 1453              	.LASF65:
 1454 0144 45455F49 		.ascii	"EE_IRQ_end_instance\000"
 1454      52515F65 
 1454      6E645F69 
 1454      6E737461 
 1454      6E636500 
 1455              	.LASF24:
 1456 0158 6D696E63 		.ascii	"mincycle\000"
 1456      79636C65 
 1456      00
 1457              	.LASF26:
 1458 0161 76616C75 		.ascii	"value\000"
 1458      6500
 1459              	.LASF72:
 1460 0167 45455F74 		.ascii	"EE_th_status\000"
 1460      685F7374 
 1460      61747573 
 1460      00
 1461              	.LASF92:
 1462 0174 443A5C48 		.ascii	"D:\\H_da\\Winter Semester\\MM03 Advanced Microcontr"
 1462      5F64615C 
 1462      57696E74 
 1462      65722053 
 1462      656D6573 
 1463 01a4 6F6C6C65 		.ascii	"oller Systems and Embedded Operating Systems\\Lectu"
 1463      72205379 
 1463      7374656D 
 1463      7320616E 
 1463      6420456D 
 1464 01d6 72652050 		.ascii	"re Prof. Fromm\\workspace\\workspace_psoc\\Reaction"
 1464      726F662E 
 1464      2046726F 
 1464      6D6D5C77 
 1464      6F726B73 
 1465 0206 47616D65 		.ascii	"Game_with erika.cydsn\000"
 1465      5F776974 
 1465      68206572 
 1465      696B612E 
 1465      63796473 
 1466              	.LASF81:
 1467 021c 45455F6F 		.ascii	"EE_oo_counter_object_ROM\000"
 1467      6F5F636F 
 1467      756E7465 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 43


 1467      725F6F62 
 1467      6A656374 
 1468              	.LASF31:
 1469 0235 45455F6F 		.ascii	"EE_oo_counter_object_kind_type\000"
 1469      6F5F636F 
 1469      756E7465 
 1469      725F6F62 
 1469      6A656374 
 1470              	.LASF67:
 1471 0254 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1471      52515F6E 
 1471      65737469 
 1471      6E675F6C 
 1471      6576656C 
 1472              	.LASF12:
 1473 0269 45455F49 		.ascii	"EE_INT32\000"
 1473      4E543332 
 1473      00
 1474              	.LASF68:
 1475 0272 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1475      74645F65 
 1475      6E646379 
 1475      636C655F 
 1475      6E657874 
 1476              	.LASF85:
 1477 028b 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1477      6F5F4952 
 1477      515F7375 
 1477      7370656E 
 1477      645F7374 
 1478              	.LASF28:
 1479 02a4 45455F6F 		.ascii	"EE_oo_counter_RAM_type\000"
 1479      6F5F636F 
 1479      756E7465 
 1479      725F5241 
 1479      4D5F7479 
 1480              	.LASF51:
 1481 02bb 49646C65 		.ascii	"Idle_Context\000"
 1481      5F436F6E 
 1481      74657874 
 1481      00
 1482              	.LASF55:
 1483 02c8 45455F68 		.ascii	"EE_hal_endcycle_stacked\000"
 1483      616C5F65 
 1483      6E646379 
 1483      636C655F 
 1483      73746163 
 1484              	.LASF6:
 1485 02e0 6C6F6E67 		.ascii	"long long int\000"
 1485      206C6F6E 
 1485      6720696E 
 1485      7400
 1486              	.LASF10:
 1487 02ee 45455F49 		.ascii	"EE_INT8\000"
 1487      4E543800 
 1488              	.LASF18:
 1489 02f6 45455F54 		.ascii	"EE_TYPE_RQ_MASK\000"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 44


 1489      5950455F 
 1489      52515F4D 
 1489      41534B00 
 1490              	.LASF30:
 1491 0306 45455F53 		.ascii	"EE_SCHEDULETABLE\000"
 1491      43484544 
 1491      554C4554 
 1491      41424C45 
 1491      00
 1492              	.LASF4:
 1493 0317 6C6F6E67 		.ascii	"long int\000"
 1493      20696E74 
 1493      00
 1494              	.LASF22:
 1495 0320 6D617861 		.ascii	"maxallowedvalue\000"
 1495      6C6C6F77 
 1495      65647661 
 1495      6C756500 
 1496              	.LASF40:
 1497 0330 45455F6F 		.ascii	"EE_oo_counter_object_RAM_type\000"
 1497      6F5F636F 
 1497      756E7465 
 1497      725F6F62 
 1497      6A656374 
 1498              	.LASF25:
 1499 034e 45455F6F 		.ascii	"EE_oo_counter_ROM_type\000"
 1499      6F5F636F 
 1499      756E7465 
 1499      725F524F 
 1499      4D5F7479 
 1500              	.LASF54:
 1501 0365 45455F61 		.ascii	"EE_as_set_execution_context\000"
 1501      735F7365 
 1501      745F6578 
 1501      65637574 
 1501      696F6E5F 
 1502              	.LASF19:
 1503 0381 5469636B 		.ascii	"TickType\000"
 1503      54797065 
 1503      00
 1504              	.LASF76:
 1505 038a 45455F73 		.ascii	"EE_sys_ceiling\000"
 1505      79735F63 
 1505      65696C69 
 1505      6E6700
 1506              	.LASF20:
 1507 0399 436F756E 		.ascii	"CounterObjectType\000"
 1507      7465724F 
 1507      626A6563 
 1507      74547970 
 1507      6500
 1508              	.LASF88:
 1509 03ab 45455F72 		.ascii	"EE_rq2stk_exchange\000"
 1509      71327374 
 1509      6B5F6578 
 1509      6368616E 
 1509      676500
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 45


 1510              	.LASF60:
 1511 03be 45455F6F 		.ascii	"EE_oo_check_disableint_error\000"
 1511      6F5F6368 
 1511      65636B5F 
 1511      64697361 
 1511      626C6569 
 1512              	.LASF9:
 1513 03db 6C6F6E67 		.ascii	"long double\000"
 1513      20646F75 
 1513      626C6500 
 1514              	.LASF80:
 1515 03e7 45455F63 		.ascii	"EE_counter_ROM\000"
 1515      6F756E74 
 1515      65725F52 
 1515      4F4D00
 1516              	.LASF91:
 1517 03f6 47656E65 		.ascii	"Generated_Source\\PSoC5\\ErikaOS_1_ee_irqendin.c\000"
 1517      72617465 
 1517      645F536F 
 1517      75726365 
 1517      5C50536F 
 1518              	.LASF1:
 1519 0425 756E7369 		.ascii	"unsigned char\000"
 1519      676E6564 
 1519      20636861 
 1519      7200
 1520              	.LASF83:
 1521 0433 45455F6F 		.ascii	"EE_oo_counter_object_RAM\000"
 1521      6F5F636F 
 1521      756E7465 
 1521      725F6F62 
 1521      6A656374 
 1522              	.LASF0:
 1523 044c 7369676E 		.ascii	"signed char\000"
 1523      65642063 
 1523      68617200 
 1524              	.LASF7:
 1525 0458 6C6F6E67 		.ascii	"long long unsigned int\000"
 1525      206C6F6E 
 1525      6720756E 
 1525      7369676E 
 1525      65642069 
 1526              	.LASF63:
 1527 046f 746E6578 		.ascii	"tnext\000"
 1527      7400
 1528              	.LASF59:
 1529 0475 45455F73 		.ascii	"EE_stk_queryfirst\000"
 1529      746B5F71 
 1529      75657279 
 1529      66697273 
 1529      7400
 1530              	.LASF8:
 1531 0487 756E7369 		.ascii	"unsigned int\000"
 1531      676E6564 
 1531      20696E74 
 1531      00
 1532              	.LASF62:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 46


 1533 0494 45455F49 		.ascii	"EE_IRQ_run_next_task\000"
 1533      52515F72 
 1533      756E5F6E 
 1533      6578745F 
 1533      7461736B 
 1534              	.LASF74:
 1535 04a9 45455F74 		.ascii	"EE_th_rnact\000"
 1535      685F726E 
 1535      61637400 
 1536              	.LASF90:
 1537 04b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1537      43313120 
 1537      352E342E 
 1537      31203230 
 1537      31363036 
 1538 04e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1538      20726576 
 1538      6973696F 
 1538      6E203233 
 1538      37373135 
 1539 051b 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1539      66756E63 
 1539      74696F6E 
 1539      2D736563 
 1539      74696F6E 
 1540              	.LASF58:
 1541 0543 45455F6F 		.ascii	"EE_oo_call_PostTaskHook\000"
 1541      6F5F6361 
 1541      6C6C5F50 
 1541      6F737454 
 1541      61736B48 
 1542              	.LASF42:
 1543 055b 5441534B 		.ascii	"TASK_Context\000"
 1543      5F436F6E 
 1543      74657874 
 1543      00
 1544              	.LASF3:
 1545 0568 73686F72 		.ascii	"short unsigned int\000"
 1545      7420756E 
 1545      7369676E 
 1545      65642069 
 1545      6E7400
 1546              	.LASF49:
 1547 057b 53687574 		.ascii	"ShutdownHook_Context\000"
 1547      646F776E 
 1547      486F6F6B 
 1547      5F436F6E 
 1547      74657874 
 1548              	.LASF35:
 1549 0590 45455F6F 		.ascii	"EE_oo_counter_object_ROM_type\000"
 1549      6F5F636F 
 1549      756E7465 
 1549      725F6F62 
 1549      6A656374 
 1550              	.LASF11:
 1551 05ae 45455F55 		.ascii	"EE_UINT16\000"
 1551      494E5431 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 47


 1551      3600
 1552              	.LASF50:
 1553 05b8 416C6172 		.ascii	"AlarmCallback_Context\000"
 1553      6D43616C 
 1553      6C626163 
 1553      6B5F436F 
 1553      6E746578 
 1554              	.LASF53:
 1555 05ce 45455F4F 		.ascii	"EE_ORTI_set_th_eq_dispatch_prio\000"
 1555      5254495F 
 1555      7365745F 
 1555      74685F65 
 1555      715F6469 
 1556              	.LASF82:
 1557 05ee 45455F63 		.ascii	"EE_counter_RAM\000"
 1557      6F756E74 
 1557      65725F52 
 1557      414D00
 1558              	.LASF86:
 1559 05fd 45455F41 		.ascii	"EE_ApplicationMode\000"
 1559      70706C69 
 1559      63617469 
 1559      6F6E4D6F 
 1559      646500
 1560              	.LASF5:
 1561 0610 6C6F6E67 		.ascii	"long unsigned int\000"
 1561      20756E73 
 1561      69676E65 
 1561      6420696E 
 1561      7400
 1562              	.LASF16:
 1563 0622 45455F54 		.ascii	"EE_TYPEBOOL\000"
 1563      59504542 
 1563      4F4F4C00 
 1564              	.LASF75:
 1565 062e 45455F73 		.ascii	"EE_stkfirst\000"
 1565      746B6669 
 1565      72737400 
 1566              	.LASF45:
 1567 063a 50726F74 		.ascii	"ProtectionHook_Context\000"
 1567      65637469 
 1567      6F6E486F 
 1567      6F6B5F43 
 1567      6F6E7465 
 1568              	.LASF46:
 1569 0651 50726554 		.ascii	"PreTaskHook_Context\000"
 1569      61736B48 
 1569      6F6F6B5F 
 1569      436F6E74 
 1569      65787400 
 1570              	.LASF29:
 1571 0665 45455F41 		.ascii	"EE_ALARM\000"
 1571      4C41524D 
 1571      00
 1572              	.LASF47:
 1573 066e 506F7374 		.ascii	"PostTaskHook_Context\000"
 1573      5461736B 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 48


 1573      486F6F6B 
 1573      5F436F6E 
 1573      74657874 
 1574              	.LASF36:
 1575 0683 75736564 		.ascii	"used\000"
 1575      00
 1576              	.LASF69:
 1577 0688 73697A65 		.ascii	"sizetype\000"
 1577      74797065 
 1577      00
 1578              	.LASF21:
 1579 0691 436F756E 		.ascii	"CounterType\000"
 1579      74657254 
 1579      79706500 
 1580              	.LASF64:
 1581 069d 63757272 		.ascii	"current\000"
 1581      656E7400 
 1582              	.LASF71:
 1583 06a5 45455F74 		.ascii	"EE_th_dispatch_prio\000"
 1583      685F6469 
 1583      73706174 
 1583      63685F70 
 1583      72696F00 
 1584              	.LASF73:
 1585 06b9 45455F74 		.ascii	"EE_th_next\000"
 1585      685F6E65 
 1585      787400
 1586              	.LASF89:
 1587 06c4 45455F72 		.ascii	"EE_rq_queryfirst\000"
 1587      715F7175 
 1587      65727966 
 1587      69727374 
 1587      00
 1588              	.LASF37:
 1589 06d5 636E7463 		.ascii	"cntcycle\000"
 1589      79636C65 
 1589      00
 1590              	.LASF84:
 1591 06de 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1591      6F5F4952 
 1591      515F6469 
 1591      7361626C 
 1591      655F636F 
 1592              	.LASF48:
 1593 06f6 53746172 		.ascii	"StartupHook_Context\000"
 1593      74757048 
 1593      6F6F6B5F 
 1593      436F6E74 
 1593      65787400 
 1594              	.LASF39:
 1595 070a 6E657874 		.ascii	"next\000"
 1595      00
 1596              	.LASF87:
 1597 070f 45455F72 		.ascii	"EE_rq_lookup\000"
 1597      715F6C6F 
 1597      6F6B7570 
 1597      00
ARM GAS  C:\Users\Reza\AppData\Local\Temp\cc56VQfM.s 			page 49


 1598              	.LASF27:
 1599 071c 66697273 		.ascii	"first\000"
 1599      7400
 1600              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
